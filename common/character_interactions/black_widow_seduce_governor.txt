black_widow_seduce_governor = { #Female entice gov, dont need spy and must marry

	on_other_nation = yes
	on_own_nation = no
	
	message = no
	
	sound = "event:/SFX/UI/Character/Generic/sfx_ui_character_corruption"
	
	potential_trigger = {
		hidden:scope:target = {
			NOT = { employer = scope:actor }
			NOT = { employer = { tag = REB } }
			NOT = { employer = { tag = BAR } }
			is_alive = yes
			is_mercenary = no
			is_male = yes
			NOT = {
				this = scope:actor.current_ruler
			}
			NOT = {
				has_variable = character_bewitched
			}
			scope:actor.current_ruler = {
				is_female = yes
				age < 45
				OR = {
					has_trait = fair
					has_trait = lustful
					has_trait = loving
					has_trait = assertive
					has_trait = crafty
					has_trait = reckless
					has_trait = rash
					has_trait = vengeful
					has_trait = brave
					has_trait = daring
					has_trait = confident
					has_trait = aggressive
					has_trait = coastal_raider
					has_trait = disciplined
					has_trait = squadron_leader
					has_trait = improviser
					has_trait = oarmaster
					has_trait = original_thinker
					has_trait = princeps
					has_trait = seadog
					has_trait = steadfast
					has_trait = tough
					has_trait = tactician
					has_trait = ambitious
					has_culture_group = aryan
				}
				NOR = {
					has_trait = ugly
					has_trait = chaste
					has_trait = dementia
					has_trait = hunchback
					has_trait = gangrene
					has_trait = leper
					has_trait = mentagra
					has_trait = pox
					has_trait = plague
					has_trait = paralysis
					has_trait = invalid
					has_trait = dysentery
					has_trait = diphtheria
					has_trait = cancer
					has_trait = brain_damaged
					has_trait = hemorrhagic_fever
					has_trait = pneumonia
				}	
			}
		}
	}
	
	
	allowed_trigger = {
		hidden:scope:actor = {
			can_pay_price = secude_governor #black_widow
		}
		scope:actor.current_ruler = {
			is_married = no
		}
		scope:target = {
			is_governor = yes
			is_ruler = no
			loyalty <= 40
			is_friend = scope:actor.current_ruler
			NOT = {
				is_primary_heir = yes
			}
			custom_tooltip = {
				text = must_have_adjacent_disloyal_state #black_widow
				any_governor_state = {
					any_state_province = {
						state_loyalty <= 50
						any_neighbor_province = {
							has_owner = yes
							owner = scope:actor
						}
					}
				}
			}
			NOR = {
				has_trait = suspicious
				has_trait = sceptical
				has_trait = castrated
				has_trait = chaste
				has_trait = cold
				has_trait = gangrene
				has_trait = leper
				has_trait = mentagra
				has_trait = pox
				has_trait = plague
				has_trait = paralysis
				has_trait = invalid
				has_trait = dysentery
				has_trait = diphtheria
				has_trait = cancer
				has_trait = brain_damaged
				has_trait = hemorrhagic_fever
				has_trait = pneumonia
			}
		}
	} 

	effect = {
		scope:actor.current_ruler.employer = {
			hidden_effect = {
				set_variable = {
					name = bewitching_nation
					days = 45
				}
			}
		save_scope_as = bewitcher	
		}
		
		scope:target = {
			hidden_effect = {
				set_variable = {
					name = character_bewitched
					days = 180
				}
			}
		save_scope_as = bewitched_gov
		}
		scope:target.employer = {
			hidden_effect = {
				set_variable = {
					name = nation_bewitched
					days = 45
				}
			}
		save_scope_as = bewitchee
		}
		
		scope:target.employer = {
			hidden_effect = {
				set_variable = {
					name = roll
						value = { integer_range = { min = 1 max = 18 } }
				}
				if = { 
					limit = {
						has_variable = roll
						var:roll <= scope:actor.current_ruler.charisma
					}
					scope:actor = {
						pay_price = secude_governor #black_widow ################ Must divorce husband and marry him ####### CHECK INSPIRE DISLOYALTY
					}
					scope:target = {
						if = {
							limit = {
								is_friend = scope:target.employer.current_ruler
							}
							remove_friend = scope:target.employer.current_ruler
						}
						employer = {
							add_opinion = {
								target = scope:actor
								modifier = enticed_our_governor
							}
						}
						show_as_tooltip = { move_country = scope:actor }
						custom_tooltip = adjacent_provinces_enticed
						custom_tooltip = province_claims_enticed
						hidden_effect = {
							every_governor_state = {
								limit = {
									any_state_province = {
										state_loyalty <= 50
										any_neighbor_province = {
											owner = scope:actor
										}
									}
								}
								every_state_province = {
									set_owned_by = scope:actor
									add_claim = scope:target.employer
									save_scope_as = to_set_governor
								}
							}
						}
						hidden_effect = {
							if = {
								limit = {
									num_of_children > 0
									any_child = {
										is_adult = no
									}
								}
								add_character_modifier = {
									name = abandoned_family
									duration = -1
								}
								every_child = {
									limit = {
										is_adult = no
									}
									add_character_modifier = {
										name = absentee_father
										duration = -1
									}
								}
							}
						}
						hidden_effect = {
							remove_all_positions = yes
							move_country = scope:actor
							remove_character_modifier = foreign_citizen
							set_as_minor_character = THIS
							set_home_country = scope:actor
						}
						hidden_effect = {
							if = {
								limit = {
									exists = scope:to_set_governor 
								}
								scope:to_set_governor = {
									set_as_governor = scope:target
								}
							}
						}
						hidden_effect = {
							if = {
								limit = {
									is_married = yes
								}
								divorce_character = spouse
								marry_character = scope:actor.current_ruler
							}
							else_if = {
								limit = {
									is_married = no
								}
								marry_character = scope:actor.current_ruler
							}
						}
					}
					scope:actor.current_ruler.employer = {
						trigger_event = { 
							id = temptress.23
							days = 3
						}
					}
				}
	
				else = {
					scope:actor.current_ruler.employer = {
						trigger_event = { 
							id = temptress.25
							days = 15
						}
					}
				}
				remove_variable = roll
			}	
		}
	}	
}
