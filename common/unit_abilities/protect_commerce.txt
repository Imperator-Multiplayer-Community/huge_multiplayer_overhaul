protect_commerce = {
	duration = -1
	enable = yes
	toggle = yes
	navy_only = yes
	cancel_on_combat_end = yes

	map = yes

	soundeffect ="event:/SFX/UI/Unit/sfx_ui_unit_reorganization"

	allow = {
		is_navy = yes
		unit_size >= 10
		in_combat = no
		is_moving = no
		is_exiled = no
		in_siege = no
		has_commander = yes
		trigger_if = {
			limit = {
				exists = commander
			}
			commander = {
				loyalty > 33
			}
		}

		NOT = {
			OR = {
				unit_owner = { has_country_modifier = protect_merchants }  #New addition, lets see if it works
				unit_owner = { has_low_economic_policy = expense_navy }
			} 
		}

		trigger_if = {
			limit = {
				unit_location = {
					any_neighbor_province = {
						has_province_modifier = trading_partner
					}
				}
			}

			custom_tooltip = {
				text = trading_cooldown_tooltip
				always = no
			}
		}
		trigger_else_if = {
			limit = {
				NOT = {
					can_protect_trade = yes
				}
			}

			custom_tooltip = {
				text = explain_trading_tooltip
				always = no
			}
		}
		trigger_else = {
			can_protect_trade = yes
		}
	}
	

	start_effect = {
		if = {
			limit = {
				can_protect_trade = yes
			}

			hidden_effect = {
				set_variable = { 
					name = starting_num_of_ships
					value = num_of_ships_svalue
				}
				set_variable = is_navy_protecting_commerce
			}

			show_as_tooltip = { 
				while = {
					count = num_of_ships_svalue
					unit_owner = {
						add_country_modifier = {
							name = protect_merchants
							duration = -1
							mode = add
						}
					}
				}

				add_unit_modifier = {
					name = naval_action
					duration = -1
				}

				unit_location = {
					ordered_neighbor_province = {
						limit = {
							trading_partner_province_trigger = yes
							owner = {
								NOT = {
									war_with = root.unit_owner
								}
							}
							owner = controller
							NOT = {
								owner = root.unit_owner
							}
						}
						max = 1
						custom = trading_explain_modifier_tooltip
						add_province_modifier = {
							name = trading_partner
							duration = -1
						}
					}
				}
			}
			
			hidden_effect = {
				add_unit_modifier = {
					name = naval_action
					duration = -1
				}

				while = {
					count = num_of_ships_svalue
					unit_owner = {
						add_country_modifier = {
							name = protect_merchants
							duration = -1
							mode = add
						}
					}
				}

				unit_location = {
					ordered_neighbor_province = {
						limit = {
							trading_partner_province_trigger = yes
							owner = {
								NOT = {
									war_with = root.unit_owner
								}
							}
							owner = controller
							NOT = {
								owner = root.unit_owner
							}
						}
						order_by = total_population
						max = 1

						add_province_modifier = {
							name = trading_partner
							duration = -1
						}
					}
				}
			}
		}
	}

	finished_when = {
		OR = {
			is_exiled = yes
			unit_owner = { has_low_economic_policy = expense_navy }
			is_moving = yes
			in_combat = yes
			has_commander = no
			strength_percentage < 0.3
			morale_percentage < 0.3
			navy_drilling = yes
			navy_slave_raiding = yes
			navy_supplying = yes
			navy_assaulting = yes
			navy_fishing = yes
			navy_raiding = yes
			navy_raiding_commerce = yes
		}
	}

	finish_effect = {
		remove_variable = is_navy_protecting_commerce
		remove_unit_modifier = naval_action

		unit_location = {
			every_neighbor_province = {
				limit = {
					has_province_modifier = trading_partner
				}

				remove_province_modifier = trading_partner
			}
		}


		if = {
			limit = {
				unit_owner = {
					any_navy = {
						navy_protecting_commerce = yes
					}
				}
			}

			while = {
				count = var:starting_num_of_ships
				unit_owner = {
					add_country_modifier = {
						name = unprotected_merchants
						duration = -1
						mode = add
					}
				}
			}
		}
		else = {
			unit_owner = {
				remove_country_modifier = protect_merchants
				remove_country_modifier = unprotected_merchants
			}
		}

		remove_variable = starting_num_of_ships
	}
	
	ai_will_do = {
		modifier = {
			trigger = {

				experience_percentage < 0.65
				
				unit_owner = {
					treasury > 50
					manpower > 20
				}
			}
			add = {
				value = 250
				divide = unit_size_rank
			}
		}
	}
	
	ai_will_revoke = {
		OR = {
			is_idle = no
			unit_threat > 0.2
			experience_percentage >= 0.95

			unit_owner = {
				treasury < 1
			}
			unit_owner = {
				months_to_war < 12
			}
		}
	}
}