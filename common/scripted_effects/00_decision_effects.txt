switch_government_type_event_clearup_effect = { # If we need to clear anything silently on gov switch - put it here!
	hidden_effect = {
		if = {
			limit = {
				has_variable = dictatorship_enabled
			}
			remove_variable = dictatorship_enabled
			set_ignore_senate_approval = no
		}
		if = {
			limit = {
				current_ruler = {
					has_variable = dictator_holding_power
				}
			}
			current_ruler = {
				remove_variable = dictator_holding_power
			}
		}
		if = {
			limit = {
				has_country_modifier = electoral_extension_mod
			}
			remove_country_modifier = electoral_extension_mod
		}
		if = {
			limit = {
				is_subject_type = vassal_tribe
				is_tribal = no
			}
			trigger_event = { id = country_diplomacy.38 } #We will now be tributary
		}
	}
}

tribal_formable_government_change_effect = {
	if = {
		limit = {
			is_tribal = yes
			NOT = { government = tribal_federation }
		}
		change_government = tribal_federation
	}
	else = {
		add_political_influence = 150
	}
}

monarchy_formable_government_change_effect = {
	add_political_influence = 150
}

monarchy_republic_into_imperium_formable_effect = {
	if = {
		limit = {
			is_monarchy = yes
			NOR = {
				government = imperium
				government = imperial_cult
			}
		}
		republic_to_monarchy_law_variable_effect = yes # decide which legion law should be transferred
		change_government = imperium
		republic_to_monarchy_law_change_effect = yes # change legion law based on variable if present
	}
	else = {
		add_political_influence = 300
	}
}

koine_effect = {
	add_country_modifier = {
		name = "grand_koine"
		duration = -1
	}
	capital_scope = {
		add_province_modifier = {
			name = great_formable_koine_capital_modifier
			duration = -1
		}
	}
}

delian_effect = {
	add_country_modifier = {
		name = "delian_league_modifier"
		duration = -1
	}
	capital_scope = {
		add_province_modifier = {
			name = great_formable_koine_capital_modifier
			duration = -1
		}
	}
}

add_1_free_province_investments = {
	custom_tooltip = "gain_1_free_investment_tt"
	if = {
		limit = {
			NOT = {
				has_variable = free_investments
			}
		}
		set_variable = {
			name = free_investments
			value = 1
		}
	}
	else = {
		change_variable = {
			name = free_investments
			add = 1
		}
	}
}

add_2_free_province_investments = {
	custom_tooltip = "gain_2_free_investment_tt"
	if = {
		limit = {
			NOT = {
				has_variable = free_investments
			}
		}
		set_variable = {
			name = free_investments
			value = 2
		}
	}
	else = {
		change_variable = {
			name = free_investments
			add = 2
		}
	}
}

add_3_free_province_investments = {
	custom_tooltip = "gain_3_free_investment_tt"
	if = {
		limit = {
			NOT = {
				has_variable = free_investments
			}
		}
		set_variable = {
			name = free_investments
			value = 3
		}
	}
	else = {
		change_variable = {
			name = free_investments
			add = 3
		}
	}
}

add_4_free_province_investments = {
	custom_tooltip = "gain_4_free_investment_tt"
	if = {
		limit = {
			NOT = {
				has_variable = free_investments
			}
		}
		set_variable = {
			name = free_investments
			value = 4
		}
	}
	else = {
		change_variable = {
			name = free_investments
			add = 4
		}
	}
}

add_5_free_province_investments = {
	custom_tooltip = "gain_5_free_investment_tt"
	if = {
		limit = {
			NOT = {
				has_variable = free_investments
			}
		}
		set_variable = {
			name = free_investments
			value = 5
		}
	}
	else = {
		change_variable = {
			name = free_investments
			add = 5
		}
	}
}

subtract_manpower_effect_10 = {
	if = {
		limit = {
			manpower >= 10
		}
		add_manpower = -10
	}
	else = {
		add_stability = -10
	}
}

add_stability_effect_small = {
	add_stability = 3
}

remove_stability_effect_small = {
	add_stability = -5
}

hibernia_owner_check_effect = {
	every_area_province = {
		limit = {
			exists = owner
			NOR = {
				owner = root
				owner = {
					is_ai = no
				}
			}
		}
		set_owned_by = root
	}
}

formable_region_province_effect = {
	every_region_province = {
		limit = {
			NOT = { owner = root }
		}
		add_claim = root
	}
}

formable_area_province_effect = {
	every_area_province = {
		limit = {
			NOT = { owner = root }
		}
		add_claim = root
	}
}

formable_area_conquest_effect = {
	every_area_province = {
		limit = {
			NOR = {
				owner = root
				owner = {
					is_ai = no
				}
				province_id = 2108
			}
		}
		set_conquered_by = root
	}
}

formable_area_helvetia_conquest_effect = {
	every_area_province = {
		limit = {
			NOR = {
				owner = root
				owner = {
					is_ai = no
				}
				province_id = 3637
				province_id = 3739
				province_id = 3639
			}
		}
		set_conquered_by = root
	}
}

formable_province_conquest_effect = {
	if = {
		limit = {
			NOR = {
				owner = root
				owner = {
					is_ai = no
				}
			}
		}
		set_conquered_by = root
	}
}

theocratic_party_approval_effect = {
	if = {
		limit = { 
			is_republic = yes
			government = theocratic_republic
			has_party_type = traditionalist_party
		}
		add_party_approval = {
			party_type = traditionalist_party
			value = -10
		}
	}
}

democratic_party_approval_effect = {
	if = {
		limit = { 
			is_republic = yes
			government = democratic_republic
			has_party_type = democratic_party
		}
		add_party_approval = {
			party_type = democratic_party
			value = -10
		}
	}
}

oligarchic_party_approval_effect = {
	if = {
		limit = { 
			is_republic = yes
			government = oligarchic_republic
			has_party_type = oligarchic_party
		}
		add_party_approval = {
			party_type = oligarchic_party
			value = -10
		}
	}
}

traditionalist_party_approval_effect = {
	if = {
		limit = { 
			is_republic = yes
			government = theocratic_republic
			has_party_type = traditionalist_party
		}
		add_party_approval = {
			party_type = traditionalist_party
			value = -10
		}
	}
	else_if = {
		limit = { 
			is_republic = yes
			has_party_type = traditionalist_party
		}
		add_party_approval = {
			party_type = traditionalist_party
			value = -5
		}
	}
}

increased_rights_cleanup_effect = {
	#ROOT = Country
	#scope:target_culture = Country culture being degraded
	
	#Here we remove rights that can only be granted to non-integrated once a culture is integrated or primary
	
	if = {
		limit = {
			scope:target = { #Now Nobles or Citizens
				OR = {
					is_pop_type_right = citizen
					is_pop_type_right = nobles
				}
			}
		}
		
		#Intermarriage:
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = right_of_marriage
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = right_of_marriage
			}
			if = {
				limit = { has_country_modifier = extended_right_of_marriage }
				remove_country_modifier = extended_right_of_marriage
			}
		}
		
		#Torture:
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = torture_protection
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = torture_protection
			}
			if = {
				limit = { has_country_modifier = extended_torture_protection }
				remove_country_modifier = extended_torture_protection
			}
		}
		
		#Contracts:
		if = { 
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = right_to_enter_contracts
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = right_to_enter_contracts
			}
			if = {
				limit = { has_country_modifier = extended_contract_rights }
				remove_country_modifier = extended_contract_rights
			}
		}
		
		#Inheritance:
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = inheritance_right
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = inheritance_right
			}
			if = {
				limit = { has_country_modifier = extended_inheritance_right }
				remove_country_modifier = extended_inheritance_right
			}
		}
		
		#Colonial Occupation:
		#We don't clear the local modifier.
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = colonia_founded
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = colonia_founded
			}
			if = {
				limit = { has_country_modifier = colonia_project }
				remove_country_modifier = colonia_project
			}
		}
		
		
		#Officer rights
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = officer_right
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = officer_right
			}
			if = {
				limit = { has_country_modifier = extended_officer_right }
				remove_country_modifier = extended_officer_right
			}
		}
	}
}

reduced_rights_cleanup_effect = {
	#ROOT = Country
	#scope:target = New target poptype, target_culture contains the current one
	#scope:target_culture = Country culture being degraded
	
	#Here we remove rights that can only be granted to Integrated or Primary culture if a culture drops to non-integrated

	
	if = {
		limit = {
			scope:target = { #Not Nobles, Not Citizens
				NOT = { is_pop_type_right = citizen }
				NOT = { is_pop_type_right = nobles }
			}
		}
		
		#State culture Dropping:
		
		
		#Trial Rights
		if = { 
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = trial_right
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = trial_right
			}
			if = {
				limit = { has_country_modifier = extended_trial_rights }
				remove_country_modifier = extended_trial_rights
			}
		}
		
		#Eased Restrictions on Citizenship
		
		if = { 
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = citizenship_by_adoption
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = citizenship_by_adoption
			}
		}
		
		#Protected Land Rights:
		
		if = { 
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = land_protection
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = land_protection
			}
			
			if = {
				limit = { has_country_modifier = extended_land_protection }
				remove_country_modifier = extended_land_protection
			}
		}
		
		#Integrated Cultures dropping:
		
		#Municipal Rule: We don't clean up the Municipal self rule since it expires on its own and the subject still likely exists.
		
		
		#Honor Guard
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = honor_guard
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = honor_guard
			}
			every_country_culture = {
				limit = {
					has_country_culture_modifier = honor_guard_other
				}
				remove_country_culture_modifier = honor_guard_other
			}
			#The character modifier clears itself.
		}
		
		#Patronage for all Culture Groups ########################################################################
		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_literature
			}
			if = {
				limit = { has_country_modifier = impressive_culture_literature }
				remove_country_modifier = impressive_culture_literature
			}
			# if = {
			# 	limit = { has_variable = impressive_culture_literature }
			# 	remove_variable = impressive_culture_literature
			# }
		}


		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_greek_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_greek_literature
			}
			if = {
				limit = { has_country_modifier = impressive_greek_culture_literature }
				remove_country_modifier = impressive_greek_culture_literature
			}
			
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_latin_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_latin_literature
			}
			if = {
				limit = { has_country_modifier = impressive_latin_culture_literature }
				remove_country_modifier = impressive_latin_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_celtic_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_celtic_literature
			}
			if = {
				limit = { has_country_modifier = impressive_celtic_culture_literature }
				remove_country_modifier = impressive_celtic_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_indian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_indian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_indian_culture_literature }
				remove_country_modifier = impressive_indian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_iberian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_iberian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_iberian_culture_literature }
				remove_country_modifier = impressive_iberian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_haemic_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_haemic_literature
			}
			if = {
				limit = { has_country_modifier = impressive_haemic_culture_literature }
				remove_country_modifier = impressive_haemic_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_punic_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_punic_literature
			}
			if = {
				limit = { has_country_modifier = impressive_punic_culture_literature }
				remove_country_modifier = impressive_punic_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_numidian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_numidian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_numidian_culture_literature }
				remove_country_modifier = impressive_numidian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_egyptian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_egyptian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_egyptian_culture_literature }
				remove_country_modifier = impressive_egyptian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_mesopotamian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_mesopotamian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_mesopotamian_culture_literature }
				remove_country_modifier = impressive_mesopotamian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_nubian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_nubian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_nubian_culture_literature }
				remove_country_modifier = impressive_nubian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_arabian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_arabian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_arabian_culture_literature }
				remove_country_modifier = impressive_arabian_culture_literature
			}
		}


		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_persian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_persian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_persian_culture_literature }
				remove_country_modifier = impressive_persian_culture_literature
			}
		}

		if = {
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = patronizing_anatolian_literature
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = patronizing_anatolian_literature
			}
			if = {
				limit = { has_country_modifier = impressive_anatolian_culture_literature }
				remove_country_modifier = impressive_anatolian_culture_literature
			}
		}

######################################################################
		
		if = { #Promote Administrators
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = promoted_administrators_in_subcultures
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = promoted_administrators_in_subcultures
			}
			every_country_culture = {
				limit = {
					this.culture.culture_group = scope:target_culture.culture.culture_group
					has_country_culture_modifier = administrators_cultmodifier
				}
				remove_country_culture_modifier = administrators_cultmodifier
			}
		}

		if = { #Petty Nobles
			limit = {
				scope:target_culture = {
					has_country_culture_modifier = petty_noble
				}
			}
			scope:target_culture = {
				remove_country_culture_modifier = petty_noble
			}
			every_country_culture = {
				limit = {
					has_country_culture_modifier = petty_noble_other
				}
				remove_country_culture_modifier = petty_noble_other
			}
			#The character modifier clears itself.
		}

	}
}

slavery_unhappiness_cleanup = {
	if = {
		limit = {
			scope:target = { NOT = { is_pop_type_right = slaves } }
			scope:target_culture = {
				has_country_culture_modifier = slave_rights_imposed
			}
		}
		scope:target_culture = { 
			remove_country_culture_modifier = slave_rights_imposed
		}
	}
}

set_primary_culture_cleanup_effect = {
	#THIS = Country, so inside random country culture PREV = Country
	#NEW_PRIMARY_CULTURE = The tag of the culture
	#MAKE_OLD_CULTURE_INTEGRATED = Check for if the dropping culture should remain integrated or not.
	
	#This clears all modifiers on the old primary culture as well as the new primary culture.
	
	hidden_effect = { #The tooltip already says you are changing primary culture.
		random_country_culture = { #Old Primary Culture modifier removal
			limit = { this.culture = prev.culture }#Country culture tag
			#Trial Rights
			if = {
				limit = {
					has_country_culture_modifier = trial_right
				}
				remove_country_culture_modifier = trial_right
				PREV = {
					if = {
						limit = { has_country_modifier = extended_trial_rights }
						remove_country_modifier = extended_trial_rights
					}
				}
			}
			
			#Eased Restrictions on Citizenship
			
			if = { 
				limit = {
					has_country_culture_modifier = citizenship_by_adoption
				}
				remove_country_culture_modifier = citizenship_by_adoption
			}
			
			#Protected Land Rights:
			
			if = { 
				limit = {
					has_country_culture_modifier = land_protection
				}
				remove_country_culture_modifier = land_protection
				PREV = {
					if = {
						limit = { has_country_modifier = extended_land_protection }
						remove_country_modifier = extended_land_protection
					}
				}
			}
			
			#We do not remove the exemption from Census Tax, since it has a specific decision to repeal.
			save_scope_as = old_primary_culture
		}
		
		random_country_culture = { #New country culture
			limit = {
				is_culture = $NEW_PRIMARY_CULTURE$
			}
			
			if = {
				limit = { is_integrated = no }
				ROOT = { integrate_country_culture = PREV }
			}
			
			#Patronage
			if = {
				limit = {
					has_country_culture_modifier = patronizing_literature
				}
				remove_country_culture_modifier = patronizing_literature
				PREV = {
					if = {
						limit = { has_country_modifier = impressive_culture_literature }
						remove_country_modifier = impressive_culture_literature
					}
				}
			}
			
			#Municipal self rule should not be a thing your primary culture needs to be happy about.
			if = {
				limit = {
					has_country_culture_modifier = bestowed_city_rights
				}
				remove_country_culture_modifier = bestowed_city_rights
			}
			
			#Promote Administrators
			if = {
				limit = {
					has_country_culture_modifier = promoted_administrators_in_subcultures
				}
				remove_country_culture_modifier = promoted_administrators_in_subcultures
				PREV = {
					every_country_culture = {
						limit = {
							this.culture.culture_group = prev.culture.culture_group
							has_country_culture_modifier = administrators_cultmodifier
						}
						remove_country_culture_modifier = administrators_cultmodifier
					}
				}
			}
			
			#Honor Guard
			
			if = {
				limit = {
					has_country_culture_modifier = honor_guard
				}
				remove_country_culture_modifier = honor_guard
				PREV = {
					every_country_culture = {
						limit = {
							has_country_culture_modifier = honor_guard_other
						}
						remove_country_culture_modifier = honor_guard_other
					}
				}
				#The character modifier clears itself.
			}
			
			#If the culture was not integrated we still need to clear stuff:
			
			
			#Intermarriage:
			if = {
				limit = {
					has_country_culture_modifier = right_of_marriage
				}
				remove_country_culture_modifier = right_of_marriage
				PREV = {
					if = {
						limit = { has_country_modifier = extended_right_of_marriage }
						remove_country_modifier = extended_right_of_marriage
					}
				}
			}
			
			#Torture:
			if = {
				limit = {
					has_country_culture_modifier = torture_protection
				}
				remove_country_culture_modifier = torture_protection
				PREV = {
					if = {
						limit = { has_country_modifier = extended_torture_protection }
						remove_country_modifier = extended_torture_protection
					}
				}
			}
			
			#Contracts:
			if = { 
				limit = {
					has_country_culture_modifier = right_to_enter_contracts
				}
				remove_country_culture_modifier = right_to_enter_contracts
				PREV = {
					if = {
						limit = { has_country_modifier = extended_contract_rights }
						remove_country_modifier = extended_contract_rights
					}
				}
			}
			
			#Inheritance:
			if = {
				limit = {
					has_country_culture_modifier = inheritance_right
				}
				remove_country_culture_modifier = inheritance_right
				PREV = {
					if = {
						limit = { has_country_modifier = extended_inheritance_right }
						remove_country_modifier = extended_inheritance_right
					}
				}
			}
			
			#Colonial Occupation:
			#We don't clear the local modifier.
			if = {
				limit = {
					has_country_culture_modifier = colonia_founded
				}
				remove_country_culture_modifier = colonia_founded
				PREV = {
					if = {
						limit = { has_country_modifier = colonia_project }
						remove_country_modifier = colonia_project
					}
				}
			}
			
			
			#Officer rights
			if = {
				limit = {
					has_country_culture_modifier = officer_right
				}
				remove_country_culture_modifier = officer_right
				PREV = {
					if = {
						limit = { has_country_modifier = extended_officer_right }
						remove_country_modifier = extended_officer_right
					}
				}
			}
			
		}
	}
	set_primary_culture = $NEW_PRIMARY_CULTURE$
	set_variable = {
		name = integrate_culture_yes_no
		value = $MAKE_OLD_CULTURE_INTEGRATED$
	}
	if = {
		limit = {
			has_variable = integrate_culture_yes_no
			var:integrate_culture_yes_no = yes
		}
		integrate_country_culture = scope:old_primary_culture
		scope:old_primary_culture = {
			if = {
				limit = { has_country_culture_modifier = integration_status_removed }
				remove_country_culture_modifier = integration_status_removed
			}
		}
	}
	else_if = {
		limit = {
			has_variable = integrate_culture_yes_no
			var:integrate_culture_yes_no = no
		}
		#Nothing
	}
}

culture_state_loyalty_effect = {
	#custom_tooltip = decision_state_loyalty_tt
	#Biggest 5 are displayed 
	ordered_country_state = {
		limit = {
			any_state_province = {
				state_loyalty < 98
				dominant_province_culture = scope:target_culture.culture
			}
		}
		order_by = {
			every_state_province = {
				add = total_population
			}
		}
		max = 4
		check_range_bounds = no
		set_variable = displayed_state_variable
		capital_scope = {
			add_state_loyalty = {
				value = 0
				PREV = {
					every_state_province = {
						limit = { dominant_province_culture = scope:target_culture.culture }
						add = 1.5
					}
				}
			}
		}
	}
	#Remaining are hidden:
	if = {
		limit = {
			any_country_state = {
				count > 4
				any_state_province = {
					state_loyalty < 98
					dominant_province_culture = scope:target_culture.culture
				}
			}
		}
		custom_tooltip = decision_state_loyalty_tt
	}
	hidden_effect = {
		every_country_state = {
			limit = {
				any_state_province = {
					state_loyalty < 98
					dominant_province_culture = scope:target_culture.culture
				}
				NOT = { has_variable = displayed_state_variable }
			}
			capital_scope = {
				add_state_loyalty = {
					value = 0
					PREV = {
						every_state_province = {
							limit = { dominant_province_culture = scope:target_culture.culture }
							add = 1.5
						}
					}
				}
			}
		}
		every_country_state = {
			limit = {
				has_variable = displayed_state_variable
			}
			remove_variable = displayed_state_variable
		}
	}
}

republic_to_monarchy_law_variable_effect = {
	if = {
		limit = {
			OR = {
				has_law = punic_reforms
				has_law = republican_recruitment_2
			}
		}
		set_variable = {
			name = gov_change_legion_law
			value = 1
		}
	}
	else_if = {
		limit = {
			OR = {
				has_law = marian_reforms
				has_law = republican_recruitment_4
			}
		}
		set_variable = {
			name = gov_change_legion_law
			value = 2
		}
	}
}

republic_to_monarchy_law_change_effect = {
	hidden_effect = {
		if = {
			limit = { has_variable = gov_change_legion_law }
			if = {
				limit = { var:gov_change_legion_law = 1 }
				change_law = work_for_the_best
			}
			else_if = {
				limit = { var:gov_change_legion_law = 2 }
				change_law = standing_army_law
			}
			remove_variable = gov_change_legion_law
		}
	}
}