auto_import_slave_effect = { # root = country, this = province
	save_scope_as = slave_import_province

	#check neighbors first for slaves
	random_valid_neighbor_slave_exporter = {
		limit = {
			trigger_if = { # if slave_external_move_no then dont import from province that is also importing if its outside the state
				limit = {
					has_province_modifier = slave_external_move_no
					NOT = {
						state = scope:slave_import_province.state
					}
				}

				NOT = {
					has_province_modifier = slave_move_yes
				}
			}
		}

		if = {
			limit = {
				exists = this
			}

			save_scope_as = slave_move_province
		}
	}

	#if no slaves in neighbors, check whole province
	if = {
		limit = {
			NOT = {
				exists = scope:slave_move_province 
			}
		}

		scope:slave_import_province.state = {
			random_valid_state_slave_exporter = {
				limit = {
					NOR = {
						has_province_modifier = slave_move_no
						this = scope:slave_import_province
					}
					trigger_if = {
						limit = {
							scope:slave_import_province = {
								has_province_modifier = slave_internal_move_no
							}
						}

						NOT = {
							has_province_modifier = slave_move_yes
						}
					}
					owner = scope:slave_import_province.owner
				}

				if = {
					limit = {
				 		exists = this
					}

					save_scope_as = slave_move_province
				}
			}
		}
	}

	# if no available provinces with slaves turn move off to save performance
	# allow 3 retries
	if = { 
		limit = {
			NOT = {
				exists = scope:slave_move_province
			}
		}

		if = {
			limit = {
				has_variable = slave_move_fail_count
			}

			change_variable = {
				name = slave_move_fail_count
				add = 1
			}
		}
		else = {
			set_variable = {
				name = slave_move_fail_count
				value = 1
			} 
		}

		if = {
			limit = {
				var:slave_move_fail_count >= 3
			}


			remove_variable = slave_move_fail_count
			remove_province_modifier = slave_move_yes
		}
	}

	#move found slaves
	if = {
		limit = {
			exists = scope:slave_move_province 
		}

		scope:slave_move_province = {
			random_valid_slave_to_move = {
				scope:slave_import_province.owner = {
					# check for vegetable surplus bonus
					if = {
						limit = {
							capital_scope.state = {
								trade_good_surplus = { 
									target = vegetables 
									value >= 2 
								}
							}
						}

						add_treasury = {
							value = -5
							multiply = 0.75
						}
					}
					else = {
						add_treasury = {
							value = -5
						}
					}
				}

				move_pop = scope:slave_import_province
			}
		}
	}

	# if at the pop cap, turn slave move off
	scope:slave_import_province = {
		if = {
			limit = {
				total_population >= population_cap
			}

			remove_province_modifier = slave_move_yes
		}
	}

	# clean up
	if = {
		limit = {
			exists = scope:slave_move_province
		}

		clear_saved_scope = slave_move_province
	}

	clear_saved_scope = slave_import_province
}