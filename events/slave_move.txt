namespace = slave_move

slave_move.1 = {
	type = country_event
	hidden = yes

	trigger = {
		is_ai = no
		treasury > 5
		exists = var:slave_moves
		any_owned_province = {
			AND = {
				has_province_modifier = slave_move_yes
				total_population < population_cap
			}
		}
	}

	immediate = {
		# spread out event to avoid performance bottleneck
		every_owned_province = {
			limit = {
				has_province_modifier = slave_move_yes
			}
	
			trigger_event = {
				id = slave_move.2
				days = 9
			}
		}
	}
}

slave_move.2 = {
	type = province_event
	hidden = yes

	immediate = {
		#check neighbors first for slaves
		random_neighbor_province = {
			limit = {
				NOT = {
					has_province_modifier = slave_move_no
				}
				trigger_if = {
					limit = {
						ROOT = {
							has_province_modifier = slave_external_move_no
						}
					}

					NOT = {
						has_province_modifier = slave_move_yes
					}
				}
				owner = ROOT.owner
				total_population > 1
				any_pops_in_province = {
					pop_type = slaves
					pop_can_move = yes
				}
			}

			if = {
				limit = {
					exists = this
				}

				save_scope_as = slave_move_province
			}
		}

		#if no slaves in neighbors, check whole province
		if = {
			limit = {
				NOT = {
					exists = scope:slave_move_province 
				}
			}

			ROOT.state = {
				random_state_province = {
					limit = {
						NOR = {
							has_province_modifier = slave_move_no
							this = ROOT
						}
						trigger_if = {
							limit = {
								ROOT = {
									has_province_modifier = slave_internal_move_no
								}
							}

							NOT = {
								has_province_modifier = slave_move_yes
							}
						}
						owner = ROOT.owner
						total_population > 1
						any_pops_in_province = {
							pop_type = slaves
							pop_can_move = yes
						}
					}

					if = {
						limit = {
					 		exists = this
						}

						save_scope_as = slave_move_province
					}
				}
			}
		}

		# if no available provinces with slaves turn move off to save performance
		# allow 3 retries
		if = { 
			limit = {
				NOT = {
					exists = scope:slave_move_province
				}
			}

			if = {
				limit = {
					has_variable = slave_move_fail_count
				}

				change_variable = {
					name = slave_move_fail_count
					add = 1
				}
			}
			else = {
				set_variable = {
					name = slave_move_fail_count
					value = 1
				} 
			}

			if = {
				limit = {
					var:slave_move_fail_count >= 3
				}

				debug_log = "failed count"

				ROOT = {
					remove_province_modifier = slave_move_yes
				}
			}
		}

		#move found slaves
		if = {
			limit = {
				exists = scope:slave_move_province 
			}

			scope:slave_move_province = {
				random_pops_in_province = {
					limit = {
						pop_type = slaves
						pop_can_move = yes
					}

					ROOT.owner = {
						# check for vegetable surplus bonus
						if = {
							limit = {
								capital_scope.state = {
									trade_good_surplus = { 
										target = vegetables 
										value >= 2 
									}
								}
							}

							add_treasury = {
								value = -5
								multiply = 0.75
							}
						}
						else = {
							add_treasury = {
								value = -5
							}
						}
					}

					move_pop = ROOT
				}
			}
		}

		# if at the pop cap, turn slave move off
		ROOT = {
			if = {
				limit = {
					total_population >= population_cap
				}

				remove_province_modifier = slave_move_yes
			}
		}

		# clean up
		if = {
			limit = {
				exists = scope:slave_move_province
			}

			clear_saved_scope = slave_move_province
		}
	}
}