namespace = navy_maint

navy_maint.1 = { # scale based on number of ships
	type = country_event
	hidden = yes

	trigger = {
		is_ai = no
		OR = {
			has_variable = previous_navy_rank
			num_of_ships >= 100
		}
		trigger_if = {
			limit = {
				has_variable = previous_navy_rank
			}

			OR = {
				num_of_ships < 100
				NOT = {
					var:previous_navy_rank = 1
					num_of_ships >= 100
					num_of_ships < 200
				}
				NOT = {
					var:previous_navy_rank = 2
					num_of_ships >= 200
					num_of_ships < 300
				}
				NOT = {
					var:previous_navy_rank = 3
					num_of_ships >= 300
					num_of_ships < 400
				}
				NOT = {
					var:previous_navy_rank = 4
					num_of_ships >= 400
					num_of_ships < 500
				}
				NOT = {
					var:previous_navy_rank = 5
					num_of_ships >= 500
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				has_variable = previous_navy_rank
			}

			remove_variable = previous_navy_rank
		}

		if = {
			limit = {
				has_country_modifier = navy_maint_cost_scaling
			}

			remove_country_modifier = navy_maint_cost_scaling
		}

		if = {
			limit = {
				num_of_ships >= 100
				num_of_ships < 200
			}

			set_variable = {
				name = previous_navy_rank
				value = 1
			}
		}
		else_if = {
			limit = {
				num_of_ships >= 200
				num_of_ships < 300
			}

			set_variable = {
				name = previous_navy_rank
				value = 2
			}
		}
		else_if = {
			limit = {
				num_of_ships >= 300
				num_of_ships < 400
			}

			set_variable = {
				name = previous_navy_rank
				value = 3
			}
		}
		else_if = {
			limit = {
				num_of_ships >= 400
				num_of_ships < 500
			}

			set_variable = {
				name = previous_navy_rank
				value = 4
			}
		}
		else_if = {
			limit = {
				num_of_ships >= 500
			}

			set_variable = {
				name = previous_navy_rank
				value = 5
			}
		}

		if = {
			limit = {
				exists = var:previous_navy_rank
			}

			while = {
				count = var:previous_navy_rank
				add_country_modifier = {
					name = navy_maint_cost_scaling
					mode = add
					duration = -1
				}
			}
		}
	}
}

navy_maint.2 = {
	type = country_event
	hidden = yes

	trigger = {
		is_ai = no
		num_of_ships > 0
		num_of_ports > 0
	}

	immediate = {
		set_variable = {
			name = total_port_buildings
			value = 0
		}

		every_owned_province = {
			limit = {
				num_of_port_building > 0
			}

			change_variable = {
				name = total_port_buildings
				add = num_of_port_building
			}
		}

		set_variable = {
			name = port_to_ship_ratio
			value = num_of_ships
		}

		change_variable = {
			name = port_to_ship_ratio
			divide = var:total_port_buildings
		}

		round_variable = {
			name = port_to_ship_ratio
			nearest = 1
		}

		if = { 
			limit = { # 1:10 port to ship efficiency ratio
				var:port_to_ship_ratio < 10
			}

			if = {
				limit = {
					has_country_modifier = excess_ports_maintenance
				}
				remove_country_modifier = excess_ports_maintenance
			}

			if = {
				limit = {
					has_country_modifier = insufficient_ports_maintenance
				}
				remove_country_modifier = insufficient_ports_maintenance
			}

			set_variable = {
				name = excess_ports
				value = 10 # ratio
			}
			change_variable = {
				name = excess_ports
				subtract = var:port_to_ship_ratio
			}

			if = {
				limit = {
					var:excess_ports >= 1
				}

				while = {
					count = var:excess_ports
					add_country_modifier = {
						name = excess_ports_maintenance
						mode = add
						duration = -1
					}
				}
			}

			remove_variable = port_to_ship_ratio
			remove_variable = excess_ports
			remove_variable = total_port_buildings
		}
		else_if = {
			limit = {
				var:port_to_ship_ratio > 10
			}

			if = {
				limit = {
					has_country_modifier = excess_ports_maintenance
				}
				remove_country_modifier = excess_ports_maintenance
			}

			if = {
				limit = {
					has_country_modifier = insufficient_ports_maintenance
				}
				remove_country_modifier = insufficient_ports_maintenance
			}

			set_variable = {
				name = insufficient_ports
				value = var:port_to_ship_ratio # ratio
			}
			change_variable = {
				name = insufficient_ports
				subtract = 10
			}
			
			if = {
				limit = {
					var:insufficient_ports >= 1
				}

				while = {
					count = var:insufficient_ports
					add_country_modifier = {
						name = insufficient_ports_maintenance
						mode = add
						duration = -1
					}
				}
			}

			remove_variable = port_to_ship_ratio
			remove_variable = insufficient_ports
			remove_variable = total_port_buildings
		}
	}
}