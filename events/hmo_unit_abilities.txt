namespace = hmo_unit_abilities

hmo_unit_abilities.1 = { # slave raid
	type = country_event
	hidden = yes

	trigger = {
		scope:slave_raiding_unit = {
			has_variable = is_slave_raiding
			unit_location = scope:slave_raiding_location
		}
	}

	immediate = {
		if = {
			limit = {
				scope:slave_raiding_unit = {
					has_variable = is_slave_raiding
					unit_location = scope:slave_raiding_location
				}
			}

			scope:slave_raiding_location = {
				ordered_neighbor_province = {
					limit = {
						naval_raid_target_province_trigger = yes
						NOT = { owner = scope:slave_raiding_unit.unit_owner }
						trigger_if = {
							limit = { scope:slave_raiding_unit.unit_owner = { is_subject = yes } }
							NOT = { scope:slave_raiding_unit.unit_owner.overlord = this.owner }
						}
						owner = {
							NOT = { alliance_with = scope:slave_raiding_unit.unit_owner }
							NOT = { is_subject_of = scope:slave_raiding_unit.unit_owner }
							NOT = { has_truce_with = scope:slave_raiding_unit.unit_owner }
						}
						NOT = { has_enemy_army = scope:slave_raiding_unit.unit_owner }
						NOT = {	has_province_modifier = port_province_raided }
					}
					add_city_smoke_effect = yes
					add_city_fire_effect = yes
					order_by = total_population
					max = scope:slave_raiding_unit.naval_raid_capacity_svalue

					scope:slave_raiding_unit.unit_owner = {
						add_aggressive_expansion = 1
					}

					add_province_modifier = {
						name = port_province_raided
						duration = 3650
					}

					random_pops_in_province = {
						move_pop = scope:slave_raiding_unit.unit_owner.capital_scope
						if = {
							limit = { NOT = { pop_type = slaves } }
							set_pop_type = slaves
						}
					}

					trigger_event = {
						id = hmo_unit_abilities.7
					}

					owner = {
						save_temporary_scope_as = target_nation
					}
					random_list = { # 10 percent chance raided player is notified and slavers are unnoticed
						9 = { }
						1 = {
							scope:target_nation = {
								trigger_event = {
									id = hmo_unit_abilities.2
								}
							}
						}
					}
				}
			}
		}
	}
}

hmo_unit_abilities.2 = { # slave raid warning
	type = minor_country_event
	title = hmo_unit_abilities.2.t
	desc = hmo_unit_abilities.2.desc
	picture = revolt

	left_portrait = current_ruler
	right_portrait = scope:slave_raiding_unit.unit_owner.current_ruler

	goto_location = scope:slave_raiding_unit

	immediate = {

	}

	option = { # do nothing
		name = hmo_unit_abilities.2.a
	}
	option = { # insult
	    name = hmo_unit_abilities.2.b

	    add_opinion = {
	    	modifier = "opinion_insult"
	    	target = scope:slave_raiding_unit.unit_owner
	    }
	}
	option = { # declare war
	    name = hmo_unit_abilities.2.c

	    trigger = {
	    	NOT = {
	    		war_with = scope:slave_raiding_unit.unit_owner
	    	}
    		opinion = {
    			target = scope:slave_raiding_unit.unit_owner
    			value < -200
	    	}
	    }

	    root = {
	    	declare_war_with_wargoal = {
	    		war_goal = raiding_wargoal
	    		target = scope:slave_raiding_unit.unit_owner
	    	}
	    }
	}
}

hmo_unit_abilities.3 = { # naval supply
	type = country_event
	hidden = yes

	trigger = {
		scope:naval_supplier_unit = {
			navy_supplying = yes
			unit_location = scope:naval_supplier_location
		}
	}

	immediate = {
		if = {
			limit = {
				scope:naval_supplier_unit = {
					navy_supplying = yes
					unit_location = scope:naval_supplier_location
				}
			}

			scope:naval_supplier_unit.unit_location = {
				ordered_neighbor_province = {
					limit = {
						naval_supply_province_trigger = yes
						OR = {
							owner = scope:naval_supplier_unit.unit_owner
							controller = scope:naval_supplier_unit.unit_owner
							controller = { alliance_with = scope:naval_supplier_unit.unit_owner }
						}
					}
					max = 1
					order_by = fort_level
					add_province_modifier = {
						name = supplied_by_sea
						duration = 90
					}
				}
			}
		}
	}
}

hmo_unit_abilities.4 = { # port assault
	type = country_event
	hidden = yes

	trigger = {
		scope:naval_assaulter_unit = {
			navy_assaulting = yes
			unit_location = scope:naval_assaulter_location
		}
	}

	immediate = {
		if = {
			limit = {
				scope:naval_assaulter_unit = {
					navy_assaulting = yes
					unit_location = scope:naval_assaulter_location
				}
			}

			scope:naval_assaulter_unit.unit_location = {
				ordered_neighbor_province = {
					limit = {
						assault_port_province_trigger = yes
						NOT = { controller = scope:naval_assaulter_unit.unit_owner }
						controller = { war_with = scope:naval_assaulter_unit.unit_owner }
						NOT = { has_enemy_army = scope:naval_assaulter_unit.unit_owner }
					}
					order_by = fort_level
					max = 1
					remove_building_level = fortress_building

					trigger_event = {
						id = hmo_unit_abilities.8
					}
				}
			}
		}
	}
}

hmo_unit_abilities.5 = { # port raid
	type = country_event
	hidden = yes

	trigger = {
		scope:naval_raider_unit = {
			navy_raiding = yes
			unit_location = scope:naval_raider_location
		}
	}

	immediate = {
		if = {
			limit = {
				scope:naval_raider_unit = {
					navy_raiding = yes
					unit_location = scope:naval_raider_location
				}
			}

			scope:naval_raider_unit.unit_location = {
				random_neighbor_province = {
					limit = {
						raid_port_province_trigger = yes
						NOT = { controller = scope:naval_raider_unit.unit_owner }
						controller = { war_with = scope:naval_raider_unit.unit_owner }
					}
					siege = { add_breach = 1 }
					trigger_event = {
						id = hmo_unit_abilities.9
					}
				}
			}
		}
	}
}

hmo_unit_abilities.6 = { # raid commerce warning
	type = minor_country_event
	title = hmo_unit_abilities.6.t
	desc = hmo_unit_abilities.6.desc
	picture = revolt

	left_portrait = current_ruler
	right_portrait = scope:raid_commerce_unit.owner.current_ruler

	goto_location = scope:raid_commerce_unit

	immediate = {

	}

	option = { # do nothing
		name = hmo_unit_abilities.6.a
	}
	option = { # insult
	    name = hmo_unit_abilities.6.b

	    add_opinion = {
	    	modifier = "opinion_insult"
	    	target = scope:raid_commerce_unit.unit_owner
	    }
	}
	option = { # declare war
	    name = hmo_unit_abilities.6.c

	    trigger = {
	    	NOT = {
	    		war_with = scope:raid_commerce_unit.unit_owner
	    	}
	    	opinion = {
	    		target = scope:raid_commerce_unit.unit_owner
	    		value >= -200
	    	}
	    }

	    root = {
	    	declare_war_with_wargoal = {
	    		war_goal = naval_wargoal
	    		target = scope:raid_commerce_unit.unit_owner
	    	}
	    }
	}
}

hmo_unit_abilities.7 = { # slave raid text
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = ports_being_slave_raided
	}
}

hmo_unit_abilities.8 = { # port assault text
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = port_being_assaulted
	}
}

hmo_unit_abilities.9 = { # port raid text
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = port_being_raided
	}
}

hmo_unit_abilities.10 = { # raid commerce
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = commerce_raided
	}
}

hmo_unit_abilities.11 = { # fishing
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = port_being_fished
	}
}


hmo_unit_abilities.12 = { # protect commerce
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = commerce_protected
	}
}

hmo_unit_abilities.13 = { # supply
	type = province_event
	hidden = yes

	immediate = {
		show_animated_text = port_supplied
	}
}

hmo_unit_abilities.14 = { # ensure protect merchants modifier is handled
	type = country_event
	hidden = yes

	trigger = {
		has_country_modifier = protect_merchants
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					any_navy = {
						navy_protecting_commerce = yes
					}
				}
			}

			remove_country_modifier = protect_merchants
		}
	}
}

hmo_unit_abilities.15 = { # ensure raid commerce  modifier is handled
	type = country_event
	hidden = yes

	trigger = {
		has_country_modifier = naughty_mugger
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					any_navy = {
						navy_raiding_commerce = yes
					}
				}
			}

			remove_country_modifier = naughty_mugger
		}
	}
}

hmo_unit_abilities.16 = { # ensure fishing modifier is handled
	type = country_event
	hidden = yes

	trigger = {
		has_country_modifier = go_fish
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					any_navy = {
						navy_fishing = yes
					}
				}
			}

			remove_country_modifier = go_fish
		}
	}
}


