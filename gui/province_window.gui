@window_margin_left = 15
@window_margin_right = 15
@window_margin_bottom = 6
@window_margin_left_title = 13
@window_margin_left_city = 10

@province_window_animation_length = 0.15
@stats_icon_width = 96
@big_stats_icon_width = 120
@medstats = 105
@smallstats = 90


types betterUITabs
{
	type tab_button_my = widget {
		block "layout" {
			layoutpolicy_horizontal = expanding
		}

		button = {
			name = "Button_Outline"
			#using = beige_background
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4

			#tintcolor = { 0.04 0.388 0.416 1 }

			block "On_click" { }

			# ToDo: Add Sound.//primary button or increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
			# oversound = " ToDo "

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_nobottom_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			# background = {
			# 	name = "side_pattern"
			# 	texture = "gfx/interface/base_parts/pattern_short.dds"
			# 	shaderfile = "gfx/FX/pdxgui_default.shader"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 22 0 }
			# 	margin = { -2 -2 }
			# 	#using = pattern_decay_alpha
			# 	tintcolor = { 0.04 0.388 0.416 1 }
			# 	block "lower_line" {}
			# }

			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = beige_background
				block "lower_line" {}
					alpha = 0.2
			}

			hbox = {
				name = "button_content_box"

				widget = {
					name = "Spacing_Widget_1"
					size = { 3 3 }
				}

				button = {
					alwaystransparent = yes
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 100 20 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					gfxtype = framedbuttongfx

					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4

					#widget = {
						#name = "Decorations"
						#size = { 100% 100% }

						#background = {
						#	name = "side_pattern"
						#	texture = "gfx/interface/base_parts/pattern.dds"
						#	shaderfile = "gfx/FX/pdxgui_default.shader"
						#	spriteType = Corneredtiled
						#	spriteborder = { 22 0 }
							#using = pattern_decay_alpha
						#}
					#}

					#modify_texture = {
					#	name = "Alpha"
					#	texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
					#	blend_mode = alphamultiply
					#	spriteType = Corneredtiled
					#	spriteborder = { 6 6 }
						#size = { 100% 100% }
					#}

					#icon = {
					#	name = "Pattern"
					#	texture = "gfx/interface/base_parts/button2_pattern_x50bd.dds"
					#	spriteType = Corneredtiled
					#	spriteborder = { 25 0 }
					#	size = { 100% 100% }
					#}

					# Button with centered text and an icon to the left of the text.
					hbox = {
						name = "Center_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 0 }

						block "Center_text_and_icon"
						{
							visible = no
						}

						widget = {
							name = "Spacing_Widget_1"
							size = { 4 2 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}

						icon = {
							framesize = { 50 50 }
							size = { 30 30 }

							block "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/leader.dds"
							}
						}

						widget = {
							name = "Spacing_Widget_2"
							size = { 2 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}

						textbox = {
							name = "Text"
							using = BaseFontS
							using = Black_FontColor
							autoresize = yes
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed

							block "Button_text"
							{
								text = "Button Text"
							}

						}

						widget = {
							name = "Spacing_Widget_3"
							size = { 4 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
					}

					# Button with centered text.
					textbox = {
						name = "Text"
						position = { 0 -2 }
						using = BaseFontS
						using = Black_FontColor
						widgetanchor = center
						parentanchor = center
						align = center

						block "Button_text"
						{
							text = "Button Text"
						}

						block "Center_text"
						{
							visible = no

						}
					}
				}

				widget = {
					name = "Spacing_Widget_2"
					size = { 3 3 }
				}
			}
		}

		icon = {
			name = "LineLeft"
			position = { 0 0 }
			parentanchor = bottom
			using = beige_background
			spriteType = Corneredtiled
			size = { 2 2 }

		}
		icon = {
			name = "LineCenter"
			position = { 0 0 }
			parentanchor = bottom
			using = beige_background
			spriteType = Corneredtiled
			size = { 100% 2 }
			block "lower_line" {}
		}
		icon = {
			name = "LineRight"
			position = { 0 0 }
			using = beige_background
			spriteType = Corneredtiled
			size = { 2 2 }
			parentanchor = right|bottom
		}
	}

	type pop_widget_my = widget {
		size = { 65 120 }

		icon = {
			block "alpha" {}
			name = "background_image"
			size = { 130 240 }
			position = { 0 0 }
			scale = 0.5
			block "BackgroundTexture" { texture = "gfx/interface/base_parts/background_x60bd_alpha.dds" }
			spriteType = Corneredtiled
			parentanchor = hcenter

			modify_texture = {
				name = "bottom gradient"
				texture = "gfx/interface/base_parts/gradient_black.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 30 4 }
			}

			modify_texture = {
				name = "edge_alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}

		progressbar = {
			size = { 60 114 }
			position = { 2 0 }
			noprogresstexture = "gfx/interface/base_parts/gradient_black.dds"
			alpha = 0.7
			parentanchor = vcenter
			direction = vertical
			block "HappinessBarValue"
			{
				visible = no
				value = 1
			}
			marker = {
				container = {
					name = "progress_marker"
					alwaystransparent = yes
					alpha = 1.4
					position = { 0 -10 }
					#icon = {
					#	position = { 0 0 }
					#	alwaystransparent = yes
					#	using = flat_background_white
					#	parentanchor = vcenter
					#	size = { 62 6 }
					#	alpha = 0.8
					#}

					icon = {
						position = { 0 0 }
						alwaystransparent = yes
						using = selected_color_texture
						modify_texture = {
							blend_mode = alphamultiply
							texture = "gfx/interface/base_parts/thin_red_line_x20bd.dds"
						}
						parentanchor = vcenter
						size = { 61 4 }
						using = DropShadow
						block "MarkerVisible" {}
					}
					icon = {
						alwaystransparent = yes
						texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
						framesize = { 50 50 }
						block "Frame" { frame = 1 }
						size = { 24 24 }
						parentanchor = vcenter
						position = { -6 0 }
						block "MarkerVisible" {}
					}
				}
			}
		}

		widget = {
			size = { 100% 100% }
			allow_outside = yes
			position = { 0 18 }
			parentanchor = hcenter
			flowcontainer = {
				position = { 2 3 }
				parentanchor = bottom|hcenter
				spacing = 1
				ignoreinvisible = yes
				textbox = {
					name = "Text"
					autoresize = yes
					using = BaseFontM
					fontsize = 18
					using = Black_FontColor
					block "NumPops"
					{
						text = "88"
					}
				}

				flowcontainer = {
					ignoreinvisible = yes
					visible = "[ProvinceWindow.IsPlayerProvince]"
					parentanchor = bottom
					textbox = {
						name = "ratio_big"
						autoresize = yes
						using = BaseFontS
						fontsize = 15
						fontcolor = { 0.3 0 0 0.6 }
						block "ratio_big"
						{
							text = "/88"
							visible = no
						}
					}
					textbox = {
						name = "ratio"
						autoresize = yes
						using = BaseFontS
						fontsize = 15
						fontcolor = { 0 0.3 0 0.6 }
						block "ratio"
						{
							text = "/88"
						}
					}
				}
			}
			icon = {
				block "alpha" {}
				size = { 38 38 }
				position = { 0 -22 }
				parentanchor = bottom|hcenter
				block "Icon"
				{
					texture = "gfx/interface/icons/_default.dds"
				}

				glow = {
					glow_radius = 4
					color = { 1 1 1 1 }
				}
			}
		}
	}

	type building_item_button_my = margin_widget {
		size = { 53 70 }

		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			alpha = 0.7
			margin = { 1 1 }
		}

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"

			modify_texture = {
				name = "Alpha"
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[EqualTo_int32(BuildingItem.GetLevel, '(int32)0')]"
			alpha = 0.5

			modify_texture = {
				name = "Alpha"
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}

		icon = {
			size = { 90% 22 }
			position = { 0 -4 }

			icon = {
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled
				spriteborder = { 19 19 }
				alpha = 0.75
				size = { 100% 100% }
				visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"

				modify_texture = {
					name = "Alpha"
					spriteborder = { 16 16 }
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
			}

			flowcontainer = {
				parentanchor = center
				position = { 0 3 }
				ignoreinvisible = yes
				spacing = 3
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "Text" { text = "888"  }
					autoresize = yes
					align = center|nobaseline
					alpha = "[TransparentIfZero_int32(BuildingItem.GetLevel)]"
					visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"
				}
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "ExtraText"
					{
						visible = no
						text = "888"
					}
					autoresize = yes
					align = center|nobaseline
				}
			}

			icon = {
				texture = "gfx/interface/icons/font_icons/font_icon_paper_cross.dds"
				size = { 15 15 }
				visible = "[And(ProvinceWindow.IsPlayerProvince, And(Not(EqualTo_int32(ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels, ProvinceWindow.GetProvince.GetAllowedAmountOfBuildingLevels)), And(Not(BuildingItem.CanBuild), EqualTo_int32(BuildingItem.GetLevel, '(int32)0'))))]"
				framesize = { 16 16 }
				frame = 1
				parentanchor = hcenter
				position = { 0 3 }
			}
			tooltip = "[BuildingItem.GetBuildInfo]"

			parentanchor = bottom|hcenter

		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			using = tooltip_es
			margin_widget = {
				size = { 100% 100% }
				margin_bottom = 24
				button = {
					size = { 100% 100% }
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 100 100 }
					gfxtype = framedbuttongfx

					# ToDo: Add Sound.//?
					#clicksound = " ToDo "
					# oversound = " ToDo "

					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4

					block "On_click" {}

						margin_widget = {
							margin = { 2 2 }
							size = { 100% 100% }
							margin_widget = {
								size = { 100% 100% }
								datacontext = "[BuildingItem]"
								using = tooltip_es
								tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
								#tooltip = "[BuildingItem.GetBuildInfo]"
								background = {
									using = flat_background_white
									shaderfile = "gfx/FX/pdxgui_default.shader"
									spriteType = corneredtiled

									modify_texture = {
										name = "Alpha"
										spriteborder = { 16 16 }
										spriteType = Corneredtiled
										texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
										blend_mode = alphamultiply
									}

								}

								progressbar = {
									name = "progress_value"
									direction = vertical
									position = { 0 0 }
									size = { 100% 100% }
									progresstexture = "gfx/interface/base_parts/progressbar_green_tile.dds"
									block "Value"
									{
										value = "[BuildingItem.GetBuildProgress]"
									}
								}

							}

							icon = {
								texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
								size = { 40 40 }
								parentanchor = center
							}
						}
					}
					button = {
						using = tooltip_es
						size = { 100% 100% }
						onrightclick = "[BuildingItem.CancelOrDestroy]"
						#enabled = "[Not( BuildingItem.CanBuild )]"
						visible = "[Not( BuildingItem.CanBuild )]"
						datacontext = "[BuildingItem]"
						tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
					}
					icon = {
						size = { 28 28 }
						parentanchor = top|right
						position = { 5 -8 }
						texture = "gfx/interface/icons/shared_icons/completed_task.dds"
						visible = "[BuildingItem.IsAtMaxAmount]"
					}
				}
			}
		}

	type building_item_button_my_compact = margin_widget {
		size = { 100% 100% }

		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			alpha = 0.7
			margin = { 1 1 }
		}

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"

			modify_texture = {
				name = "Alpha"
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"
			alpha = 0.6
			margin = { -1 -1 }

			modify_texture = {
				name = "Alpha"
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[EqualTo_int32(BuildingItem.GetLevel, '(int32)0')]"
			alpha = 0.5

			modify_texture = {
				name = "Alpha"
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}

		icon = {
			size = { 90% 90% }
			position = { 0 -4 }

			icon = {
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled
				spriteborder = { 19 19 }
				alpha = 0.75
				size = { 100% 100% }
				visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"

				modify_texture = {
					name = "Alpha"
					spriteborder = { 16 16 }
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
			}

			flowcontainer = {
				parentanchor = center
				position = { 0 3 }
				ignoreinvisible = yes
				spacing = 3
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "Text" { text = "888"  }
					autoresize = yes
					align = center|nobaseline
					alpha = "[TransparentIfZero_int32(BuildingItem.GetLevel)]"
					visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"
				}
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "ExtraText"
					{
						visible = no
						text = "888"
					}
					autoresize = yes
					align = center|nobaseline
				}
			}
			tooltip = "[BuildingItem.GetBuildInfo]"

			parentanchor = bottom|hcenter

		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			using = tooltip_es

			margin_widget = {
				size = { 100% 100% }
				margin_bottom = 0

				button = {
					size = { 100% 100% }
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 100 100 }
					gfxtype = framedbuttongfx

					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4

					block "On_click" {}

					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }

						margin_widget = {
							size = { 100% 100% }
							datacontext = "[BuildingItem]"
							using = tooltip_es
							tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
							#tooltip = "[BuildingItem.GetBuildInfo]"

							background = {
								using = flat_background_white
								shaderfile = "gfx/FX/pdxgui_default.shader"
								spriteType = corneredtiled

								modify_texture = {
									name = "Alpha"
									spriteborder = { 16 16 }
									spriteType = Corneredtiled
									texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
									blend_mode = alphamultiply
								}
							}

							progressbar = {
								name = "progress_value"
								direction = vertical
								position = { 0 0 }
								size = { 100% 100% }
								progresstexture = "gfx/interface/base_parts/progressbar_green_tile.dds"
								block "Value"
								{
									value = "[BuildingItem.GetBuildProgress]"
								}
							}
						}

						icon = {
							texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
							size = { 40 40 }
							parentanchor = center
							visible = "[And(EqualTo_int32(BuildingItem.GetLevel, '(int32)0'), Not(BuildingItem.HasQueue))]"
						}

						icon = {
							texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
							size = { 40 40 }
							parentanchor = center
							position = { -2 0 }
							visible = "[Or(GreaterThan_int32(BuildingItem.GetLevel, '(int32)0'), BuildingItem.HasQueue)]"
						}

						icon = {
							using = flat_background_white
							alpha = 0.1
							visible = "[EqualTo_int32(BuildingItem.GetLevel, '(int32)0')]"
						}
					}
				}

				button = {
					using = tooltip_es
					size = { 100% 100% }
					onrightclick = "[BuildingItem.CancelOrDestroy]"
					#enabled = "[Not( BuildingItem.CanBuild )]"
					visible = "[Not( BuildingItem.CanBuild )]"
					datacontext = "[BuildingItem]"
					tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
				}
				icon = {
					size = { 28 28 }
					parentanchor = top|right
					position = { 5 -8 }
					texture = "gfx/interface/icons/shared_icons/completed_task.dds"
					visible = "[BuildingItem.IsAtMaxAmount]"
				}
			}

			icon = {
				texture = "gfx/icons/grad_corner.dds"
				parentanchor = right|bottom
				position = { -4 -5 }
				size = { 20 20 }
				visible = "[Or(GreaterThan_int32(BuildingItem.GetLevel, '(int32)0'), BuildingItem.HasQueue)]"
			}

			flowcontainer = {
				parentanchor = right|bottom
				tooltip = "[BuildingItem.GetBuildInfo]"
				position = { -4 1 }
				ignoreinvisible = yes
				spacing = 3
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "Text" { text = "888"  }
					autoresize = yes
					align = right|nobaseline
					alpha = "[TransparentIfZero_int32(BuildingItem.GetLevel)]"
					visible = "[GreaterThan_int32(BuildingItem.GetLevel, '(int32)0')]"
				}
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					block "ExtraText"
					{
						visible = no
						text = "888"
					}
					autoresize = yes
					align = center|nobaseline
				}
			}
		}

	}

	type great_work_tier_my = widget {
		size = { 8 33 }
		progressbar = {
			using = vertical_moralebar
			block "progressbar_size"
			{
				size = { 100% 100% }
			}
			block "progressbar_value"
			{
				value = 0
			}
			parentanchor = bottom|left
			widgetanchor = bottom|left
		}

		icon = { #Divider
			texture = "gfx/interface/tiles/tile_divider_01.dds"
			size = { 8 6 }
			position = { 0 -2 }
		}
	}
}

window = {
	name = "province_window"
	position = { 60 0 }
	parentanchor = bottom|left
	layer = middle
	allow_outside = yes
	movable = no

	@window_width = 805

	size = { @window_width 374 }

	visible = "[ProvinceWindow.HasProvince]"

	state = {
		name = _show
		#on_start = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}

	base_window = {
		name = "state_details"
		movable = no
		visible = "[ProvinceWindow.HasState]"

		@state_height_large = 212
		@state_height_small = 56
		size = { @window_width @state_height_large } #TODO

		parentanchor = bottom
		position = { 0 -520 }

		datacontext = "[GetScriptedGui('small_province_view')]"

		state = {
			name = small_province_view
			position = { 0 -374 }

			trigger_when = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
		}

		state = {
			name = big_province_view
			position = { 0 -520 }

			trigger_when = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End ))]"
		}

		state = {
			name = enlargen_state_details
			animation = {
				size = { @window_width @state_height_large }
			}

			duration = @province_window_animation_length

			on_finish = "[PdxGuiWidget.FindChild('state_contents_ani').TriggerAnimation('create_children')]"
			on_finish = "[PdxGuiWidget.FindChild('background_gradient').Show]"
		}

		state = {
			name = ensmallen_state_details
			animation = {
				size = { @window_width @state_height_small }
			}

			duration = @province_window_animation_length

			on_start = "[PdxGuiWidget.FindChild('state_contents_ani').TriggerAnimation('hide_children')]"
			on_start = "[PdxGuiWidget.FindChild('background_gradient').Hide]"

		}

		vbox = {
			name = "state_main_box"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				name = "top_row"
				layoutpolicy_horizontal = expanding
				using = MainWindowHeaderBoxState

				blockoverride "ShowButton"
				{

					onclick = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
					onclick = "[PdxGuiTriggerAllAnimations('show_button_2')]"
					onclick = "[PdxGuiWidget.Hide]"
					onclick = "[GetVariableSystem.Toggle('state_up')]"
					clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_open"

					state = {
						name = show_button_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = hide_button_1
						on_start = "[PdxGuiWidget.Hide]"
					}

					state = {
						name = code_trigger_show_state
						on_start = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
						on_start = "[PdxGuiTriggerAllAnimations('show_button_2')]"
						on_start = "[PdxGuiWidget.Hide]"
					}
				}

				blockoverride "HideButton"
				{
					onclick = "[PdxGuiTriggerAllAnimations('ensmallen_state_details')]"
					onclick = "[PdxGuiTriggerAllAnimations('show_button_1')]"
					onclick = "[PdxGuiWidget.Hide]"
					onclick = "[GetVariableSystem.Toggle('state_up')]"

					state = {
						name = hide_button_2
						on_start = "[PdxGuiWidget.Hide]"
					}

					state = {
						name = show_button_2
						on_start = "[PdxGuiWidget.Show]"
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_close"
						}
					}
				}

				blockoverride "Extras"
				{
					allow_outside = yes
					country_flag_reworked = {
						blockoverride "Size"
						{
							parentanchor = vcenter
							size = { 58 58 }
						}
						blockoverride "Flag"
						{
							texture = "[ProvinceWindow.GetProvince.GetOwner.AccessCoatOfArms.GetTexture('(int32)120', '(int32)120')]"
							frame = "[ProvinceWindow.GetProvince.GetOwner.AccessCoatOfArms.GetFrame('(int32)120', '(int32)120'))]"
							framesize = { 120 120 }
						}
						blockoverride "On_click"
						{
							onclick = "[ProvinceWindow.OpenDiplomacy]"
						}
						position = { 12 0 }
					}
				}

				blockoverride "FlagOrIcon"
				{
					widget = {
						visible = "[ProvinceWindow.GetProvince.HasOwner]"
						size = { 40 40 }
						maximumsize = { 40 40 }

					}

					widget = {
						name = "spacing_hack"
						size = { 50 1 }
						visible = "[ProvinceWindow.GetProvince.HasOwner]"
					}

				}

				blockoverride "Title_text"
				{
					text = "[ProvinceWindow.GetState.GetName]"
					margin_left = @window_margin_left_title
				}
				blockoverride "Max_text_width"
				{
					max_width = 600
				}
				blockoverride "White_buttons"
				{

					white_button_round = {
						size = { 26 26 }
						visible = "[GetVariableSystem.Exists('state_up')]"
						blockoverride "Icon" { texture = "gfx/interface/base_parts/up_arrow.dds" }
						blockoverride "On_click"
						{
							onclick = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
							onclick = "[PdxGuiTriggerAllAnimations('show_button_2')]"
							onclick = "[PdxGuiTriggerAllAnimations('hide_button_1')]"
							onclick = "[GetVariableSystem.Toggle('state_up')]"
							clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_open"
						}
						state = {
							name = show_button_1
							on_start = "[PdxGuiWidget.Show]"
						}

						state = {
							name = code_trigger_show_state
							on_start = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
							on_start = "[PdxGuiTriggerAllAnimations('show_button_2')]"
							on_start = "[PdxGuiWidget.Hide]"
						}
					}

					white_button_round = {
						size = { 26 26 }
						blockoverride "Icon" { texture = "gfx/interface/base_parts/down_arrow.dds" }
						visible = "[Not( GetVariableSystem.Exists('state_up') )]"
						blockoverride "On_click"
						{
							onclick = "[PdxGuiTriggerAllAnimations('ensmallen_state_details')]"
							onclick = "[PdxGuiTriggerAllAnimations('show_button_1')]"
							onclick = "[PdxGuiTriggerAllAnimations('hide_button_2')]"
							onclick = "[GetVariableSystem.Toggle('state_up')]"
						}

						state = {
							name = show_button_2
							on_start = "[PdxGuiWidget.Show]"
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_close"
							}
						}

					}

					button_close = {
						onclick = "[ProvinceWindow.OnClose]"
						onclick = "[GetVariableSystem.Clear( 'province_list' )]"
						tooltip = "CLOSE"
					}
				}
			}
			vbox = {
				name = "state_contents_ani"
				alpha = 1
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				state = {
					name = create_children

					animation = {
						alpha = 1
					}

					duration = 0.1

				}

				state = {
					name = hide_children

					animation = {
						alpha = 0
					}

				}
				hbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					margin = { 8 0 }

					margin_widget = {
						size = { 124 163 }
						using = NoninteractableBG
						blockoverride "Margins"
						{
							margin_left = 12
							margin_right = 12
							margin_bottom = 0
						}

						cpt_button = {
							parentanchor = vcenter
							name = "governor_portrait"
							blockoverride "Size" { size = { 80 126 } }
							blockoverride "Context" { datacontext = "[ProvinceWindow.GetState.GetGovernorOrRuler]" }
							margin_bottom = 2
							blockoverride "portrait_button_template_tooltip"
							{
								tooltip = "[ProvinceWindow.GetState.GetGovernorOrRuler.GetTooltip]"
							}
						}
						flowcontainer = {
							ignoreinvisible = yes
							spacing = 4
							parentanchor = right|vcenter
							position = { -1 -3 }
							direction = vertical

							widget = {
								size = { 40 40 }
								tooltip = "[ProvinceWindow.GetState.GetGovernorOrRuler.GetFinesseToolTip]"

								icon = {
									size = { 44 44 }
									texture = "gfx/interface/icons/shared_icons/civic.dds"
									parentanchor = center
								}

								icon = {
									framesize = { 60 32 }
									visible = "[ProvinceWindow.GetState.GetGovernorOrRuler.IsValid]"
									frame = "[ProvinceWindow.GetState.GetGovernorOrRuler.GetFinesse]"
									texture = "gfx/interface/map/ranking_nonzero_characteristic.dds"
									parentanchor = center
									widgetanchor = center
								}
							}

							icon_button_square = {
								layoutpolicy_horizontal = fixed
								enabled = "[ProvinceWindow.CanChangePolicy]"
								tooltip = "[GetChangeGovernorPoliciesTooltip(ProvinceWindow.GetState)]"
								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ChangePolicy]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
								}

								blockoverride "Icon"
								{
									texture = "[GetGovernorPolicyIcon(ProvinceWindow.GetState.GetGovernorPolicy)]"
									size = { 90% 90% }
								}

								size = { 40 40 }

							}
							icon_button_square = {
								size = { 40 40 }
								visible = "[Not( ProvinceWindow.IsPlayerProvince )]"

								blockoverride "On_click"
								{
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									inherit_visual_state = no
									enabled = no
								}
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/change.dds"
									#color = { 0.12 0.12 0.12 1 }
									size = { 34 34 }
								}

								tooltip = "CANNOT_CHANGE_GOV_HERE"
							}
							icon_button_square = {
								size = { 40 40 }
								visible = "[ProvinceWindow.IsPlayerProvince]"


								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ChangeGovernor]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									inherit_visual_state = no
								}
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/change.dds"
									size = { 34 34 }
								}

								enabled = "[ProvinceWindow.CanChangeGovernor]"
								tooltip = "[ProvinceWindow.GetChangeGovernorTooltip]"
							}
						}
					}

					margin_widget = {
						size = { 54 0 }
						layoutpolicy_vertical = expanding
						margin_top = 10
						flowcontainer = {
							direction = vertical
							spacing = 2
							position = { 0 0 }
							parentanchor = right
							icon_pie = {
								size = { 46 46 }
								datamodel = "[ProvinceWindow.GetPopCultures]"

								###Slices and Icon
								blockoverride "SliceTooltip" { tooltip = "POP_CULTURE_SLICE_TT" }
								blockoverride "SliceValue" { value = "[PopCultureItem.GetSize]" }
								blockoverride "SliceColor" { color = "[PopCultureItem.GetColor]" }
								blockoverride "Icon" {
									using = icon_culture
									position = { 0 1 }
									tooltip = "POPCULTUREPIECHART"
									scale = 1.1
								}

								button = {
									name = "percenter_cul"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[GetVariableSystem.Exists('cul_province')]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'cul_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										tooltip = "STATE_RELIGION_TT"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_culture_integrated_percent_svalue')|0%]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = showit
										animation = {
											alpha = 1
										}
										duration = 0.08
										trigger_when = "[GetVariableSystem.Exists('cul_province')]"
									}

									state = {
										name = hideit
										animation = {
											alpha = 0.1
										}
										duration = 0.08
										trigger_when = "[Not( GetVariableSystem.Exists('cul_province') )]"
									}
								}

								button = {
									name = "percenter_cul_2"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[Not( GetVariableSystem.Exists('cul_province') )]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'cul_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_culture_integrated_percent_svalue')|0%]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = _mouse_hierarchy_enter
										animation = {
											alpha = 1
										}
										duration = 0.08
									}

									state = {
										name = _mouse_hierarchy_leave
										animation = {
											alpha = 0.1
										}
										duration = 0.08
									}
								}

							}

							icon_pie = {
								size = { 46 46 }
								datamodel = "[ProvinceWindow.GetPopReligions]"

								###Slices and Icon
								blockoverride "SliceTooltip" { tooltip = "POP_RELIGION_SLICE_TT" }
								blockoverride "SliceValue" { value = "[PopReligionItem.GetSize]" }
								blockoverride "SliceColor" { color = "[PopReligionItem.GetColor]" }
								blockoverride "Icon" {
									using = icon_religious
									position = { 0 1 }
									tooltip = "POPRELIGIONPIECHART"
									scale = 1.1
								}

								button = {
									name = "percenter_rel"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[GetVariableSystem.Exists('rel_province')]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'rel_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										tooltip = "STATE_RELIGION_TT"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_religion_integrated_percent_svalue')|0%]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = showit
										animation = {
											alpha = 1
										}
										duration = 0.08
										trigger_when = "[GetVariableSystem.Exists('rel_province')]"
									}

									state = {
										name = hideit
										animation = {
											alpha = 0.1
										}
										duration = 0.08
										trigger_when = "[Not( GetVariableSystem.Exists('rel_province') )]"
									}
								}

								button = {
									name = "percenter_rel_2"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[Not( GetVariableSystem.Exists('rel_province') )]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'rel_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_religion_integrated_percent_svalue')|0%]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = _mouse_hierarchy_enter
										animation = {
											alpha = 1
										}
										duration = 0.08
									}

									state = {
										name = _mouse_hierarchy_leave
										animation = {
											alpha = 0.1
										}
										duration = 0.08
									}
								}

							}

							icon_pie = {
								size = { 46 46 }
								datamodel = "[ProvinceWindow.GetPopTypes]"

								###Slices and Icon
								blockoverride "SliceTooltip" { tooltip = "POP_TYPE_TOTAL_TT" }
								blockoverride "SliceValue" { value = "[PopTypeItem.GetSize]" }
								blockoverride "SliceColor" { color = "[PopTypeItem.GetColor]" }
								blockoverride "Icon" {
									using = icon_poptype
									position = { 0 -1 }
									tooltip = "POPTYPEPIECHART"
									scale = 1.1
								}

								button = {
									name = "percenter_pops"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[GetVariableSystem.Exists('pops_province')]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'pops_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[ProvinceWindow.GetState.GetTotalPopulation]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = showit
										animation = {
											alpha = 1
										}
										duration = 0.08
										trigger_when = "[GetVariableSystem.Exists('pops_province')]"
									}

									state = {
										name = hideit
										animation = {
											alpha = 0.1
										}
										duration = 0.08
										trigger_when = "[Not( GetVariableSystem.Exists('pops_province') )]"
									}
								}

								button = {
									name = "percenter_pops_2"
									size = { 100% 100% }
									alpha = 0.1
									visible = "[Not( GetVariableSystem.Exists('pops_province') )]"
									icon = {
										texture = "gfx/interface/base_parts/round_button_frame_26_shadow.dds"
										size = { 100% 100% }
										alpha = 0.6
									}
									onclick = "[GetVariableSystem.Toggle( 'pops_province' )]"
									widget = {
										size = { 37 30 }
										datacontext = "[ProvinceWindow.GetState]"
										parentanchor = hcenter
										position = { 0 3 }
										textbox = {
											text = "[ProvinceWindow.GetState.GetTotalPopulation]"
											autoresize = yes
											using = BaseFontS
											fontsize = 16
											parentanchor = hcenter|vcenter
											position = { 0 4 }
										}

									}

									state = {
										name = _mouse_hierarchy_enter
										animation = {
											alpha = 1
										}
										duration = 0.08
									}

									state = {
										name = _mouse_hierarchy_leave
										animation = {
											alpha = 0.1
										}
										duration = 0.08
									}
								}

							}
						}
					}

					margin_widget = {
						size = { 162 0 }
						layoutpolicy_vertical = expanding
						margin_top = 8
						flowcontainer = {
							direction = vertical
							spacing = 0

							icon_and_text_progress = {
								parentanchor = hcenter
								tooltip = "[ProvinceWindow.GetState.GetFoodTooltip][ProvinceWindow.GetState.GetFoodModifierEffect]"
								blockoverride "TotalSize" { size = { 164 38 } }
								blockoverride "size" { size = { 152 7 } } # -10px width than above makes it align
								blockoverride "LineVisibility"
								{
									visible = no
								}

								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/food.dds"
								}

								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetFood|0]/[ProvinceWindow.GetState.GetFoodCapacity|0]"
									tooltip = "[ProvinceWindow.GetState.GetFoodCapacityTooltip]"
								}

								blockoverride "Value"
								{
									value = "[FixedPointToFloat(ProvinceWindow.GetState.GetFoodCapacityPercent)]"
								}

								#blockoverride "PlusMarker" { visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetMonthlyFood, '(CFixedPoint)0' )]" }
								#blockoverride "MinusMarker" { visible = "[LessThan_CFixedPoint( ProvinceWindow.GetState.GetMonthlyFood, '(CFixedPoint)0' )]" }
								blockoverride "UpIndicator" { visible = "[GreaterThan_int32( ProvinceWindow.GetState.GetFoodFrame, '(int32)3' )]" }
								blockoverride "DownIndicator" { visible = "[LessThan_int32( ProvinceWindow.GetState.GetFoodFrame, '(int32)3' )]" }

							}

							icon_and_text_progress = {
								parentanchor = hcenter
								tooltip = "[ProvinceWindow.GetState.GetLoyaltyTooltip]"
								blockoverride "TotalSize" { size = { 164 38 } }
								blockoverride "size" { size = { 152 7 } }  # -12px width than above makes it align
								blockoverride "LineVisibility"
								{
									visible = no
								}

								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/loyalty.dds"
								}

								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetStateLoyalty|0]/100"
								}

								blockoverride "Value"
								{
									value = "[FixedPointToFloat(ProvinceWindow.GetState.GetStateLoyalty)]"
								}
								#blockoverride "PlusMarker" { visible = "[GreaterThanOrEqualTo_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)4' )]" }
								#blockoverride "MinusMarker" { visible = "[LessThanOrEqualTo_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)2' )]" }
								blockoverride "UpIndicator" { visible = "[GreaterThan_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)3' )]" }
								blockoverride "DownIndicator" { visible = "[LessThan_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)3' )]" }
							}
						}

						container = {
							position = { 3 -26 }
							parentanchor = bottom|hcenter

							flowcontainer = {
								name = "state_building_buttons"
								@icon_button_size = 37
								@icon_size = 32
								direction = horizontal
								spacing = 3
								ignoreinvisible = yes
								visible = "[ProvinceWindow.IsPlayerProvince]"
								icon_button_square = {
									name = "invest_in_state_button_military_button"
									size = { @icon_button_size @icon_button_size }
									datacontext = "[GetScriptedGui('invest_in_state_button_military')]"
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/install_provincial_procurators.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									blockoverride "On_click"
									{
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
									}
									tooltip = "INVEST_IN_STATE_BUTTON_MILITARY_BUTTON_TOOLTIP"
									using = tooltip_se
								}

								icon_button_square = {
									name = "invest_in_state_button_military_button_SPA"
									datacontext = "[GetScriptedGui('invest_in_state_button_military_SPA')]"
									size = { @icon_button_size @icon_button_size }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/promote_infrastructure_spending.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									blockoverride "On_click"
									{
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
									}
									tooltip = "INVEST_IN_STATE_BUTTON_MILITARY_BUTTON_SPA_TOOLTIP"
									using = tooltip_se
								}

								icon_button_square = {
									name = "invest_in_state_button_civic_button"
									datacontext = "[GetScriptedGui('invest_in_state_button_civic')]"
									size = { @icon_button_size @icon_button_size }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/promote_infrastructure_spending.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									blockoverride "On_click"
									{
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
									}
									tooltip = "INVEST_IN_STATE_BUTTON_CIVIC_BUTTON_TOOLTIP"
									using = tooltip_se
								}

								icon_button_square = {
									name = "invest_in_state_button_oratory_button"
									datacontext = "[GetScriptedGui('invest_in_state_button_oratory')]"
									size = { @icon_button_size @icon_button_size }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/entice_business_investments.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									tooltip = "INVEST_IN_STATE_BUTTON_ORATORY_BUTTON_TOOLTIP"
									blockoverride "On_click"
									{
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									}
									using = tooltip_se
								}

								icon_button_square = {
									name = "invest_in_state_button_religious_button"
									datacontext = "[GetScriptedGui('invest_in_state_button_religious')]"
									size = { @icon_button_size @icon_button_size }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/direct_creation_of_mystery_cults.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									blockoverride "On_click"
									{
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
									}
									tooltip = "INVEST_IN_STATE_BUTTON_RELIGIOUS_BUTTON_TOOLTIP"
									using = tooltip_se
								}

								icon_button_square = {
									name = "invest_in_state_button_religious_button_SPA"
									datacontext = "[GetScriptedGui('invest_in_state_button_religious_SPA')]"
									size = { @icon_button_size @icon_button_size }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/direct_creation_of_mystery_cults.dds"
										size = { @icon_size @icon_size }
									}
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									enabled = "[And( ProvinceWindow.IsPlayerProvince, ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
									tooltip = "INVEST_IN_STATE_BUTTON_RELIGIOUS_BUTTON_SPA_TOOLTIP"
									blockoverride "On_click"
									{
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										clicksound = "event:/SFX/UI/Province/sfx_ui_province_improvement"
									}
									using = tooltip_se
								}
							}
						}
						fixed_size_progressbar = {
							parentanchor = bottom|hcenter
							position = { 0 -12 }
							visible = "[And(ProvinceWindow.GetState.HasTimedModifier('state_modification_in_progress'), ProvinceWindow.IsPlayerProvince)]"
							tooltip = "[ProvinceWindow.GetState.GetTimedModifier('state_modification_in_progress').GetTooltip]"
							size = { 160 8 }
							blockoverride "Value"
							{
								value = "[FixedPointToFloat(ProvinceWindow.GetState.GetTimedModifier('state_modification_in_progress').GetProgress)]"
							}
							using = tooltip_se
						}
					}

					margin_widget = {
						size = { 378 0 }
						layoutpolicy_vertical = expanding
						using = NoninteractableBG
						blockoverride "Margins"
						{
							margin_top = 0
							margin_bottom = 0
							margin_left = 0
							margin_right = 13
						}

						overlappingitembox = {
							parentanchor = right
							margin = { 0 8 }
							#size = { 254 54 }
							size = { 364 54 }
							name = "tradegoods_grid_row_1"
							datamodel = "[ProvinceWindow.GetFirstSurplus]"
							#list_entry = { size = { 100% 100% } }
							item = {
								widget = {
									size = { 46 52 }

									trade_good_entry = {
										tooltip = "[TradeGoodSurplusItem.GetItem.GetSurplus.GetInfo]"
										using = tooltip_ne
										alwaystransparent = no
										filter_mouse = all
										blockoverride "Icon"
										{
											texture = "[GetTradeGoodsIcon(TradeGoodSurplusItem.GetItem.GetSurplus.GetTradeGoods)]"
											visible = "[TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade]"
										}
										blockoverride "Text" { text = "[TradeGoodSurplusItem.GetItem.GetSurplus.GetAmount]" }
										blockoverride "On_click"
										{
											onclick = "[SelectImportDestination(TradeGoodSurplusItem.GetItem.GetSurplus)]"
											enabled = "[TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade]"
										}
									}

									icon = {
										size = { 34 34 }
										position = { 0 2 }
										parentanchor = hcenter
										texture = "[GetTradeGoodsIcon(TradeGoodSurplusItem.GetItem.GetSurplus.GetTradeGoods)]"
										visible = "[Not(TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade)]"
									}
								}
							}
						}

						overlappingitembox = {
							parentanchor = right
							name = "tradegoods_grid_row_2"
							size = { 364 54 }
							margin = { 0 8 }
							position = { 0 54 }
							datamodel = "[ProvinceWindow.GetSecondSurplus]"
							item = {
								widget = {
									size = { 46 52 }
									trade_good_entry = {
										tooltip = "[TradeGoodSurplusItem.GetItem.GetSurplus.GetInfo]"
										using = tooltip_se
										alwaystransparent = no
										filter_mouse = all
										blockoverride "Icon"
										{
											texture = "[GetTradeGoodsIcon(TradeGoodSurplusItem.GetItem.GetSurplus.GetTradeGoods)]"
											visible = "[TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade]"
										}
										blockoverride "Text" { text = "[TradeGoodSurplusItem.GetItem.GetSurplus.GetAmount]" }
										blockoverride "On_click"
										{
											onclick = "[SelectImportDestination(TradeGoodSurplusItem.GetItem.GetSurplus)]"
											enabled = "[TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade]"
										}
									}
									icon = {
										size = { 34 34 }
										position = { 0 2 }
										parentanchor = hcenter
										texture = "[GetTradeGoodsIcon(TradeGoodSurplusItem.GetItem.GetSurplus.GetTradeGoods)]"
										visible = "[Not(TradeGoodSurplusItem.GetItem.CanBeAvailableForTrade)]"
									}
								}
							}
						}

						flowcontainer = {
							parentanchor = bottom|left
							position = { 6 -8 }
							spacing = 3
							ignoreinvisible = yes
							icon_and_text = {
								size = { 98 38 }
								parentanchor = vcenter
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/income.dds"
									size = { 32 32 }
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetTotalIncome|2=]"
								}
								tooltipwidget = {
									using = double_piece_tooltip
									blockoverride "LeftText" { text = "[ProvinceWindow.GetState.GetCurrentTaxIncomeInfo]" }
									blockoverride "RightText" { text = "[ProvinceWindow.GetState.GetCurrentCommerceIncomeInfo]" }
								}
							}
							icon_and_text = {
								size = { 108 38 }
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/modifiers/local_base_trade_routes.dds"
									size = { 30 30 }
								}

								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetTradeRoutesShort]"
								}

								tooltip = "[ProvinceWindow.GetState.GetTradeRoutesTooltip]"
							}
							text_button_square_highlighted = {
								size = { 128 28 }
								parentanchor = vcenter
								blockoverride "Center_text"
								{
									text = "TRADE_GOODS_BUTTON"
								}
								enabled = "[ProvinceWindow.CanOpenTradeWindow]"
								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.CreateTradeRoute]"
								}
								tooltip = "[ProvinceWindow.GetTradeRouteTooltip]"
							}

							icon_button_square = {
								#visible = "[Not(ProvinceWindow.GetState.IsAiAllowedToTrade)]"
								visible = "[And(ProvinceWindow.CanOpenTradeWindow, ProvinceWindow.GetState.IsAiAllowedToTrade)]"
								enabled = "[ProvinceWindow.CanOpenTradeWindow]"
								parentanchor = vcenter
								size = { 28 28 }

								tooltip = "TRADEROUTE_NOT_AUTOMATIC_FOR_STATE"
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/trade.dds"
									size = { 24 24 }
								}

								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ToggleAiTradeAllowance]"
								}
							}
							icon_button_square = {
								visible = "[And(ProvinceWindow.CanOpenTradeWindow, Not(ProvinceWindow.GetState.IsAiAllowedToTrade))]"
								#visible = "[ProvinceWindow.GetState.IsAiAllowedToTrade]"
								enabled = "[ProvinceWindow.CanOpenTradeWindow]"
								parentanchor = vcenter
								size = { 28 28 }

								tooltip = "TRADEROUTE_AUTOMATIC_FOR_STATE"
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/trade.dds"
									size = { 18 18 }
									position = { -6 -3 }


									icon = {
										using = negative_color_texture
										size = { 18 16 }
										position = { 10 5 }
										parentanchor = bottom|right
										modify_texture = {
											name = "Alpha"
											texture = "gfx/interface/base_parts/ex_mark.dds"
											framesize = { 50 50 }
											frame = 2
											blend_mode = alphamultiply
										}
									}
								}

								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ToggleAiTradeAllowance]"
								}
							}
						}
					}
				}
			}
		}
	}


	base_window = {
		name = "province_details"
		movable = no
		@province_height_large = 520
		@province_height_small = 374
		#blockoverride "BackgroundGradient" { visible = no }
		size = { @window_width @province_height_large }

		parentanchor = bottom
		datacontext = "[GetScriptedGui('small_province_view')]"
		visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End ))]"
		alwaystransparent = no
		allow_outside = yes

		hbox = {
			using = NoninteractableBG
			blockoverride "Margins" {
				margin_top = -120
			}
			alpha = 0.5
		}

		secondary_header = {
			name = "uncolonized_main_header"
			#layoutpolicy_horizontal = expanding
			widgetanchor = bottom
			size = { @window_width 36 }
			visible = "[Not(ProvinceWindow.HasState)]"

			blockoverride "Title_text"
			{
				text = "[ProvinceWindow.GetProvince.GetAreaName]"
				margin_left = @window_margin_left_title
			}
			blockoverride "White_buttons"
			{
				button_close = {
					visible = yes
					onclick = "[ProvinceWindow.OnClose]"
					tooltip = "CLOSE"
				}
			}
		}

		margin_widget = { #backgrounds
			position = { 0 0 }
			size = { 100% 100% }
			margin = { 10 130 }
			margin_bottom = 10

				icon = {
					size = { 441 195 }

					using = flat_background_white
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
					using = shadow
				}

				icon = {
					size = { 440 180 }
					parentanchor = bottom
					using = flat_background_white

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
					using = shadow
				}

				icon = {
					size = { 340 195 }
					position = { 445 0 }
					using = flat_background_white

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
					using = shadow
				}

				icon = {
					size = { 340 184 }
					position = { 445 0 }
					parentanchor = bottom
					using = flat_background_white

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
					using = shadow
				}

		}


		vbox = {
			name = "city_main_box"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			widget = {
				size = { @window_width 30 }

				hbox = {
					name = "top_row"
					layoutpolicy_horizontal = expanding

					sub_header = {
						name = "uncolonized_sub_header"
						layoutpolicy_horizontal = expanding
						size = { 0 33 }
						visible = "[Not(ProvinceWindow.HasState)]"
						blockoverride "HeaderAlpha" {
							margin = { -4 0 }
						}

						blockoverride "Title_text"
						{
							datacontext = "[ProvinceWindow.GetProvince]"
							text = "UNCOLONIZED_TITLE"
							margin_left = @window_margin_left_city
						}
						blockoverride "LineVisibility" { visible = no }

					}
					sub_header = {
						visible = "[ProvinceWindow.HasState]"
						name = "city_header"
						layoutpolicy_horizontal = expanding
						size = { 0 32 }

						blockoverride "AdditionalIcons"
						{
							flowcontainer = {
								ignoreinvisible = yes
								spacing = 5

								widget = {
									size = { 40 26 }
									allow_outside = yes
									visible = "[ProvinceWindow.GetProvince.IsOccupied]"

									country_flag_reworked = {
										tooltip = "[ProvinceWindow.GetControllerTooltip]"
										position = { 2 -8 }

										blockoverride "Flag"
										{
											texture = "[ProvinceWindow.GetProvince.GetController.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
											frame = "[ProvinceWindow.GetProvince.GetController.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
											framesize = { 56 56 }
										}

										blockoverride "Size"
										{
											size = { 40 40 }
										}

										blockoverride "On_click"
										{
											onclick = "[OpenDiplomacy(ProvinceWindow.GetProvince.GetController)]"
										}
									}
								}

								white_button_round = {
									size = { 26 26 }
									datacontext = "[GetScriptedGui('small_province_view')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
									blockoverride "Icon" { texture = "gfx/interface/base_parts/up_arrow.dds" }
									blockoverride "On_click" {
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									layoutpolicy_horizontal = fixed
								}

								white_button_round = {
									layoutpolicy_horizontal = fixed
									size = { 26 26 }
									blockoverride "Icon" { texture = "gfx/interface/base_parts/down_arrow.dds" }
									datacontext = "[GetScriptedGui('small_province_view')]"
									visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End ))]"
									blockoverride "On_click" {
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
								}

								button = {
									position = { 0 -1 }
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									framesize = { 50 50 }
									size = { 26 26 }
									texture = "gfx/interface/icons/shared_icons/star.dds"
									datacontext = "[GetScriptedGui('fav_territories')]"
									frame = "[Select_int32(ScriptedGui.IsShown(GuiScope.SetRoot(ProvinceWindow.GetProvince.MakeScope).AddScope('player', Player.MakeScope).End),'(int32)2','(int32)1'))]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope).End )]"
									tooltip = "fav"
								}
							}
						}
						blockoverride "HeaderAlpha" {
							margin = { -4 0 }
						}
						blockoverride "Title_text"
						{
							text = "[ProvinceWindow.GetProvince.GetLongName]"
							margin_left = @window_margin_left_city
						}
						blockoverride "Max_text_width"
						{
							max_width = 600
						}
						blockoverride "right_margin" {
							widget = {
								size = { 60 0 }
							}
						}
					}
					hbox = {
						name = "city_header_buttons"
					}
				}

				flowcontainer = {
					parentanchor = right
					position = { -13 0 }
					spacing = 3
					ignoreinvisible = yes

					button = {
						size = { 120 30 }
						datacontext = "[GetScriptedGui('small_province_view')]"
						onclick = "[GetVariableSystem.Toggle('show_territories')]"
						tooltip = "state_provinces_button_tooltip"

						white_button_round = {
							parentanchor = vcenter|right
							size = { 26 26 }
							blockoverride "size" {
								size = { 125% 125% }
								parentanchor = center
								position = { 3 2 }
							}
							blockoverride "Icon" {
								texture = "gfx/interface/base_parts/home.dds"
							}
							blockoverride "On_click" {
								onclick = "[GetVariableSystem.Toggle('show_territories')]"
							}
							blockoverride "margin" {
								margin = { 5 5 }
							}
						}
					}

					white_button_round = {
						tooltip = "go_to"
						parentanchor = vcenter
						size = { 26 26 }
						blockoverride "On_click" {
							onclick = "[OnClickOnProvince( ProvinceWindow.GetProvince )]"
						}
						blockoverride "Icon" {
							texture = "gfx/interface/base_parts/eye.dds"
						}
					}
				}

			}

			hbox = {
				name = "second_row"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
				margin_top = 1
				margin_bottom = 4

				margin_widget = {
					size = { 0 92 }
					layoutpolicy_horizontal = expanding

					icon = {
						size = { 750 92 }
						max_width = @window_width
						texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
						# tooltip = "[ProvinceWindow.GetProvince.GetTerrain.GetTooltip]"

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_terrain_alpha.dds"
							blend_mode = alphamultiply
						}

						tooltipwidget = {
							terrain_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetTerrain]"
							}
						}
						using = tooltip_nw
					}

					flowcontainer = {
						position = { -1 0 }
						parentanchor = right
						allow_outside = yes
						ignoreinvisible = yes
						spacing = -3

						container = {
							allow_outside = yes

								button = { #New city change button because the old one was horrid - PWN
									visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
									texture = "gfx/interface/icons/province_rank/city_metropolis.dds"
									size = { 210 92 }
									position = { -300 0 }
									parentanchor = right|vcenter
									datacontext = "[GetScriptedGui('found_metropolis_button')]"
									alpha = 1
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									tooltip = "FOUND_METROPOLIS_BUTTON_TOOLTIP"
									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}
									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_terrain_alpha.dds"
										blend_mode = alphamultiply
									}
									state = {
										name = _show
										animation = {
											position = { -300 0 }
											bezier = { 1 1 0 1 }
										}
										animation = {
											size = { 210 92 }
										}
										duration = 0.35
									}
									state = {
										name = _hide
										animation = {
											position = { -10 0 }
											bezier = { 0.11 1.07 0.83 0.67 }
										}
										animation = {
											size = { 200 92 }
										}
										duration = 0.2
									}

									icon = {
										texture = "gfx/interface/base_parts/background_black_texture.dds"
										size = { 180 86 }
										position = { 0 3 }
										parentanchor = right
										visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -2 1 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 0 -2 }
										parentanchor = bottom|right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}
									using = tooltip_above
								}
								button = {
									visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
									texture = "gfx/interface/icons/province_rank/city.dds"
									size = { 210 92 }
									parentanchor = right|vcenter
									position = { 0 0 }
									datacontext = "[GetScriptedGui('found_city_button')]"
									alpha = 1
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									tooltip = "FOUND_CITY_BUTTON_TOOLTIP"
									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}

									state = {
										name = _show
										animation = {
											position = { -200 0 }
											bezier = { 1 1 0 1 }
										}
										animation = {
											size = { 210 92 }
										}
										duration = 0.25
									}
									state = {
										name = _hide
										animation = {
											position = { -10 0 }
											bezier = { 0.11 1.07 0.83 0.67 }
										}
										animation = {
											size = { 200 92 }
										}
										duration = 0.2
									}

									icon = {
										texture = "gfx/interface/base_parts/background_black_texture.dds"
										size = { 180 86 }
										position = { 0 3 }
										parentanchor = right
										visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -2 1 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 0 -2 }
										parentanchor = bottom|right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}
									using = tooltip_above
								}

								button = {
									visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
									texture = "gfx/interface/icons/province_rank/settlement.dds"
									size = { 210 92 }
									parentanchor = right|vcenter
									position = { 0 0 }
									datacontext = "[GetScriptedGui('revoke_city_status_button')]"
									alpha = 1
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									tooltip = "REVOKE_CITY_STATUS_BUTTON_TOOLTIP"
									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}

									state = {
										name = _show
										animation = {
											position = { -100 0 }
											bezier = { 1 1 0 1 }
										}
										animation = {
											size = { 210 92 }
										}
										duration = 0.15
									}
									state = {
										name = _hide
										animation = {
											position = { -10 0 }
											bezier = { 0.11 1.07 0.83 0.67 }
										}
										animation = {
											size = { 200 92 }
										}
										duration = 0.2
									}

									icon = {
										texture = "gfx/interface/base_parts/background_black_texture.dds"
										size = { 180 86 }
										position = { 0 3 }
										parentanchor = right
										visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -2 1 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 0 -2 }
										parentanchor = bottom|right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}
									using = tooltip_above
								}

								button = {
									texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
									size = { 210 92 }
									parentanchor = right
									datacontext = "[ProvinceWindow]"
									alpha = 1
									# tooltip = "P_RANKTOOLTIP"

									onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
									visible = "[And( And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue('city_change_window', 'show_city_change') ), Not( ProvinceWindow.GetProvince.IsHolySite ) )]"

									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}

									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -2 1 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 0 -2 }
										parentanchor = bottom|right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}
								}

								button = {
									texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
									size = { 210 92 }
									parentanchor = right
									datacontext = "[ProvinceWindow]"
									alpha = 1
									# tooltip = "P_RANKTOOLTIP"

									onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
									visible = "[And( And( ProvinceWindow.IsPlayerProvince, Or( Not( GetVariableSystem.Exists('city_change_window') ), GetVariableSystem.HasValue( 'city_change_window', 'dont_show_city_change' ) ) ), Not( ProvinceWindow.GetProvince.IsHolySite ) )]"

									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}

									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -2 1 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 0 -2 }
										parentanchor = bottom|right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}
								}

								margin_widget = {
									size = { 262 89 }
									position = { 52 0 }
									parentanchor = right
									scissor = yes
									visible = "[And( ProvinceWindow.GetProvince.IsHolySite, And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) ) )]"
									datacontext = "[ProvinceWindow.GetProvince]"
									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}
									tooltip_offset = { -52 0 }
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}

										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
									}
									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -54 2 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 7 1 }
										parentanchor = bottom|left

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									flowcontainer = {
										datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
										ignoreinvisible = yes
										parentanchor = top|right
										spacing = 4
										position = { -34 8 }
										#direction = vertical
										icon = {
											name = "t1"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t2"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t3"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}
										margin_right = 24
									}

								}

								margin_widget = {
									size = { 262 89 }
									position = { 52 0 }
									parentanchor = right
									scissor = yes
									visible = "[And( ProvinceWindow.GetProvince.IsHolySite, And( ProvinceWindow.IsPlayerProvince, Or( Not( GetVariableSystem.Exists('city_change_window') ), GetVariableSystem.HasValue( 'city_change_window', 'dont_show_city_change' ) ) ) )]"
									datacontext = "[ProvinceWindow.GetProvince]"
									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}
									tooltip_offset = { -52 0 }
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}

										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
										button = {
											onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
									}
									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 140 6 }
										position = { -54 2 }
										parentanchor = right

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									icon = {
										texture = "gfx/interface/base_parts/button_allframes.dds"
										framesize = { 100 100 }
										frame = 4
										size = { 204 6 }
										position = { 7 1 }
										parentanchor = bottom|left

										modify_texture = {
											name = "linealpha"
											texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
											blend_mode = alphamultiply
										}

									}

									flowcontainer = {
										datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
										ignoreinvisible = yes
										parentanchor = top|right
										spacing = 4
										position = { -34 8 }
										#direction = vertical
										icon = {
											name = "t11"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t12"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t13"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}
										margin_right = 24
									}

								}
								margin_widget = {
									size = { 262 89 }
									position = { 52 -1 }
									parentanchor = right
									scissor = yes
									visible = "[And( ProvinceWindow.GetProvince.IsHolySite, Not( ProvinceWindow.IsPlayerProvince ) )]"
									datacontext = "[ProvinceWindow.GetProvince]"
									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}
									tooltip_offset = { -52 0 }
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
										icon = {
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}

										}
										icon = {
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier1.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
										icon = {
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
										icon = {
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier2.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
									container = {
										visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
										icon = {
											size = { 210 122 }
											visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
											texture = "gfx/interface/religion/rotw_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
										icon = {
											size = { 210 122 }
											visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
											texture = "gfx/interface/religion/hellenic_tier3.dds"
											alpha = 1
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
											modify_texture = {
												name = "City_Alpha"
												texture = "gfx/interface/base_parts/province_city_alpha.dds"
												blend_mode = alphamultiply
											}
										}
									}
									flowcontainer = {
										datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
										ignoreinvisible = yes
										parentanchor = top|right
										spacing = 4
										position = { -34 8 }
										#direction = vertical
										icon = {
											name = "t111"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t112"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}

										icon = {
											name = "t113"
											visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
											texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
											size = { 32 32 }
											tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
											glow = {
												glow_radius = 4
												color = { 1 1 1 1 }
											}
										}
										margin_right = 24
									}
								}
								icon = {
									visible = "[And( Not( ProvinceWindow.GetProvince.IsHolySite ), Not( ProvinceWindow.IsPlayerProvince ) )]"
									texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
									size = { 210 92 }
									parentanchor = right
									datacontext = "[ProvinceWindow]"
									alpha = 1
									# tooltip = "P_RANKTOOLTIP"

									modify_texture = {
										name = "Alpha"
										texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
										blend_mode = alphamultiply
										spriteType = Corneredtiled
										spriteborder = { 60 60 }
									}

									modify_texture = {
										name = "City_Alpha"
										texture = "gfx/interface/base_parts/province_city_alpha.dds"
										blend_mode = alphamultiply
									}

									tooltipwidget = {
										province_rank_tooltip_base = {
											datacontext = "[ProvinceWindow.GetProvince.GetRank]"
										}
									}

								}

								fixed_size_progressbar = {
									blockoverride "size" { size = { 176 7 } }
									parentanchor = bottom|right
									position = { -9 -8 }
									visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_city_in_progress')]"
									tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetTooltip]"
									blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetProgress)]" }
									blockoverride "ProgressAlpha" {}
								}

								fixed_size_progressbar = {
								blockoverride "size" { size = { 176 7 } }
								parentanchor = bottom|hcenter
								position = { -9 -8 }
								visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_metropolis_in_progress')]"
								tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetTooltip]"
								blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetProgress)]" }
								blockoverride "ProgressAlpha" {}
							}
						}

						cpt_button = {
							parentanchor = vcenter
							size = { 55 85 }

							datacontext = "[ProvinceWindow.GetHoldingsOwners]"
							visible = "[ProvinceWindow.GetHoldingsOwners.IsValid]"
							
							icon = {
								size = { 100% 50% }
								parentanchor = bottom
								tooltip = "HOLDING_OWNER_TEXT"
							}
						}
						# icon_button_square = {
						# 	#position = { -50 -50}
						# 	parentanchor = vcenter
						# 	size = { 55 85 }
						# 	blockoverride "Center_text" { text = "" }
						# 	blockoverride "Icon" { texture = "" }
						# 	datacontext = "[GetScriptedGui('holding_char')]"
						# 	blockoverride "On_click" {
						# 	onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( Player.MakeScope ).End]"
						# 	onclick = "[ExecuteConsoleCommand('gui.ClearWidgets grant_holding_window')]"
						# 	onclick = "[ExecuteConsoleCommand('gui.createwidget gui/holding_window.gui grant_holding_window')]"
						# 	}
						# 	visible = "[Not(ProvinceWindow.GetHoldingsOwners.IsValid)]"
							
						# 	 icon = {
						# 	 	size = { 100% 50% }
						# 	 	parentanchor = bottom
						# 	 	tooltip = "HOLDING_OWNER_TEXT"
						# 	 }
						# }

						widget = {
							visible = "[ProvinceWindow.GetHoldingsOwners.IsValid]"
							size = { 5 0 }
						}
					}

					fixed_size_progressbar = {
						blockoverride "size" { size = { 176 7 } }
						parentanchor = bottom|right
						position = { -9 -8 }
						visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_city_in_progress')]"
						tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetTooltip]"
						blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetProgress)]" }
						blockoverride "ProgressAlpha" {}
					}

					fixed_size_progressbar = {
						blockoverride "size" { size = { 176 7 } }
						parentanchor = bottom|hcenter
						position = { -9 -8 }
						visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_metropolis_in_progress')]"
						tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetTooltip]"
						blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetProgress)]" }
						blockoverride "ProgressAlpha" {}
					}
				}
			}

			flowcontainer = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				name = "third_row"
				margin_top = 12
				margin_left = 15
				spacing = 16
				@buildwidth = 430
				@popwidth = 330
				@topline = 31
				@tab_height = 28

				flowcontainer = {
					direction = vertical

					flowcontainer = {
						spacing = 5
						direction = vertical

						widget = {
							size = { @buildwidth @topline }

							flowcontainer = {
								ignoreinvisible = no

								icon_and_text = {
									# tooltipwidget = {
									# 	using = double_tooltip_vert
									#
									# 	blockoverride "line" {
									# 	}
									#
									# 	blockoverride "TopText" {
									# 		text = "[ProvinceWindow.GetProvince.GetBuildingLevelInformation]"
									# 	}
									# 	blockoverride "BotText" {
									# 		text = "Wonder: #R -1.00"
									# 		visible = "[And(ProvinceWindow.GetProvince.HasGreatWork, Not(ProvinceWindow.GetProvince.HasMultipleGreatWorks))]"
									# 	}
									# 	blockoverride "ThirdText" {
									# 		text = "Wonders: #R -2.00"
									# 		visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
									# 	}
									# }
									tooltip = "[ProvinceWindow.GetProvince.GetBuildingLevelInformation]"
									size = { @stats_icon_width 0 }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/building_slot.dds"
									}
									blockoverride "Text"
									{
										text = "[ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels]/[ProvinceWindow.GetProvince.GetAllowedAmountOfBuildingLevels]"
									}
								}

								scrollarea = {
									size = { 240 31 }
									scrollbarpolicy_horizontal = always_off
									visible = "[Not(IsDataModelEmpty(ProvinceWindow.GetQueuedBuildings))]"

									scrollbar_vertical = {
										using = VerticalScrollBar
									}

									using = VerticalScrollAreaCutOff

									scrollwidget = {
										overlappingitembox = {
											name = "queued_buildings_grid"
											size = { 100% 100% }
											#datamodel_wrap = 1

											datamodel = "[ProvinceWindow.GetQueuedBuildings]"

											item = {
												button = {
													gfxtype = togglepushbuttongfx
													size = { 32 32 }
													onrightclick = "[BuildingItem.Cancel]"
													enabled = "[BuildingItem.CanCancel]"
													icon = {
														size = { 32 32 }
														texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
													}
													tooltip = "[BuildingItem.GetCancelInfo]"
												}
											}
										}
									}
								}

								icon_and_text = {
									#parentanchor = right
									name = "province_output"
									size = { @stats_icon_width 0 }
									tooltip = "[ProvinceWindow.GetProvince.GetModifierTooltip('local_output_modifier')]"
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/modifiers/local_output_modifier.dds"
									}
									blockoverride "Text"
									{
										text = "[ProvinceWindow.GetProvince.GetModifierValue('local_output_modifier')]"
									}
								}
							}
						}

						widget = {
							size = { 430 145 }

							# widget = {
							# 	size = { 420 138 }
							# 	position = { 6 0 }
							# 	using = NoninteractableBG
							# 	alpha = 0
							# 	visible = "[And(Or(EqualTo_int32(ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels, '(int32)0'), And(Not(IsDataModelEmpty(ProvinceWindow.GetQueuedBuildings)), EqualTo_int32(ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels, '(int32)1') ) ), Not( ProvinceWindow.GetProvince.HasCityStatus))]"
							# }

							scrollarea = {
								size = { 430 145 }
								scrollbarpolicy_horizontal = always_off

								scrollbar_vertical = {
									using = VerticalScrollBar
								}

								scrollwidget = {


									margin_widget = {
										size = { 430 145 }
										flowcontainer = {
											visible = "[Not(ProvinceWindow.GetProvince.HasCityStatus)]"
											ignoreinvisible = yes
											parentanchor = hcenter
											alpha = 0.4

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/combat/siege_tribal_1.dds"

												datacontext = "[GetScriptedGui('fortress_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/Event_trader_ship_in_port_person_in_foreground.dds"

												datacontext = "[GetScriptedGui('port_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/Event_picture_of_a_doorway_from_the_outside.dds"

												datacontext = "[GetScriptedGui('barracks_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/event_slaves_working_in_agriculture_latifundia.dds"

												datacontext = "[GetScriptedGui('latifundia_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/event_stone_being_hewn_in_roman_quarry.dds"

												datacontext = "[GetScriptedGui('slave_mine_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/Event_farmer_in_latin_countryside.dds"

												datacontext = "[GetScriptedGui('basic_settlement_infratructure_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}

											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/Event_gallic_village_scene.dds"

												datacontext = "[GetScriptedGui('hill_fort')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}


											icon = {
												size = { 430 145 }
												texture = "gfx/interface/event_window/Event_greek_philosopher_talking.dds"

												datacontext = "[GetScriptedGui('local_forum_building')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
											}
										}

										dynamicgridbox = {
											visible = "[LessThanOrEqualTo_int32(GetDataModelSize(ProvinceWindow.GetPossibleBuildings), '(int32)16')]"
											position = { 0 0 }
											datamodel_wrap = 2
											parentanchor = hcenter
											widgetanchor = hcenter

											datamodel = "[ProvinceWindow.GetPossibleBuildings]"

											item = {
												widget = {
													size = { 54 72 }
													building_item_button_my = {
														blockoverride "On_click" {
															onclick = "[BuildingItem.Build]"
															enabled = "[Or( BuildingItem.CanBuild, BuildingItem.HasQueue )]"
															onrightclick = "[BuildingItem.CancelOrDestroy]"
														}
														blockoverride "Text" { text = "[BuildingItem.GetLevel]" }
														blockoverride "ExtraText"
														{
															visible = "[BuildingItem.HasQueue]"
															text = "+[BuildingItem.GetQueueSize]"
														}
													}
												}
											}
										}

										dynamicgridbox = {
											visible = "[GreaterThan_int32(GetDataModelSize(ProvinceWindow.GetPossibleBuildings), '(int32)16')]"
											name = "possible_buildings_grid"
											position = { 0 0 }
											datamodel_wrap = 8
											flipdirection = yes
											parentanchor = hcenter
											widgetanchor = hcenter

											datamodel = "[ProvinceWindow.GetPossibleBuildings]"

											item = {
												widget = {
													size = { 54 48 }
													building_item_button_my_compact = {
														blockoverride "On_click" {
															onclick = "[BuildingItem.Build]"
															enabled = "[Or( BuildingItem.CanBuild, BuildingItem.HasQueue )]"
															onrightclick = "[BuildingItem.CancelOrDestroy]"
														}
														blockoverride "Text" { text = "[BuildingItem.GetLevel]" }
														blockoverride "ExtraText"
														{
															visible = "[BuildingItem.HasQueue]"
															text = "+[BuildingItem.GetQueueSize]"
														}
													}
												}
											}
										}
									}
								}
							}

							# icon = {
							# 	position = { 0 -7 }
							# 	texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
							# 	spriteType = Corneredtiled
							# 	spriteborder = { 30 0 }
							# 	color = { 0.5 0.3 0.1 0.6 }
							# 	size = { 100% 6 }
							# }
							#
							# icon = {
							# 	position = { 0 0 }
							# 	parentanchor = bottom
							# 	texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
							# 	spriteType = Corneredtiled
							# 	spriteborder = { 30 0 }
							# 	color = { 0.5 0.3 0.1 0.6 }
							# 	size = { 100% 6 }
							# }
						}

					}

					widget = {
						size = { 0 10 }
					}

					widget = {
						size = { 432 @tab_height }

						hbox = {
							position = { -1 0 }
							#layoutpolicy_vertical = preferred
							#layoutpolicy_horizontal = expanding
							spacing = -2

							tab_button_my = {
								name = "tactical_tab"
								size = { 0 @tab_height }
								enabled = "[And( GetVariableSystem.Exists('province_tabs'), Not(GetVariableSystem.HasValue( 'province_tabs', 'tactical')) )]"
								blockoverride "lower_line" {
									visible = "[And(  GetVariableSystem.Exists('province_tabs'), Not(Or(GetVariableSystem.HasValue( 'province_tabs', 'tactical'), GetVariableSystem.HasValue( 'province_tabs', 'buildings'))) )]"
								}

								######## Shared Overrides
								blockoverride "Center_text" { visible = no }
								blockoverride "Center_text_and_icon" { visible = yes }
								blockoverride "Button_text" {
								}
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/tactical.dds"
								}
								######## Small Button Overrides
								blockoverride "On_click"
								{
									shortcut = "macro_builder"
									tooltip = "‎"
									onclick = "[GetVariableSystem.Set('province_tabs', 'tactical')]"
								}
							}
							tab_button_my = {
								name = "pops_tab"
								size = { 0 @tab_height }
								enabled = "[Not(GetVariableSystem.HasValue( 'province_tabs', 'pops') )]"
								blockoverride "lower_line" {
									visible = "[Not(GetVariableSystem.HasValue( 'province_tabs', 'pops') )]"
								}
								######## Shared Overrides
								blockoverride "Center_text" { visible = no }
								blockoverride "Center_text_and_icon" { visible = yes }
								blockoverride "Button_text" {
								}
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/population.dds"
								}
								######## Small Button Overrides
								blockoverride "On_click"
								{
									shortcut = "go_to_button"
									tooltip = "‎"
									onclick = "[GetVariableSystem.Set('province_tabs', 'pops')]"
								}
							}

							tab_button_my = {
								visible = "[Or(HasDlc('Heirs of Alexander'), ProvinceWindow.GetProvince.HasGreatWork)]"
								size = { 0 @tab_height }
								enabled = "[Not( GetVariableSystem.HasValue('province_tabs', 'great_works'))]"
								blockoverride "lower_line" {
									visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'great_works'))]"
								}
								######## Shared Overrides
								blockoverride "Center_text" { visible = no }
								blockoverride "Center_text_and_icon" { visible = yes }
								blockoverride "Button_text" {
								}
								blockoverride "Icon"
								{
									flowcontainer = {
										ignoreinvisible = yes
										parentanchor = hcenter
										icon = {
											size = { 30 30 }
											texture = "gfx/interface/province/gw_map_icon.dds"
											tintcolor = { 0.8 0.8 0.8 1 }
											#visible = "[Not(ProvinceWindow.HasGreatWork)]"
										}
										icon = {
											size = { 30 30 }
											visible = "[ProvinceWindow.HasGreatWork]"
											texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"

											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}
								}
								######## Small Button Overrides
								blockoverride "On_click"
								{
									shortcut = "confirm"
									tooltip = "‎"
									onclick = "[GetVariableSystem.Set('province_tabs', 'great_works')]"
								}
							}
						}
					}

					widget = { #tabs
						size = { 431 145 }

						vbox = {
							name = "tactical_tab"
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							visible = "[Or( Not( GetVariableSystem.Exists('province_tabs') ), Or(GetVariableSystem.HasValue( 'province_tabs', 'tactical'), GetVariableSystem.HasValue( 'province_tabs', 'buildings')))]"
							state = {
								name = "show_tactical_tab"

								on_start = "[PdxGuiWidget.Show]"
							}
							using = hide_province_tab

							margin_widget = {
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								margin = { 12 0 }
								margin_bottom = 0

								margin_widget = {
									size = { 100% 100% }
									position = { 2 0 }
									margin_top = 5

									flowcontainer = {
										direction = vertical
										spacing = 5
										flowcontainer = {
											spacing = 35
											icon_and_text = {
												name = "fort_level"
												size = { @stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetProvince.GetFortLevelTooltip]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/shared_icons/fort_frames.dds"
													framesize = { 50 50 }
													frame = "[ProvinceWindow.GetProvince.GetFortLevel]"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetProvince.GetFortLevel]"
												}
											}
											icon_and_text = {
												name = "garrison"
												size = { @big_stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetProvince.GetGarrisonTooltip]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/shared_icons/garrison.dds"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetProvince.GetGarrison]"
												}
											}
											icon_and_text = {
												name = "province_combat_width"
												size = { @big_stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetProvince.GetCombatWidthTooltip]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/diplomatic_status/war.dds"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetProvince.GetCombatWidth]"
												}
											}
										}
										flowcontainer = {
											spacing = 35
											icon_and_text = {
												#name = "fort_level"
												size = { @stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetState.GetFortsDesc]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/modifiers/fort_limit.dds"
													framesize = { 50 50 }
													frame = "[ProvinceWindow.GetProvince.GetFortLevel]"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetState.GetFortsCurrent]/[ProvinceWindow.GetState.GetFortsLimit]"
												}
											}
											icon_and_text = {
												name = "fort_defense"
												size = { @big_stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetProvince.GetLocalDefensiveTooltip]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/modifiers/local_defensive.dds"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetProvince.GetLocalDefensive|+=%]"
												}
											}

											icon_and_text = {
												name = "supply_limit"
												size = { @big_stats_icon_width 0 }
												tooltip = "[ProvinceWindow.GetSupplyLimitDescription]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/shared_icons/supply_limit.dds"
												}
												blockoverride "Text"
												{
													text = "[ProvinceWindow.GetSupplyLimit|1]"
												}
											}
										}
									}

									widget = {
										size = { 100% 50 }
										parentanchor = bottom
										position = { 0 -10 }

										flowcontainer = {
											ignoreinvisible = yes
											#layoutpolicy_vertical = expanding
											#layoutpolicy_horizontal = expanding
											spacing = 10
											parentanchor = bottom
											@bigbutton = 130

											margin_widget = {
												size = { @bigbutton 50 }

												name = "recruit navies"
												tooltip = "BUILD_NAVIES_TT"
												enabled = "[ProvinceWindow.CanBuildShips]"
												visible = "[ProvinceCanHavePort(ProvinceWindow.GetProvince)]"

												background = {
													texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
													shaderfile = "gfx/FX/pdxgui_default.shader"
													spriteType = corneredtiled
													spriteborder = { 8 8 }
													margin_left = 4
													margin_bottom = 4
													alpha = 0.5
												}

												margin_widget = {
													size = { 100% 100% }
													margin = { 2 2 }
													margin_top = 1
													icon = {
														using = button_tiled_texture
														spriteType = Corneredtiled
														spriteborder = { 200 200 }
														size = { 100% 100% }
														framesize = { 200 200 }
													}
												}
												margin_widget = {
													size = { 100% 100% }
													margin = { 5 5 }
													margin_top = 4
													button = {
														size = { 100% 100% }
														texture = "gfx/interface/icons/province_window/recruit_navies.dds"
														onclick = "[ProvinceWindow.ShowBuildNavies]"
														modify_texture = {
															name = "Alpha"
															texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
															blend_mode = alphamultiply
															spriteType = Corneredtiled
															spriteborder = { 1 0 }
														}
													}
													
												}
												
											}
											# button_round_inverted = {
											# 	size = { 40 40 }
											# 	position = { 130 0 }
											# 	parentanchor = bottom
											# 	datacontext = "[GetScriptedGui('create_crew')]"
											# 	blockoverride "Icon" { texture = "gfx/interface/icons/subunits/marines_small.dds" }
												
											# 	blockoverride "On_click"
											# 	{
											# 		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
											# 		enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
											# 		tooltip = "CREATE_CREW_BUTTON"

											# 	}
											# }

											widget = {
												size = { 0 0 }
											}

											icon_button_square = {
												parentanchor = vcenter
												size = { 42 42 }

												datacontext = "[GetScriptedGui('mercenary_city_button')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"

												blockoverride "On_click"
												{
													enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
													onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
													tooltip = "MERC_CITY_BUTTON"
												}

												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
											}

											widget = {
												size = { 0 0 }
											}

											icon_button_square = {
												size = { 42 42 }

												parentanchor = vcenter
												datacontext = "[GetScriptedGui('league_city_button')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"

												blockoverride "On_click"
												{
													enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
													onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
													tooltip = "LEAGUE_CITY_BUTTON"
												}

												blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
											}
										}

										container = {
											using = build_roads_button
											parentanchor = right
											blockoverride "brb_size" {
												size = { 130 28 }
												position = { -10 15 }
											}
										}
									}

								}
							}
						}

						margin_widget = {
							size = { 100% 100% }
							margin = { 5 0 }
							margin_top = 10

							visible = "[GetVariableSystem.HasValue('province_tabs', 'pops')]"
							@progresswidth = 200
							@progressheight = 40

							flowcontainer = {
								direction = vertical
								spacing = 5

								flowcontainer = {
									spacing = 15

									flowcontainer = {
										direction = vertical
										spacing = 5

										flowcontainer = {
											direction = vertical
											icon_and_text_progress = {
												blockoverride "TotalSize" { size = { @progresswidth @progressheight} }
												blockoverride "size" { size = { 100% 7 } margin_right = 13 }
												alpha = "[TransparentIfTrue(Not(ProvinceWindow.GetProvince.HasPopActivity('assimilate')))]"

												blockoverride "Icon" {
													flowcontainer = {
														position = { 0 -3 }
														spacing = -5
														visible = "[ProvinceWindow.GetProvince.HasPopActivity('assimilate')]"
														icon = {
															using = icon_culture
															size = { @icon_size @icon_size }
														}
														icon = {
															texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('assimilate').GetPop.GetType)]"
															size = { @icon_size @icon_size }
														}
													}
												}

												blockoverride "Text" {
													text = "[ProvinceWindow.GetProvince.GetActivitySpeed('assimilate')|+=/%]"
													margin_right = 0
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('assimilate')]"
												}
												blockoverride "Value"
												{
													value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('assimilate'))]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('assimilate')]"
												}
												tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('assimilate')]"
												tag = {
													text = "NO_ASSIMILATION_TITLE"
													maximumsize = { 180 30 }
													fontsize = 15
													position = { 15 3 }
													visible = "[Not(ProvinceWindow.GetProvince.HasPopActivity('assimilate'))]"
												}
											}
										}

										flowcontainer = {
											direction = vertical

											icon_and_text_progress = {
												alpha = "[TransparentIfFalse(ProvinceWindow.GetProvince.HasPopActivity('convert'))]"
												blockoverride "TotalSize" { size = { @progresswidth @progressheight} }
												blockoverride "size" { size = { 100% 7 } margin_right = 13 }
												blockoverride "Icon" {

													flowcontainer = {
														position = { 0 -3 }
														spacing = -5
														icon = {
															using = icon_religious
															size = { @icon_size @icon_size }
														}
														icon = {
															texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('convert').GetPop.GetType)]"
															size = { @icon_size @icon_size }
														}
														visible = "[ProvinceWindow.GetProvince.HasPopActivity('convert')]"
													}
												}
												blockoverride "Text" {
													text = "[ProvinceWindow.GetProvince.GetActivitySpeed('convert')|+=/%]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('convert')]"
												}
												blockoverride "Value" {
													value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('convert'))]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('convert')]"
												}
												tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('convert')]"
												tag = {
													text = "NO_CONVERSION_TITLE"
													maximumsize = { 180 30 }
													position = { 15 3 }
													fontsize = 15
													visible = "[Not(ProvinceWindow.GetProvince.HasPopActivity('convert'))]"
												}
											}
										}
									}

									flowcontainer = {
										direction = vertical
										spacing = 5

										flowcontainer = {
											direction = vertical
											icon_and_text_progress = {
												blockoverride "TotalSize" { size = { @progresswidth @progressheight} }
												blockoverride "size" { size = { 100% 7 } margin_right = 13 }
												alpha = "[TransparentIfTrue(Not(ProvinceWindow.GetProvince.HasPopActivity('promote')))]"

												blockoverride "Icon" {
													flowcontainer = {
														position = { 0 -3 }
														spacing = -5
														visible = "[ProvinceWindow.GetProvince.HasPopActivity('promote')]"
														icon = {
															texture = "gfx/interface/icons/modifiers/local_pop_promotion_speed.dds"
															size = { @icon_size @icon_size }
														}
														icon = {
															texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('promote').GetPop.GetType)]"
															size = { @icon_size @icon_size }
														}
													}
												}

												blockoverride "Text" {
													text = "[ProvinceWindow.GetProvince.GetActivitySpeed('promote')|+=/%]"
													margin_right = 0
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('promote')]"
												}
												blockoverride "Value"
												{
													value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('promote'))]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('promote')]"
												}
												tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('promote')]"
												tag = {
													text = "NO_PROMOTION_OR_DEMOTION_TITLE"
													maximumsize = { 180 30 }
													fontsize = 15
													position = { 15 3 }
													visible = "[Not(ProvinceWindow.GetProvince.HasPopActivity('promote'))]"
												}
											}
										}

										flowcontainer = {
											direction = vertical

											icon_and_text_progress = {
												alpha = "[TransparentIfFalse(ProvinceWindow.GetProvince.HasPopActivity('demote'))]"
												blockoverride "TotalSize" { size = { @progresswidth @progressheight} }
												blockoverride "size" { size = { 100% 7 } margin_right = 13 }
												blockoverride "Icon" {
													flowcontainer = {
														position = { 0 -3 }
														spacing = -5
														icon = {
															texture = "gfx/interface/icons/modifiers/local_pop_demotion_speed.dds"
															size = { @icon_size @icon_size }
														}
														icon = {
															texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('demote').GetPop.GetType)]"
															size = { @icon_size @icon_size }
														}
														visible = "[ProvinceWindow.GetProvince.HasPopActivity('demote')]"
													}
												}
												blockoverride "Text" {
													text = "[ProvinceWindow.GetProvince.GetActivitySpeed('demote')|+=/%]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('demote')]"
												}
												blockoverride "Value" {
													value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('demote'))]"
													visible = "[ProvinceWindow.GetProvince.HasPopActivity('demote')]"

													progressbar = {
														size = { 100% 100% }
														texture = "gfx/interface/base_parts/progressbar_white_tile.dds"
														color = { 1 0.6 0.0 1 }
														value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('demote'))]"
													}
												}
												tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('demote')]"
												tag = {
													text = "NO_PROMOTION_OR_DEMOTION_TITLE"
													maximumsize = { 180 30 }
													position = { 15 3 }
													fontsize = 15
													visible = "[Not(ProvinceWindow.GetProvince.HasPopActivity('demote'))]"
												}
											}
										}
									}
								}

								flowcontainer = {
									spacing = 15
									@smallprogress = 130

									flowcontainer = {
										direction = vertical

										icon_and_text_progress = {
											visible = "[ProvinceWindow.GetProvince.HasPopActivity('growing_pop')]"
											blockoverride "TotalSize" { size = { @smallprogress @progressheight} }
											blockoverride "size" { size = { 100% 7 } margin_right = 13 }
											blockoverride "Icon" {

												tag = {
													position = { 3 -5 }
													text = "#g +"
													fontsize = 30
												}

												icon = {
													position = { 15 -3 }
													texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('growing_pop').GetPop.GetType)]"
													size = { @icon_size @icon_size }
												}
											}
											blockoverride "Text" {
												text = "[ProvinceWindow.GetProvince.GetActivitySpeed('growing_pop')|+=/%]"
											}
											blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('growing_pop'))]" }
											tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('growing_pop')]"
										}
									}

									flowcontainer = {
										direction = vertical

										icon_and_text_progress = {
											alpha = "[TransparentIfFalse(ProvinceWindow.GetProvince.HasPopActivity('migrant'))]"
											icon = {
												size = { 100% 100% }
												tooltip = "NO_POP_MIGRATING_TEXT"
												visible = "[Not(ProvinceWindow.GetProvince.HasPopActivity('migrant'))]"
											}
											blockoverride "TotalSize" { size = { @smallprogress @progressheight} }
											blockoverride "size" { size = { 100% 7 } margin_right = 13 }
											blockoverride "Icon" {
												flowcontainer = {
													position = { 0 -3 }
													spacing = -5
													icon = {
														texture = "gfx/interface/icons/modifiers/local_migration_speed.dds"
														size = { @icon_size @icon_size }
													}
													icon = {
														visible = "[ProvinceWindow.GetProvince.HasPopActivity('migrant')]"
														texture = "[GetPopIcon(ProvinceWindow.GetProvince.GetPopActivity('migrant').GetPop.GetType)]"
														size = { @icon_size @icon_size }
													}
												}
											}
											blockoverride "Text" {
												visible = "[ProvinceWindow.GetProvince.HasPopActivity('migrant')]"
												text = "[ProvinceWindow.GetProvince.GetActivitySpeed('migrant')|+=/%]"
											}
											blockoverride "Value" {
												value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('migrant'))]"
												visible = "[ProvinceWindow.GetProvince.HasPopActivity('migrant')]"

												progressbar = {
													size = { 100% 100% }
													texture = "gfx/interface/base_parts/progressbar_white_tile.dds"
													color = { 1 0.6 0.0 1 }
													value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetActivityStatus('migrant'))]"
												}
											}
											tooltip = "[ProvinceWindow.GetProvince.GetActivityInformation('migrant')]"
										}
									}

									icon_and_text = {
										size = { 120 38 }
										blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetModifierValue('local_migration_attraction')]" }
										blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/local_migration_speed.dds" }
										tooltip = "[ProvinceWindow.GetProvince.GetModifierTooltip('local_migration_attraction')]"
									}
								}
							}

						}

						vbox = {
							name = "great_works_tab"
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							visible = "[GetVariableSystem.HasValue('province_tabs', 'great_works')]"

							using = hide_province_tab

							state = {
								name = hide_wonder
								trigger_when = "[And(Not(HasDlc('Heirs of Alexander')), Not(ProvinceWindow.GetProvince.HasGreatWork))]"
								on_start = "[GetVariableSystem.Set('province_tabs', 'pops')]"
							}

							margin_widget = {
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								margin = { 10 0 }
								margin_bottom = 0

								widget = {
									size = { 100% 100% }
									visible = "[Not(ProvinceWindow.HasGreatWork)]"

									icon = {
										scale = 0.6
										parentanchor = center
										texture = "gfx/interface/icons/great_work/panel/construct_wonder.dds"
									}

									text_button_square = {
										parentanchor = hcenter|bottom
										position = { 0 -10 }
										size = { 250 0 }
										blockoverride "Center_text" { text = "OPEN_GREAT_WORKS" }
										blockoverride "On_click"
										{
											onclick = "[ProvinceWindow.OpenGreatWorkWindowBuild]"
											enabled = "[ProvinceWindow.CanBuildGreatWork]"
											tooltip = "[ProvinceWindow.CanBuildGreatWorkTooltip]"
										}
									}
								}

								margin_widget = { #Great Wonder under construction
									size = { 100% 100% }
									datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
									visible = "[And(ProvinceWindow.HasGreatWork, Not(GreatWork.IsCompleted))]"
									margin_bottom = 5

									tag = {
										visible = "[Not(ProvinceWindow.GetProvince.HasMultipleGreatWorks)]"
										parentanchor = bottom
										position = { 0 -3 }
										using = BaseFontM
										using = Black_FontColor

										text = "[GreatWork.GetName]"
										maximumsize = { 235 -1 }
										elide = right
										blockoverride "LineVisibility"
										{
											visible = yes
										}
									}

									tag = {
										visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
										parentanchor = bottom
										position = { 66 -3 }
										using = BaseFontM
										using = Black_FontColor

										text = "[GreatWork.GetName]"
										maximumsize = { 180 -1 }
										elide = right
										blockoverride "LineVisibility"
										{
											visible = yes
										}
									}

									widget = {
										size = { 100% 100% }
										position = { 0 5 }

										widget = { #Image
											size = { 110 110 }
											position = { -5 5 }


											widget = {
												size = { 85% 100% }
												tooltipwidget = {
													icon = {
														size = { 400 400 }
														texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"

														modify_texture = {
															name = "Alpha"
															texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
															blend_mode = alphamultiply
															spriteType = Corneredtiled
															spriteborder = { 60 60 }
														}

														background = {
															shaderfile = "gfx/FX/pdxgui_default.shader"
															using = flat_background_white
														}

														background = {
															shaderfile = "gfx/FX/pdxgui_default.shader"
															texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
															spriteType = Corneredtiled
															alpha = 0.2
															margin_bottom = -10
															modify_texture = {
																name = "Alpha"
																texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
																blend_mode = alphamultiply
																spriteType = Corneredtiled
																spriteborder = { 60 60 }
															}
														}
													}

												}

											}

											icon = {
												parentanchor = vcenter|hcenter
												size = {100% 100%}
												position = {0 -10}
												texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"
												shaderfile = "gfx/FX/pdxgui_default.shader"

												background = {
													shaderfile = "gfx/FX/pdxgui_default.shader"
													texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
													spriteType = Corneredtiled
													margin_bottom = -10
													modify_texture = {
														name = "Alpha"
														texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
														blend_mode = alphamultiply
														spriteType = Corneredtiled
														spriteborder = { 60 60 }
													}
												}


												modify_texture = {
													name = "Alpha"
													texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
													blend_mode = alphamultiply
													spriteType = Corneredtiled
													spriteborder = { 60 60 }
												}
											}
										}

										flowcontainer = { # Tier Progress
											position = { 105 0 }
											direction = vertical

											background = {
												shaderfile = "gfx/FX/pdxgui_default.shader"
												texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
												spriteType = Corneredtiled
												alpha = 0.7
												modify_texture = {
													name = "Alpha"
													texture = "gfx/interface/base_parts/gradient_black.dds"
													blend_mode = alphamultiply
													#spriteType = Corneredtiled
													#spriteborder = { 0 120 }
												}
											}

											tooltip = "[GetGreatWorkPrestigeTooltip(GreatWork.GetPrestige)]"

											great_work_tier_my = {
												size = { 8 50 }
												blockoverride "tier_tooltip"
												{
													tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_4')]"
												}
												blockoverride "progressbar_value"
												{
													value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_4', GreatWork.GetPrestige)]"
												}
											}
											great_work_tier_my = {
												size = { 8 30 }
												blockoverride "tier_tooltip"
												{
													tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_3')]"
												}
												blockoverride "progressbar_value"
												{
													value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_3', GreatWork.GetPrestige)]"
												}
											}
											great_work_tier_my = {
												size = { 8 20 }
												blockoverride "tier_tooltip"
												{
													tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_2')]"
												}
												blockoverride "progressbar_value"
												{
													value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_2', GreatWork.GetPrestige)]"
												}
											}
										}

										flowcontainer = { #Effects
											position = { 125 0 }
											direction = vertical
											spacing = 0
											using = NoninteractableBG
											blockoverride "Margins"
											{
												margin = { 10 5 }
											}
											datamodel = "[GreatWork.GetEffects]"

											item = {
												margin_widget = {
													size = { 33 33 }

													tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"

													widget = {
														visible = "[GreatWorkEffectSelection.IsSet]"
														size = { 30 30 }
														parentanchor = vcenter|left

														icon = {
															parentanchor = vcenter|hcenter
															size = { 85% 85% }
															texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

															icon = {
																parentanchor = bottom|right
																size = {60% 60%}
																texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
															}
														}
													}

													icon = {
														visible = "[Not(GreatWorkEffectSelection.IsSet)]"
														size = {30 30}
														parentanchor = vcenter|left
														texture = "gfx/interface/icons/shared_icons/ideas.dds"
													}

													# icon_and_text = {
													# 	visible = "[GreatWorkEffectSelection.IsSet]"
													# 	parentanchor = vcenter
													# 	position = { 26 0 }
													# 	size = { 190 40 }
													# 	max_width = 190
													# 	blockoverride "Text"
													# 	{
													# 		text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
													# 	}
													# 	blockoverride "Icon"
													# 	{
													# 		visible = no
													# 	}
													# }
												}
											}
										}

										cpt_button = {
											visible = "[Not(GreatWork.IsAncientWonder)]"
											name = "portrait"
											datacontext = "[GreatWork.GetLeader]"
											tooltip = "[GreatWork.GetLeaderTooltip]"
											position = { 170 0 }
											size = { 80 124 }
											scale = 0.8
											#button = {
											#	parentanchor = bottom|right
											#	position = {3 2}
											#	size = { 30 30 }
											#
											#	distribute_visual_state = no
											#	tooltip = "Change Leader"
											#
											#	onclick = "[ClickHighlight('btn_great_work_replace_leader')]"
											#	onclick = "[ProvinceWindow.OnClickChangeLeader]"
											#	texture = "gfx/interface/buttons/button_round_40.dds"
											#	icon = {
											#		texture = "gfx/interface/icons/shared_icons/change.dds"
											#		parentanchor = hcenter|vcenter
											#		size = { 60% 60% }
											#		position = { 0 0 }
											#	}
											#	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
											#	#oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
											#
											#	icon = {
											#		using = highlight_button_circle_45
											#		visible = "[ShouldHighlight('btn_great_work_replace_leader')]"
											#	}
											#}
										}

										icon = {
											visible = "[Not(GreatWork.IsAncientWonder)]"
											size = { 150 90 }
											parentanchor = right
											using = NoninteractableBG
											position = { -5 0 }
										}

										widget = { # Trade Goods
											visible = "[Not(GreatWork.IsAncientWonder)]"
											size = { 60 100 }
											position = { -100 0 }
											tooltip = "GW_GOODS_REQ_TT"
											parentanchor = right

											flowcontainer = {
												position = { 5 0 }
												spacing = 0
												direction = vertical


												datamodel = "[ProvinceWindow.GetGreatWorkRequiredTradeGoods]"
												item = {
													icon = {
														size = { 55 33 }
														tooltip = "[Localize(TradeGoodsGlue.GetTradeGood.GetKey)]"

														icon = {
															size = { 33 33 }
															background = {
																shaderfile = "gfx/FX/pdxgui_default.shader"
																using = flat_background_white
																tintcolor = { 1 0 0 0.1 }

																margin = { 5 5 }
																visible = "[GreatWork.IsMissingTradeGoods(TradeGoodsGlue.GetTradeGood)]"

																modify_texture = {
																	name = "Alpha"
																	texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
																	blend_mode = alphamultiply
																	spriteType = Corneredtiled
																	spriteborder = { 60 60 }
																}
															}
														}

														icon = {
															size = { 33 33 }
															texture = "[GetTradeGoodsIcon(TradeGoodsGlue.GetTradeGood)]"
														}

														icon = {
															parentanchor = bottom|right
															position = { 0 -3 }
															allow_outside = yes
															size = { 25 25 }
															visible = "[GreatWork.IsMissingTradeGoods(TradeGoodsGlue.GetTradeGood)]"
															tooltip = "GW_MISSING_TRADEGOODS_TT"
															texture = "gfx/interface/icons/shared_icons/tick_cross.dds"
															framesize = { 25 25 }
														}
													}
												}
											}
										}

										flowcontainer = { #Workpower
											visible = "[Not(GreatWork.IsAncientWonder)]"
											direction = vertical
											spacing = -2
											parentanchor = right
											position = { 0 0 }
											icon_and_text = {
												size = { 100 0 }
												blockoverride "Icon" {
													using = icon_pop_freemen
													scale = 0.9
													parentanchor = vcenter
												}
												blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)0')]" }
											}
											icon_and_text = {
												size = { 100 0 }
												blockoverride "Icon" {
													using = icon_pop_tribal
													scale = 0.9
	 												parentanchor = vcenter
											  }
												blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)1')]" }
											}
											icon_and_text = {
												size = { 100 0 }
												blockoverride "Icon" {
													using = icon_pop_slaves
													scale = 0.9
	 												parentanchor = vcenter
												}
												blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)2')]" }
											}
										}
									}

									text_button_square = { #Update Button
										parentanchor = bottom|right
										position = { 0 -16 }
										size = { 160 28 }

										visible = "[And( And( HasDlc('Heirs of Alexander'), Not(GreatWork.IsAncientWonder) ), ProvinceWindow.IsPlayerProvince )]"

										blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
										tooltip = "GW_BUILD_BUTTON_TOOLTIP"
										blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
										blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }

									}

									container = {
										parentanchor = bottom
										position = { 0 0 }
										visible = "[Not(GreatWork.IsAncientWonder)]"

										fixed_size_progressbar = {
											visible = "[GreatWork.IsMakingProgress]"
											size = { 410 9 }

											blockoverride "Value" { value = "[GreatWork.GetConstructionProgress]" }
											tooltip = "[GreatWork.GetConstructionTooltip]"
										}

										fixed_size_progressbar = {
											visible = "[Not(GreatWork.IsMakingProgress)]"
											size = { 410 9 }

											blockoverride "Value" {
												value = "[GreatWork.GetConstructionProgress]"

												progressbar = {
													size = { 100% 100% }
													texture = "gfx/interface/base_parts/progressbar_white_tile.dds"
													color = { 1 0.6 0.0 1 }
													value = "[GreatWork.GetConstructionProgress]"
												}
											 }
											tooltip = "[GreatWork.GetConstructionTooltip]"
										}
									}
								}

								margin_widget = { #Existing Great Wonder
									size = { 100% 100% }
									datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
									visible = "[And(ProvinceWindow.HasGreatWork, GreatWork.IsCompleted)]"
									#margin_bottom = 7

									widget = { #Image
										size = { 110 110 }
										position = { -5 10 }

										widget = {
											size = { 85% 100% }
											tooltipwidget = {
												icon = {
													size = { 400 400 }
													texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"

													background = {
														shaderfile = "gfx/FX/pdxgui_default.shader"
														using = flat_background_white
													}

													background = {
														shaderfile = "gfx/FX/pdxgui_default.shader"
														texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
														spriteType = Corneredtiled
														alpha = 0.2
														modify_texture = {
															name = "Alpha"
															texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
															blend_mode = alphamultiply
															spriteType = Corneredtiled
															spriteborder = { 60 60 }
														}
													}

													modify_texture = {
														name = "Alpha"
														texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
														blend_mode = alphamultiply
														spriteType = Corneredtiled
														spriteborder = { 60 60 }
													}
												}

											}
										}

										background = {
											shaderfile = "gfx/FX/pdxgui_default.shader"
											texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
											spriteType = Corneredtiled
											margin_bottom = -10
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}

										icon = {
											parentanchor = vcenter|hcenter
											size = {100% 100%}
											position = {0 -10}
											texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"

											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}

									tag = {
										visible = "[Not(ProvinceWindow.GetProvince.HasMultipleGreatWorks)]"
										parentanchor = bottom
										position = { 0 -10 }
										using = BaseFontM
										using = Black_FontColor

										text = "[GreatWork.GetName]"
										maximumsize = { 235 -1 }
										elide = right
										blockoverride "LineVisibility"
										{
											visible = yes
										}
									}

									tag = {
										visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
										parentanchor = bottom
										position = { 66 -10 }
										using = BaseFontM
										using = Black_FontColor

										text = "[GreatWork.GetName]"
										maximumsize = { 180 -1 }
										elide = right
										blockoverride "LineVisibility"
										{
											visible = yes
										}
									}

									flowcontainer = { # Tier Progress
										position = { 105 5 }
										direction = vertical

										background = {
											shaderfile = "gfx/FX/pdxgui_default.shader"
											texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
											spriteType = Corneredtiled
											alpha = 0.7
											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/gradient_black.dds"
												blend_mode = alphamultiply
												#spriteType = Corneredtiled
												#spriteborder = { 0 120 }
											}

										}

										tooltip = "[GetGreatWorkPrestigeTooltip(GreatWork.GetPrestige)]"


										great_work_tier_my = {
											size = { 8 50 }
											blockoverride "tier_tooltip"
											{
												tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_4')]"
											}
											blockoverride "progressbar_value"
											{
												value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_4', GreatWork.GetPrestige)]"
											}
										}
										great_work_tier_my = {
											size = { 8 30 }
											blockoverride "tier_tooltip"
											{
												tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_3')]"
											}
											blockoverride "progressbar_value"
											{
												value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_3', GreatWork.GetPrestige)]"
											}
										}
										great_work_tier_my = {
											size = { 8 20 }
											blockoverride "tier_tooltip"
											{
												tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_2')]"
											}
											blockoverride "progressbar_value"
											{
												value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_2', GreatWork.GetPrestige)]"
											}
										}
									}

									flowcontainer = { #Effects
										position = { 125 5 }
										direction = vertical
										spacing = 5
										using = NoninteractableBG
										blockoverride "Margins"
										{
											margin = { 10 5 }
										}
										datamodel = "[GreatWork.GetEffects]"

										item = {
											margin_widget = {
												size = { 280 30}

												tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"
												widget = {
													visible = "[GreatWorkEffectSelection.IsSet]"
													size = { 30 30 }
													parentanchor = vcenter|left

													icon = {
														parentanchor = vcenter|hcenter
														size = { 85% 85% }
														texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

														icon = {
															parentanchor = bottom|right
															size = {60% 60%}
															texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
														}
													}
												}

												icon = {
													visible = "[Not(GreatWorkEffectSelection.IsSet)]"
													size = {30 30}
													parentanchor = vcenter|left
													texture = "gfx/interface/icons/shared_icons/ideas.dds"
												}

												icon_and_text = {
													visible = "[GreatWorkEffectSelection.IsSet]"
													parentanchor = vcenter
													position = { 26 0 }
													size = { 260 40 }
													#max_width = 270
													blockoverride "Text"
													{
														text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
													}
													blockoverride "Icon"
													{
														visible = no
													}
												}
											}
										}
									}

									text_button_square = { #Update Button
										parentanchor = bottom|right
										widgetanchor = bottom|right
										position = { 0 -12}
										size = { 160 28 }

										visible = "[And( And( HasDlc('Heirs of Alexander'), Not(GreatWork.IsAncientWonder) ), ProvinceWindow.IsPlayerProvince )]"

										blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
										tooltip = "GW_BUILD_BUTTON_TOOLTIP"
										blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
										blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }
									}

									text_button_square = { #Remove Ancient Wonder
										parentanchor = bottom|right
										widgetanchor = bottom|right
										position = { 0 -12}
										size = { 160 28 }

										visible = "[And( GreatWork.IsAncientWonder, ProvinceWindow.IsPlayerProvince )]"

										blockoverride "Center_text" { text = "CANCEL_OR_DESTROY_GW_ADJECTIVE_DESTROY" }
										tooltip = "CANCEL_OR_DESTROY_GW_BUTTON_DESTROY_TOOLTIP"
										blockoverride "On_click" { onclick = "[ProvinceWindow.DestroyGreatWork]" }
										blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Province/sfx_ui_province_destroy_building" }
									}
								}

								container = {
									position = { 0 109 }

									datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
									visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
									icon_button_square = {  #Change GW Left
										size = { 25 25 }

										blockoverride "Icon" {
											texture = "gfx/interface/buttons/arrow_left.dds"
											size = { 30 30 }
										}

										tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
										blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkLeft]" }
									}
									icon_button_square = {  #Change GW Left
										size = { 25 25 }
										position = { 30 0 }
										blockoverride "Icon" {
											texture = "gfx/interface/buttons/arrow_right.dds"
											size = { 30 30 }
										}

										tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
										blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkRight]" }
									}
								}
							}
						}

						# icon = {
						# 	position = { 0 5 }
						# 	parentanchor = bottom
						#
						# 	texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
						# 	spriteType = Corneredtiled
						# 	spriteborder = { 30 0 }
						# 	color = { 0.5 0.3 0.1 0.6 }
						# 	size = { 100% 6 }
						# }

						# icon = {
						# 	position = { -1 0 }
						# 	using = button_tiled_texture
						# 	size = { 2 100% }
						# 	parentanchor = left
						# 	framesize = { 200 200 }
						# 	frame = 4
						# 	enabled = no
						# }
						#
						# icon = {
						# 	using = button_tiled_texture
						# 	size = { 2 100% }
						# 	parentanchor = right
						# 	framesize = { 200 200 }
						# 	frame = 4
						# 	enabled = no
						# }


					}
				}

				flowcontainer = {
					direction = vertical
					spacing = 5

					widget = {
						size = { @popwidth @topline }
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding

						icon_and_text = {
							size = { @medstats @topline }
							tooltip_verticalbehavior = flip
							blockoverride "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/pop_type.dds"
								tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
							}
							blockoverride "Text"
							{
								tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
								text = "[ProvinceWindow.GetProvince.GetPopulation('total')]/[ProvinceWindow.GetProvince.GetPopulationCapacityValue]"
							}
						}

						flowcontainer = {
							parentanchor = right
							margin_right = 2

							icon = {
								size = { 30 @topline }
								datacontext = "[GetScriptedGui('slave_death_indicator')]"
								texture = "gfx/interface/icons/phalera/phalera_skull.dds"
								tooltip = "SLAVES_OVERWORKED"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
							}

							icon_and_text = {
								size = { @stats_icon_width @topline }
								tooltip = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyaltyTooltip]"
								alpha = "[TransparentIfZero(ProvinceWindow.GetProvince.GetUnrest)]"
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/modifiers/local_monthly_state_loyalty.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyalty|=2+]"
								}
							}

							icon_and_text = {
								size = { @smallstats @topline }
								tooltip = "[ProvinceWindow.GetProvince.GetUnrestDescription]"
								alpha = "[TransparentIfZero(ProvinceWindow.GetProvince.GetUnrest)]"
								tooltip_verticalbehavior = flip
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/unrest.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetUnrest|1-]"
								}
							}
						}
					}

					flowcontainer = { #pops
						direction = vertical
						name = "pops_tab"

						widget = {
							size = { 300 148 }

							icon = {
								position = { 0 -7 }
								texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
								spriteType = Corneredtiled
								spriteborder = { 30 0 }
								color = { 0.5 0.3 0.1 0.6 }
								size = { 100% 6 }
							}

							# widget = {
							# 	size = { 100% 100% }
							# 	using = NoninteractableBG
							# 	alpha = 0.3
							# 	blockoverride "Margins" {
							# 		margin_left = 2
							# 		margin_right = 25
							# 		margin_top = 7
							# 	}
							# }

							flowcontainer = {
								position = { 0 0 }
								pop_widget_my = {
									blockoverride "alpha"
									{
										alpha = "[TransparentIfZero_int32(ProvinceWindow.GetProvince.GetPopulation('nobles'))]"
									}
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('nobles')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/nobles_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('nobles') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('nobles'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/nobles.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('nobles')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('nobles')]"
									}
									blockoverride "ratio"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('nobles')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[LessThanOrEqualTo_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('nobles'), ProvinceWindow.GetProvince.GetDesiredPopRatio('nobles'))]"
									}
									blockoverride "ratio_big"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('nobles')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[GreaterThan_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('nobles'), ProvinceWindow.GetProvince.GetDesiredPopRatio('nobles'))]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('nobles'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'nobles' )]"
									}
								}
								pop_widget_my = {
									alpha = "[TransparentIfZero_int32(ProvinceWindow.GetProvince.GetPopulation('citizen'))]"
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('citizen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/citizen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('citizen') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('citizen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/citizen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('citizen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('citizen')]"
									}
									blockoverride "ratio"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('citizen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[LessThanOrEqualTo_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('citizen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('citizen'))]"
									}
									blockoverride "ratio_big"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('citizen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[GreaterThan_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('citizen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('citizen'))]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('citizen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'citizen' )]"
									}
								}
								pop_widget_my = {
									alpha = "[TransparentIfZero_int32(ProvinceWindow.GetProvince.GetPopulation('freemen'))]"
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('freemen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/freemen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('freemen') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('freemen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/freemen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('freemen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('freemen')]"
									}
									blockoverride "ratio"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('freemen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[LessThanOrEqualTo_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('freemen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('freemen'))]"
									}
									blockoverride "ratio_big"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('freemen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[GreaterThan_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('freemen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('freemen'))]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('freemen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'freemen' )]"
									}
								}
								pop_widget_my = {
									alpha = "[TransparentIfZero_int32(ProvinceWindow.GetProvince.GetPopulation('tribesmen'))]"
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('tribesmen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/tribesmen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('tribesmen') )]"
									}

									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/tribesmen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('tribesmen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('tribesmen')]"
									}
									blockoverride "ratio"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('tribesmen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[LessThanOrEqualTo_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('tribesmen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('tribesmen'))]"
									}
									blockoverride "ratio_big"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('tribesmen')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[GreaterThan_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('tribesmen'), ProvinceWindow.GetProvince.GetDesiredPopRatio('tribesmen'))]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'tribesmen' )]"
									}
								}
								pop_widget_my = {
									alpha = "[TransparentIfZero_int32(ProvinceWindow.GetProvince.GetPopulation('slaves'))]"
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('slaves')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/slaves_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('slaves') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/slaves.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('slaves')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('slaves')]"
									}
									blockoverride "ratio"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('slaves')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[LessThanOrEqualTo_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('slaves'), ProvinceWindow.GetProvince.GetDesiredPopRatio('slaves'))]"
									}
									blockoverride "ratio_big"
									{
										text = "/[Multiply_float(FixedPointToFloat(ProvinceWindow.GetProvince.GetDesiredPopRatio('slaves')), IntToFloat(ProvinceWindow.GetProvince.GetPopulation('total')))|0]"
										visible = "[GreaterThan_CFixedPoint(ProvinceWindow.GetProvince.GetCurrentPopRatio('slaves'), ProvinceWindow.GetProvince.GetDesiredPopRatio('slaves'))]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'slaves' )]"
									}
								}
							}
						}

						widget = {
							size = { 0 7 }
						}

						flowcontainer = { #this should be an hbox
							spacing = 11
							margin_left = -3 #pop_widgets mess some things up
							ignoreinvisible = yes

							text_button_square_highlighted = {
								size = { 160 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.OpenMovePopsWindow]" }
								blockoverride "Center_text" { text = "MOVE_SLAVES" maximumsize = { 115 -1 } elide = right }
								visible = "[ProvinceWindow.IsPlayerProvince]"
							}
							text_button_square_highlighted = {
								size = { 160 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.ShowPopDetails('slaves')]" }
								blockoverride "Center_text" { text = "POP_SCREEN" maximumsize = { 115 -1 } elide = right }
								tooltip = "OPEN_POPS_VIEW_TT"
								visible = "[ProvinceWindow.IsPlayerProvince]"
							}
							text_button_square_highlighted = {
								size = { 330 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.ShowPopDetails('slaves')]" }
								blockoverride "Center_text" { text = "POP_SCREEN" }
								tooltip = "OPEN_POPS_VIEW_TT"
								visible = "[Not(ProvinceWindow.IsPlayerProvince)]"
							}
						}
					}


					flowcontainer = { #religion
						spacing = 5
						ignoreinvisible = yes
						margin_top = 3
						margin_left = -1

						icon_and_text = {
							visible = "[Not( ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated )]"
							size = { 160 38 }
							tooltip_verticalbehavior = flip
							blockoverride "Icon"
							{
								texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
								datacontext = "[ProvinceWindow]"
								tooltip = "NON_INTEGRATED_CULTURE_TOOLTIP"
							}
							blockoverride "Text"
							{
								text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
								using = BaseFontS
								using = Black_FontColor
							}
							blockoverride "LineVisibility" { visible = no }

							fixed_size_progressbar = {
								visible = "[ProvinceWindow.GetProvince.HasOwner]"
								parentanchor = bottom
								size = { 100% 7 }
								margin = { 3 0 }
								blockoverride "ProgressAlpha" { alpha = 0.2 }
								tooltip = "[ProvinceWindow.GetProvince.GetCultureBreakdown]"
								blockoverride "Value"
								{
									value = "[FixedPointToFloat(GuiScope.SetRoot(ProvinceWindow.GetProvince.MakeScope).ScriptValue('province_cultural_unity'))]"
								}
								#using = tooltip_se
							}
						}


						icon_and_text = {
							visible = "[ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated]"
							size = { 160 38 }
							tooltip_verticalbehavior = flip
							blockoverride "Icon"
							{
								texture = "gfx/interface/icons/integrated.dds"
								datacontext = "[ProvinceWindow]"
								tooltip = "INTEGRATED_CULTURE_TOOLTIP"
							}
							blockoverride "Text"
							{
								text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
								using = BaseFontS
								using = Black_FontColor
							}
							blockoverride "LineVisibility" { visible = no }

							fixed_size_progressbar = {
								visible = "[ProvinceWindow.GetProvince.HasOwner]"
								parentanchor = bottom
								size = { 100% 7 }
								margin = { 3 0 }
								blockoverride "ProgressAlpha" { alpha = 0.2 }
								tooltip = "[ProvinceWindow.GetProvince.GetCultureBreakdown]"
								blockoverride "Value"
								{
									value = "[FixedPointToFloat(GuiScope.SetRoot(ProvinceWindow.GetProvince.MakeScope).ScriptValue('province_cultural_unity'))]"
								}
								#using = tooltip_se
							}
						}

						icon_and_text = {
							size = { 160 38 }
							tooltip_verticalbehavior = flip
							blockoverride "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/religious.dds"
							}
							blockoverride "Text"
							{
								text = "[ProvinceWindow.GetProvince.GetReligion.GetName]"
								using = BaseFontS
								using = Black_FontColor
							}
							blockoverride "LineVisibility" { visible = no }

							fixed_size_progressbar = {
								visible = "[ProvinceWindow.GetProvince.HasOwner]"
								parentanchor = bottom
								position = { 0 0 }
								size = { 100% 7 }
								margin = { 3 0 }
								tooltip = "[ProvinceWindow.GetProvince.GetReligionBreakdown]"
								blockoverride "ProgressAlpha" { alpha = 0.2 }
								blockoverride "Value"
								{
									value = "[FixedPointToFloat(GuiScope.SetRoot(ProvinceWindow.GetProvince.MakeScope).ScriptValue('province_religious_unity'))]"
								}
								#using = tooltip_se
							}
						}
					}

					widget = {
						size = { 0 8 }
					}

					widget = {
						size = { 320 100 }


						flowcontainer = {
							margin_left = 5
							spacing = 13

							icon_and_text = {
								size = { @stats_icon_width 0 }
								tooltip = "[ProvinceWindow.GetProvince.GetCurrentResearchDescription]"
								tooltip_verticalbehavior = flip
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/research.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetCurrentResearch|2]"
								}
							}

							icon_and_text = {
								size = { @stats_icon_width 0 }
								name = "city_manpower_income"
								tooltip = "[ProvinceWindow.GetProvince.GetCurrentManpowerIncomeDescription]"
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/manpower.dds"
								}
								blockoverride "Text"
								{
									text = "[GetManpowerDisplay(ProvinceWindow.GetProvince.GetCurrentManpowerIncome)]"
								}
							}

							icon_and_text = { #tax
								size = { @stats_icon_width 0 }
								tooltip = "[ProvinceWindow.GetProvince.GetIncomeDescription]"
								tooltip_verticalbehavior = flip
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/treasury.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetCurrentIncome|2]"
								}
							}

						}

						flowcontainer = {
							margin_left = 5
							spacing = 13
							position = { 0 36 }

							icon_and_text = {
								size = { @stats_icon_width 0 }
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/modifiers/local_base_trade_routes.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetTradeRoutesFromPopsValue|2]"
								}
								tooltip = "[ProvinceWindow.GetProvince.GetTradeRoutesFromPopsTooltip]"
							}

							icon_and_text = {
								name = "city_food_income"
								size = { @stats_icon_width 0 }
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/food.dds"
								}
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetProvince.GetFoodIncome|2]"
								}
								tooltip = "[ProvinceWindow.GetProvince.GetFoodValueTooltip]"
							}

							icon_card = {
								name = "Trade_Good"
								size = { 95 40 }
								tooltip = "[ProvinceWindow.GetProducedTradeGoodsInfo]"
								blockoverride "Icon"
								{
									texture = "[GetTradeGoodsIcon(ProvinceWindow.GetProvince.GetTradeGoods)]"
									parentanchor = left|vcenter
									position = { 2 0 }
								}

								textbox = {
									text = "[ProvinceWindow.GetProvince.GetNumGoodsProduced]"
									autoresize = yes
									align = right
									parentanchor = right
									position = { -10 6 }
									using = BaseFontM
									using = Black_FontColor
								}
							}
						}
					}
				}
			}
		}

		icon = {
			size = { 120 45 }
			position = { 10 85 }
			using = flat_background_white

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}

		icon_and_text = {
			position = { 10 87 }
			size = { 105 0 }
			tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
			#tooltip_verticalbehavior = flip
			blockoverride "Icon"
			{
				visible = no
			}
			blockoverride "Text"
			{
				text = "[ProvinceWindow.GetProvince.GetCivilizationValue|0]/[ProvinceWindow.GetProvince.GetLocalCivilizationCap|0]"
			}
		}

		icon = {
			size = { 50 50 }
			texture = "gfx/interface/icons/shared_icons/civilization.dds"
			position = { 11 75 }
			tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
		}

		container = {
			#using = NoninteractableBG
			position = { 120 85 }
			visible = "[Not(IsDataModelEmpty(ProvinceWindow.GetModifiers))]"
			blockoverride "Margins"
			{
				margin_top = 2
				margin_bottom = 5
				margin_left = 2
				margin_right = 2
			}

			overlappingitembox = {
				#visible = "[Not(IsDataModelEmpty(ProvinceWindow.GetModifiers))]"
				datamodel = "[ProvinceWindow.GetModifiers]"
				position = { 0 0 }
				size = { 200 36 }
				spacing = -10
				parentanchor = vcenter|left
				widgetanchor = vcenter|left
				righttoleft = yes

				item = {
					icon = {
						using = flat_background_white
						size = { 40 50 }

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modifier_icon = {
							position = { 5 2 }
							size = { 32 32 }
							datacontext = "[TimedModifier.GetModifier]"
							tooltip = "[TimedModifier.GetTooltip]"

						}
					}
				}
			}

			textbox = {
				visible = "[IsDataModelEmpty(ProvinceWindow.GetModifiers)]"
				tooltip = NO_CURRENT_MODIFIERS_PROVINCE
				size = { 200 36 }
				position = { 4 0 }
				using = BaseFontS
				text = None
				align = center
			}
		}

		fixed_size_progressbar = {
			position = { 0 124 }
			margin = { 10 0 }
			size = { @window_width 10 }
			progressbar = {
				size = { 100% 100% }
				value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetLocalCivilizationCap )]"
				marker = {
					container = {
						name = "progress_marker_2"
						tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
						widget = {
							size = { 24 48 }
							position = { 0 -7 }
							icon = {
								using = flat_background_black
								size = { 3 10 }
								parentanchor = vcenter|left
								position = { 1 -12 }

							}
						}
					}
				}
			}
			blockoverride "Value" {
				value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetCivilizationValue )]"
			}
			tooltip = "[ProvinceWindow.GetProvince.GetCivilizationTooltip]"
			using = tooltip_above
			#using = DropShadow
			blockoverride "ProgressAlpha" { alpha = 0.6 }
		}

		margin_widget = {
      position = { 0 32 }
      margin_left = 6

      margin_widget = {
        scissor = yes
        resizeparent = yes
        flowcontainer = {
          #margin_top = 2
          margin_left = 2
          ignoreinvisible = yes
          alpha = 1
          scale = 0.75
          position = { -36 -2 }
          spacing = -50
          resizeparent = yes

          icon_button_province = {
            size = { 144 66 }
            visible = "[ProvinceWindow.CanTransferOccupation]"
            blockoverride "Icon" { texture = "gfx/interface/province/transfer_occupation.dds" }
            blockoverride "On_click"
            {
                enabled = "[ProvinceWindow.CanTransferOccupation]"
                onclick = "[ProvinceWindow.TransferOccupation]"
            }
            tooltip = "[ProvinceWindow.GetTransferOccupationTooltip]"
	        }

	        icon_button_province = {
	          size = { 144 66 }
	          name = "MigrateButton"
	          visible = "[ProvinceWindow.ShowMigrateButton]"
	          enabled = "[ProvinceWindow.CanMigrate]"
	          blockoverride "On_click" { onclick = "[ProvinceWindow.Migrate]" }
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/migrate.dds" }
	          tooltip = "[ProvinceWindow.GetMigrateTooltip]"
	          layoutpolicy_horizontal = fixed
						shortcut = "force_march"
	        }

	        icon_card_province = {
	          size = { 144 66 }
	          visible = "[ProvinceWindow.GetProvince.IsHolySite]"
	          layoutpolicy_horizontal = fixed
	          blockoverride "Icon" { texture = "[GetHolySiteRankIcon( ProvinceWindow.GetProvince.GetRank )]" }
	          tooltip = "[ProvinceWindow.GetHolySiteTooltip]"
	        }

	        icon_button_province = {
	          size = { 144 66 }
	          visible = "[And( Not( ProvinceWindow.GetProvince.IsHolySite ), ProvinceWindow.IsPlayerProvince )]"
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/holy_site_any.dds" }
	          blockoverride "On_click"
	          {
	              enabled = "[ProvinceWindow.CanEnactHolySite]"
	              onclick = "[ProvinceWindow.ToggleSelectHolySiteWindow]"
	          }
	          tooltip = "[ProvinceWindow.GetEnactHolySiteTooltip]"
	        }

	        icon_card_province = {
	          size = { 144 66 }
	          visible = "[ProvinceWindow.GetProvince.IsCapital]"
	          layoutpolicy_horizontal = fixed
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/country_capital.dds" }
	        }

	        icon_button_province = {
	          size = { 144 66 }
	          name = "ColonizeButton"
	          visible = "[Not( ProvinceWindow.GetProvince.HasOwner )]"
	          enabled = "[ProvinceWindow.CanBeColonized]"
	          blockoverride "On_click" { onclick = "[ProvinceWindow.QuickColonize]" }
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/alert_colonize_province.dds" }
	          tooltip = "[ProvinceWindow.GetColonizeTooltip]"
	          layoutpolicy_horizontal = fixed
	        }

	        icon_button_province = {
	          size = { 144 66 }
	          datacontext = "[GetScriptedGui('move_capital_button')]"
	          visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsCapital ) )]"
	          enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	          blockoverride "On_click" { onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]" }
	          tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	          layoutpolicy_horizontal = fixed
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/country_capital.dds" }
	        }

	        icon_button_province = {
	          size = { 144 66 }
	          datacontext = "[GetScriptedGui('move_province_capital_button')]"
	          visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsStateCapital ) )]"
	          enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	          blockoverride "On_click" { onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]" }
	          tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	          layoutpolicy_horizontal = fixed
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/state_capital.dds" }
	        }

	        icon_card_province = {
	          size = { 144 66 }
	          visible = "[And(ProvinceWindow.GetProvince.IsStateCapital, Not(ProvinceWindow.GetProvince.IsCapital))]"
	          layoutpolicy_horizontal = fixed
	          blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/state_capital.dds" }
						tooltip = "[ProvinceWindow.GetProvince.GetStateCapitalTooltip]"
					}
	      }
	    }
	  }
	}

	base_window = {
		movable = no
		blockoverride "BackgroundGradient" { visible = no }
		size = { @window_width @province_height_small }

		parentanchor = bottom
		datacontext = "[GetScriptedGui('small_province_view')]"
		visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
		alwaystransparent = no
		allow_outside = yes

		secondary_header = {
			name = "uncolonized_main_header"
			widgetanchor = bottom
			size = { @window_width 36 }
			visible = "[Not(ProvinceWindow.HasState)]"

			button = {
				size = { 100% 100% }
				datacontext = "[GetScriptedGui('small_province_view')]"
				onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
			}

			blockoverride "Title_text"
			{
				text = "[ProvinceWindow.GetProvince.GetAreaName]"
				margin_left = @window_margin_left_title
			}
			blockoverride "White_buttons"
			{
				button_close = {
					visible = yes
					onclick = "[ProvinceWindow.OnClose]"
					tooltip = "CLOSE"
				}
			}
		}

		vbox = {
			name = "city_main_box"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			widget = {
				size = { @window_width 30 }

				hbox = {
					name = "top_row"
					layoutpolicy_horizontal = expanding

					sub_header = {
						name = "uncolonized_sub_header"
						layoutpolicy_horizontal = expanding
						size = { 0 33 }
						visible = "[Not(ProvinceWindow.HasState)]"
						blockoverride "HeaderAlpha" {
							margin = { -4 0 }
						}

						blockoverride "Title_text"
						{
							datacontext = "[ProvinceWindow.GetProvince]"
							text = "UNCOLONIZED_TITLE"
							margin_left = @window_margin_left_city
						}
						blockoverride "LineVisibility" { visible = no }

					}

					sub_header = {
						visible = "[ProvinceWindow.HasState]"
						name = "city_header"
						layoutpolicy_horizontal = expanding
						size = { 0 32 }

						blockoverride "AdditionalIcons"
						{
							flowcontainer = {
								ignoreinvisible = yes
								spacing = 5

								widget = {
									size = { 40 26 }
									allow_outside = yes
									visible = "[ProvinceWindow.GetProvince.IsOccupied]"

									country_flag_reworked = {
										tooltip = "[ProvinceWindow.GetControllerTooltip]"
										position = { 2 -8 }

										blockoverride "Flag"
										{
											texture = "[ProvinceWindow.GetProvince.GetController.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
											frame = "[ProvinceWindow.GetProvince.GetController.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
											framesize = { 56 56 }
										}

										blockoverride "Size"
										{
											size = { 40 40 }
										}

										blockoverride "On_click"
										{
											onclick = "[OpenDiplomacy(ProvinceWindow.GetProvince.GetController)]"
										}
									}
								}

								white_button_round = {
									size = { 26 26 }
									datacontext = "[GetScriptedGui('small_province_view')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End )]"
									blockoverride "Icon" { texture = "gfx/interface/base_parts/up_arrow.dds" }
									blockoverride "On_click" {
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
									layoutpolicy_horizontal = fixed
								}

								white_button_round = {
									layoutpolicy_horizontal = fixed
									size = { 26 26 }
									blockoverride "Icon" { texture = "gfx/interface/base_parts/down_arrow.dds" }
									datacontext = "[GetScriptedGui('small_province_view')]"
									visible = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( Player.MakeScope ).End ))]"
									blockoverride "On_click" {
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
									}
								}

								button = {
									position = { 0 -1 }
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									framesize = { 50 50 }
									size = { 26 26 }
									texture = "gfx/interface/icons/shared_icons/star.dds"
									datacontext = "[GetScriptedGui('fav_territories')]"
									frame = "[Select_int32(ScriptedGui.IsShown(GuiScope.SetRoot(ProvinceWindow.GetProvince.MakeScope).AddScope('player', Player.MakeScope).End),'(int32)2','(int32)1'))]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope).End )]"
									tooltip = "fav"
								}
							}
						}
						blockoverride "HeaderAlpha" {
							margin = { -4 0 }
						}
						blockoverride "Title_text"
						{
							text = "[ProvinceWindow.GetProvince.GetLongName]"
							margin_left = @window_margin_left_city
						}
						blockoverride "Max_text_width"
						{
							max_width = 600
						}
						blockoverride "right_margin" {
							widget = {
								size = { 60 0 }
							}
						}
					}

					hbox = {
						name = "city_header_buttons"
					}
				}

				flowcontainer = {
					parentanchor = right
					position = { -13 0 }
					spacing = 3

					button = {
						size = { 120 30 }
						datacontext = "[GetScriptedGui('small_province_view')]"
						onclick = "[GetVariableSystem.Toggle('show_territories')]"
						tooltip = "state_provinces_button_tooltip"

						white_button_round = {
							parentanchor = vcenter|right
							size = { 26 26 }
							blockoverride "size" {
								size = { 125% 125% }
								parentanchor = center
								position = { 3 2 }
							}
							blockoverride "Icon" {
								texture = "gfx/interface/base_parts/home.dds"
							}
							blockoverride "On_click" {
								onclick = "[GetVariableSystem.Toggle('show_territories')]"
							}
							blockoverride "margin" {
								margin = { 5 5 }
							}
						}
					}

					white_button_round = {
						parentanchor = vcenter
						size = { 26 26 }
						blockoverride "On_click" {
							onclick = "[OnClickOnProvince( ProvinceWindow.GetProvince )]"
						}
						blockoverride "Icon" {
							texture = "gfx/interface/base_parts/eye.dds"
						}
					}
				}

			}


			hbox = {
				name = "second_row"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
				margin_top = 1
				margin_bottom = 4

				margin_widget = {
					size = { 0 92 }
					layoutpolicy_horizontal = expanding
					icon = {
						size = { 750 92 }
						#max_width = 700
						texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
						# tooltip = "[ProvinceWindow.GetProvince.GetTerrain.GetTooltip]"

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_terrain_alpha.dds"
							blend_mode = alphamultiply
						}
						tooltipwidget = {
							terrain_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetTerrain]"
							}
						}
						using = tooltip_nw

					}
					margin_widget = {
						size = { 300 96 }
						position = { 317 0 }
						visible = "[GetVariableSystem.HasValue('province_tabs', 'buildings')]"
						alpha = 0
						state = {
							name = _show
							animation = {
								alpha = 1
							}
							duration = 0.15
						}

						state = {
							name = _hide
							animation = {
								alpha = 0
							}
							duration = 0.15
						}

						icon = {
							size = { 100% 100% }
							using = flat_background_white

							modify_texture = {
								name = "Alpha"
								texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
								blend_mode = alphamultiply
								spriteType = Corneredtiled
								spriteborder = { 60 60 }
							}

						}
						flowcontainer = {
							position = { 15 5 }
							parentanchor = top
							spacing = 15
							mini_pop_widget = {
								blockoverride "Icon" { texture = "gfx/interface/icons/pop_types/nobles.dds" }
								blockoverride "Value" { value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('nobles') )]" }
								blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('nobles')]" }
								tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('nobles')]"
								tooltip_widgetanchor = bottom|left
								tooltip_parentanchor = top|left
								alpha = "[TransparentIfZero_int32( ProvinceWindow.GetProvince.GetPopulation('nobles') )]"
							}
							mini_pop_widget = {
								blockoverride "Icon" { texture = "gfx/interface/icons/pop_types/citizen.dds" }
								blockoverride "Value" { value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('citizen') )]" }
								blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('citizen')]" }
								tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('citizen')]"
								tooltip_widgetanchor = bottom|left
								tooltip_parentanchor = top|left
								alpha = "[TransparentIfZero_int32( ProvinceWindow.GetProvince.GetPopulation('citizen') )]"
							}
							mini_pop_widget = {
								blockoverride "Icon" { texture = "gfx/interface/icons/pop_types/freemen.dds" }
								blockoverride "Value" { value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('freemen') )]" }
								blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('freemen')]" }
								tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('freemen')]"
								tooltip_widgetanchor = bottom|left
								tooltip_parentanchor = top|left
								alpha = "[TransparentIfZero_int32( ProvinceWindow.GetProvince.GetPopulation('freemen') )]"
							}
							mini_pop_widget = {
								blockoverride "Icon" { texture = "gfx/interface/icons/pop_types/tribesmen.dds" }
								blockoverride "Value" { value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('tribesmen') )]" }
								blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('tribesmen')]" }
								tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('tribesmen')]"
								tooltip_widgetanchor = bottom|left
								tooltip_parentanchor = top|left
								alpha = "[TransparentIfZero_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen') )]"
							}
							mini_pop_widget = {
								blockoverride "Icon" { texture = "gfx/interface/icons/pop_types/slaves.dds" }
								blockoverride "Value" { value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('slaves') )]" }
								blockoverride "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('slaves')]" }
								tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('slaves')]"
								tooltip_widgetanchor = bottom|left
								tooltip_parentanchor = top|left
								alpha = "[TransparentIfZero_int32( ProvinceWindow.GetProvince.GetPopulation('slaves') )]"
							}
						}
					}
					button = { #New city change button because the old one was horrid - PWN
						visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
						texture = "gfx/interface/icons/province_rank/city_metropolis.dds"
						size = { 210 92 }
						position = { -300 0 }
						parentanchor = right|vcenter
						datacontext = "[GetScriptedGui('found_metropolis_button')]"
						alpha = 1
						enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						tooltip = "FOUND_METROPOLIS_BUTTON_TOOLTIP"
						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}
						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_terrain_alpha.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = _show
							animation = {
								position = { -300 0 }
								bezier = { 1 1 0 1 }
							}
							animation = {
								size = { 210 92 }
							}
							duration = 0.35
						}
						state = {
							name = _hide
							animation = {
								position = { -10 0 }
								bezier = { 0.11 1.07 0.83 0.67 }
							}
							animation = {
								size = { 200 92 }
							}
							duration = 0.2
						}

						icon = {
							texture = "gfx/interface/base_parts/background_black_texture.dds"
							size = { 180 86 }
							position = { 0 3 }
							parentanchor = right
							visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -2 1 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 0 -2 }
							parentanchor = bottom|right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}
						using = tooltip_above
					}
					button = {
						visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
						texture = "gfx/interface/icons/province_rank/city.dds"
						size = { 210 92 }
						parentanchor = right|vcenter
						position = { 0 0 }
						datacontext = "[GetScriptedGui('found_city_button')]"
						alpha = 1
						enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						tooltip = "FOUND_CITY_BUTTON_TOOLTIP"
						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}

						state = {
							name = _show
							animation = {
								position = { -200 0 }
								bezier = { 1 1 0 1 }
							}
							animation = {
								size = { 210 92 }
							}
							duration = 0.25
						}
						state = {
							name = _hide
							animation = {
								position = { -10 0 }
								bezier = { 0.11 1.07 0.83 0.67 }
							}
							animation = {
								size = { 200 92 }
							}
							duration = 0.2
						}

						icon = {
							texture = "gfx/interface/base_parts/background_black_texture.dds"
							size = { 180 86 }
							position = { 0 3 }
							parentanchor = right
							visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -2 1 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 0 -2 }
							parentanchor = bottom|right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}
						using = tooltip_above
					}

					button = {
						visible = "[And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) )]"
						texture = "gfx/interface/icons/province_rank/settlement.dds"
						size = { 210 92 }
						parentanchor = right|vcenter
						position = { 0 0 }
						datacontext = "[GetScriptedGui('revoke_city_status_button')]"
						alpha = 1
						enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
						tooltip = "REVOKE_CITY_STATUS_BUTTON_TOOLTIP"
						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}

						state = {
							name = _show
							animation = {
								position = { -100 0 }
								bezier = { 1 1 0 1 }
							}
							animation = {
								size = { 210 92 }
							}
							duration = 0.15
						}
						state = {
							name = _hide
							animation = {
								position = { -10 0 }
								bezier = { 0.11 1.07 0.83 0.67 }
							}
							animation = {
								size = { 200 92 }
							}
							duration = 0.2
						}

						icon = {
							texture = "gfx/interface/base_parts/background_black_texture.dds"
							size = { 180 86 }
							position = { 0 3 }
							parentanchor = right
							visible = "[GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' )]"
							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -2 1 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 0 -2 }
							parentanchor = bottom|right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}
						using = tooltip_above
					}

					button = {
						texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
						size = { 210 92 }
						parentanchor = right
						datacontext = "[ProvinceWindow]"
						alpha = 1
						# tooltip = "P_RANKTOOLTIP"

						onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
						visible = "[And( And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue('city_change_window', 'show_city_change') ), Not( ProvinceWindow.GetProvince.IsHolySite ) )]"

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}

						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -2 1 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 0 -2 }
							parentanchor = bottom|right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}
					}

					button = {
						texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
						size = { 210 92 }
						parentanchor = right
						datacontext = "[ProvinceWindow]"
						alpha = 1
						# tooltip = "P_RANKTOOLTIP"

						onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
						visible = "[And( And( ProvinceWindow.IsPlayerProvince, Or( Not( GetVariableSystem.Exists('city_change_window') ), GetVariableSystem.HasValue( 'city_change_window', 'dont_show_city_change' ) ) ), Not( ProvinceWindow.GetProvince.IsHolySite ) )]"

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}

						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -2 1 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 0 -2 }
							parentanchor = bottom|right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}
					}

					margin_widget = {
						size = { 262 89 }
						position = { 52 0 }
						parentanchor = right
						scissor = yes
						visible = "[And( ProvinceWindow.GetProvince.IsHolySite, And( ProvinceWindow.IsPlayerProvince, GetVariableSystem.HasValue( 'city_change_window', 'show_city_change' ) ) )]"
						datacontext = "[ProvinceWindow.GetProvince]"
						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}
						tooltip_offset = { -52 0 }
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}

							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
						}
						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -54 2 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 7 1 }
							parentanchor = bottom|left

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						flowcontainer = {
							datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
							ignoreinvisible = yes
							parentanchor = top|right
							spacing = 4
							position = { -34 8 }
							#direction = vertical
							icon = {
								name = "t1"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t2"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t3"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}
							margin_right = 24
						}

					}

					margin_widget = {
						size = { 262 89 }
						position = { 52 0 }
						parentanchor = right
						scissor = yes
						visible = "[And( ProvinceWindow.GetProvince.IsHolySite, And( ProvinceWindow.IsPlayerProvince, Or( Not( GetVariableSystem.Exists('city_change_window') ), GetVariableSystem.HasValue( 'city_change_window', 'dont_show_city_change' ) ) ) )]"
						datacontext = "[ProvinceWindow.GetProvince]"
						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}
						tooltip_offset = { -52 0 }
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}

							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
							button = {
								onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
						}
						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 140 6 }
							position = { -54 2 }
							parentanchor = right

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						icon = {
							texture = "gfx/interface/base_parts/button_allframes.dds"
							framesize = { 100 100 }
							frame = 4
							size = { 204 6 }
							position = { 7 1 }
							parentanchor = bottom|left

							modify_texture = {
								name = "linealpha"
								texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
								blend_mode = alphamultiply
							}

						}

						flowcontainer = {
							datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
							ignoreinvisible = yes
							parentanchor = top|right
							spacing = 4
							position = { -34 8 }
							#direction = vertical
							icon = {
								name = "t11"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t12"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t13"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}
							margin_right = 24
						}

					}
					margin_widget = {
						size = { 262 89 }
						position = { 52 -1 }
						parentanchor = right
						scissor = yes
						visible = "[And( ProvinceWindow.GetProvince.IsHolySite, Not( ProvinceWindow.IsPlayerProvince ) )]"
						datacontext = "[ProvinceWindow.GetProvince]"
						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}
						tooltip_offset = { -52 0 }
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'settlement' )]"
							icon = {
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}

							}
							icon = {
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier1.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city' )]"
							icon = {
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
							icon = {
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier2.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
							}
						}
						container = {
							visible = "[EqualTo_string( Province.GetRank.GetKey, 'city_metropolis' )]"
							icon = {
								size = { 210 122 }
								visible = "[Not( Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) ) )]"
								texture = "gfx/interface/religion/rotw_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
							icon = {
								size = { 210 122 }
								visible = "[Or( EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'latin' ), EqualTo_string( Province.GetDominantCulture.GetCultureGroup.GetKey, 'hellenic' ) )]"
								texture = "gfx/interface/religion/hellenic_tier3.dds"
								alpha = 1
								modify_texture = {
									name = "Alpha"
									texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
									blend_mode = alphamultiply
									spriteType = Corneredtiled
									spriteborder = { 60 60 }
								}
								modify_texture = {
									name = "City_Alpha"
									texture = "gfx/interface/base_parts/province_city_alpha.dds"
									blend_mode = alphamultiply
								}
							}
						}
						flowcontainer = {
							datacontext = "[ProvinceWindow.GetProvince.GetTreasureSlots]"
							ignoreinvisible = yes
							parentanchor = top|right
							spacing = 4
							position = { -34 8 }
							#direction = vertical
							icon = {
								name = "t111"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)0')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)0').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)0').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)0').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t112"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)1')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)1').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)1').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)1').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}

							icon = {
								name = "t113"
								visible = "[ProvinceTreasures.HasValidTreasureAt( '(int32)2')]"
								texture = "[GetTreasureIcon( ProvinceTreasures.GetTreasureAt( '(int32)2').Self )]"
								size = { 32 32 }
								tooltip = "[ProvinceTreasures.GetTreasureAt( '(int32)2').GetName|T] [ProvinceTreasures.GetTreasureAt( '(int32)2').GetStateEffectIconCondensed]"
								glow = {
									glow_radius = 4
									color = { 1 1 1 1 }
								}
							}
							margin_right = 24
						}
					}
					icon = {
						visible = "[And( Not( ProvinceWindow.GetProvince.IsHolySite ), Not( ProvinceWindow.IsPlayerProvince ) )]"
						texture = "[GetProvinceRankIcon( ProvinceWindow.GetProvince.GetRank )]"
						size = { 210 92 }
						parentanchor = right
						datacontext = "[ProvinceWindow]"
						alpha = 1
						# tooltip = "P_RANKTOOLTIP"

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 60 60 }
						}

						modify_texture = {
							name = "City_Alpha"
							texture = "gfx/interface/base_parts/province_city_alpha.dds"
							blend_mode = alphamultiply
						}

						tooltipwidget = {
							province_rank_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetRank]"
							}
						}

					}

					fixed_size_progressbar = {
						blockoverride "size" { size = { 176 7 } }
						parentanchor = bottom|right
						position = { -9 -8 }
						visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_city_in_progress')]"
						tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetTooltip]"
						blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_city_in_progress').GetProgress)]" }
						blockoverride "ProgressAlpha" {}
					}

					fixed_size_progressbar = {
						blockoverride "size" { size = { 176 7 } }
						parentanchor = bottom|hcenter
						position = { -9 -8 }
						visible = "[ProvinceWindow.GetProvince.HasTimedModifier('founding_metropolis_in_progress')]"
						tooltip = "[ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetTooltip]"
						blockoverride "Value" { value = "[FixedPointToFloat(ProvinceWindow.GetProvince.GetTimedModifier('founding_metropolis_in_progress').GetProgress)]" }
						blockoverride "ProgressAlpha" {}
					}

					#container = {
					#	visible = "[ProvinceWindow.IsPlayerProvince]"
					#	parentanchor = bottom|right
					#	position = { -8 -8 }
					#	icon_button_square = {
					#		size = { 30 30 }
					#
					#		visible = "[GetVariableSystem.HasValue('city_change_window', 'show_city_change')]"
					#		blockoverride "On_click"
					#		{
					#			onclick = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
					#		}
					#		blockoverride "Icon"
					#		{
					#			texture = "gfx/interface/icons/shared_icons/change.dds"
					#			size = { 28 28 }
					#		}
					#
					#		tooltip = "SHOW_CITY_CHANGE"
					#	}
					#	icon_button_square = {
					#		size = { 30 30 }
					#		visible = "[GetVariableSystem.HasValue( 'city_change_window', 'dont_show_city_change' )]"
					#		blockoverride "On_click"
					#		{
					#			onclick = "[GetVariableSystem.Set( 'city_change_window', 'show_city_change' )]"
					#		}
					#		blockoverride "Icon"
					#		{
					#			texture = "gfx/interface/icons/shared_icons/change.dds"
					#			size = { 28 28 }
					#		}
					#
					#		tooltip = "SHOW_CITY_CHANGE"
					#	}
					#}

					#hbox = { #TODO - do we even want this list?
					#	position = { 0 28 }
					#	datamodel = "[ProvinceWindow.GetProvinceList]"
					#	parentanchor = bottom
					#	item = {
					#		icon_button_square = {
					#			size = { 40 40 }
					#			blockoverride "On_click" {
					#				onclick = "[SelectProvinceItem.OnClick]"
					#				icon = {
					#					visible = "[SelectProvinceItem.GetProvince.IsStateCapital]"
					#					texture = "gfx/interface/icons/shared_icons/state_capital.dds"
					#					size = { 42 42 }
					#					position = { 0 -2 }
					#				}
					#			}
					#			blockoverride "Icon" {
					#				texture = "[GetProvinceRankIcon( SelectProvinceItem.GetProvince.GetRank )]"
					#				visible = "[Not( SelectProvinceItem.GetProvince.IsStateCapital )]"
					#			}
					#
					#		}
					#	}
					#
					#}
				}
			}
			hbox = {
				name = "third_row"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				margin_top = 8
				vbox = {
					name = "summary_details"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					layoutstretchfactor_horizontal = 4
					margin_left = 5
					sub_header_v = {

						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						size = { 0 40 }
						blockoverride "Title_text"
						{
							text = "SUMMARY"
							margin_left = @window_margin_left_title
						}

						blockoverride "Max_text_width"
						{
							max_width = 208
						}
						vbox = {
							name = "statistics"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_top = 30
							margin_widget = {
								name = "numbers"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin = { 12 6  }

								flowcontainer = {
									spacing = 16
									icon_and_text = {
										name = "city_food_income"
										size = { @stats_icon_width 0 }
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/food.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetFoodIncome|2]"
										}
										tooltip = "[ProvinceWindow.GetProvince.GetFoodValueTooltip]"
									}

									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetIncomeDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/treasury.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetCurrentIncome|2]"
										}
									}

									icon_and_text = {
										size = { @stats_icon_width 0 }
										name = "city_manpower_income"
										tooltip = "[ProvinceWindow.GetProvince.GetCurrentManpowerIncomeDescription]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/manpower.dds"
										}
										blockoverride "Text"
										{
											text = "[GetManpowerDisplay(ProvinceWindow.GetProvince.GetCurrentManpowerIncome)]"
										}
									}
								}

								flowcontainer = {
									spacing = 16
									position = { 0 36 }
									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetCurrentResearchDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/research.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetCurrentResearch|2]"
										}
									}

									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyaltyTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_monthly_state_loyalty.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyalty|=2]"
										}
									}

									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetUnrestDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/unrest.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetUnrest|2]"
										}
									}
								}

								container = {
									using = NoninteractableBG
									position = { -4 74 }
									blockoverride "Margins"
									{
										margin_top = 2
										margin_bottom = 8
										margin_left = 2
										margin_right = 2
									}

									overlappingitembox = {
										visible = "[Not(IsDataModelEmpty(ProvinceWindow.GetModifiers))]"
										datamodel = "[ProvinceWindow.GetModifiers]"
										position = { 4 5 }
										size = { 200 36 }
										spacing = 2
										parentanchor = vcenter|left
										widgetanchor = vcenter|left
										righttoleft = yes

										item = {
											modifier_icon = {
												size = { 32 32 }
												datacontext = "[TimedModifier.GetModifier]"
												tooltip = "[TimedModifier.GetTooltip]"
											}
										}
									}

									textbox = {
										visible = "[IsDataModelEmpty(ProvinceWindow.GetModifiers)]"
										tooltip = NO_CURRENT_MODIFIERS_PROVINCE
										size = { 200 36 }
										position = { 4 0 }
										using = BaseFontS
										using = Black_FontColor
										text = None
										align = center
										alpha = 0.55
									}
								}

								icon_card = {
									name = "Trade_Good"
									size = { 64 40 }
									position = { -5 74 }
									parentanchor = right
									tooltip = "[ProvinceWindow.GetProducedTradeGoodsInfo]"
									blockoverride "Icon"
									{
										texture = "[GetTradeGoodsIcon(ProvinceWindow.GetProvince.GetTradeGoods)]"
										parentanchor = left|vcenter
										position = { 2 0 }
									}

									textbox = {
										text = "[ProvinceWindow.GetProvince.GetNumGoodsProduced]"
										autoresize = yes
										align = right
										parentanchor = right
										position = { -10 6 }
										using = BaseFontM
										using = Black_FontColor
									}
								}

								flowcontainer = {
									position = { 0 116 }
									spacing = 20
									ignoreinvisible = yes
									icon_and_text = {
										visible = "[Not( ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated )]"
										size = { 160 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
											datacontext = "[ProvinceWindow]"
											tooltip = "NON_INTEGRATED_CULTURE_TOOLTIP"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}

									icon_and_text = {
										visible = "[ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated]"
										size = { 150 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/integrated.dds"
											datacontext = "[ProvinceWindow]"
											tooltip = "INTEGRATED_CULTURE_TOOLTIP"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}

									icon_and_text = {
										size = { 150 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/religious.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetReligion.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}
								}

								flowcontainer = {
									position = { 0 152 }
									spacing = 20
									#icon_and_text = {
									#	name = "province_combat_width"
									#	size = { 140 0 }
									#	tooltip = "[ProvinceWindow.GetProvince.GetCombatWidthTooltip]"
									#	blockoverride "Icon"
									#	{
									#		texture = "gfx/interface/icons/diplomatic_status/war.dds"
									#	}
									#	blockoverride "Text"
									#	{
									#		text = "[ProvinceWindow.GetProvince.GetCombatWidth]"
									#	}
									#}
									icon_and_text = {
										name = "province_output"
										size = { 150 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetModifierTooltip('local_output_modifier')]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_output_modifier.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetModifierValue('local_output_modifier')]"
										}
									}
									icon_and_text = {
										size = { 150 0 }
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_base_trade_routes.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetTradeRoutesFromPopsValue|2]"
										}
										tooltip = "[ProvinceWindow.GetProvince.GetTradeRoutesFromPopsTooltip]"
									}
								}
							}
						}
					}
				}
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					ignoreinvisible = yes

					hbox = {
						layoutpolicy_vertical = fixed
						layoutpolicy_horizontal = expanding
						margin_top = 0 #Dirty Hax
						widget = {
							layoutpolicy_vertical = fixed
							layoutpolicy_horizontal = expanding
							size = { 452 34 }

							hbox = {
								layoutpolicy_vertical = preferred
								layoutpolicy_horizontal = expanding
								margin_right = 17
								margin_left = 4
								margin_top = 0
								spacing = 2
								visible = "[Not( Or( ProvinceWindow.GetProvince.HasGreatWork, ProvinceWindow.GetProvince.HasSecondaryGreatWork ) )]"
								@mincategorybuttonwidth = 136
								@maxcategorybuttonwidth = 160
								@mincategorybuttonheight = 28
								@maxcategorybuttonheight = 34
								#widget = {
								#	size = { 0 35 } #Don't Ask
								#}
								state = {
									name = _show
									on_start = "[GetVariableSystem.Set('province_tabs', 'pops')]"
								} #This is ugly, but needs to be here to reset tabs after viewing a province with a Great Work (thereby hiding the tab)
								category_tab = {
									name = "pops_tab"
									blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[And( Not( GetVariableSystem.HasValue('province_tabs', 'pops')), GetVariableSystem.Exists('province_tabs'))]" }
									blockoverride "MaxVisible" { visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" {
										text = "[ProvinceWindow.GetProvince.GetPopulation('total')]/[ProvinceWindow.GetProvince.GetPopulationCapacityValue]"

									}
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/pop_type.dds"
										visible = yes

										size = { 36 36 }
									}
									tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
									######## Small Button Overrides
									shortcut = "macro_builder"
									blockoverride "ClickFunction"
									{
										shortcut = "macro_builder"
										onclick = "[GetVariableSystem.Set('province_tabs', 'pops')]"
									}
								}
								category_tab = {
									name = "buildings_tab"
									blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'buildings'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'buildings')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" {
										text = "[ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels]/[ProvinceWindow.GetProvince.GetAllowedAmountOfBuildingLevels]"

									}
									tooltip = "[ProvinceWindow.GetProvince.GetBuildingLevelInformation]"
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/building_slot.dds"
										visible = yes
									}
									######## Small Button Overrides
									shortcut = "go_to_button"
									blockoverride "ClickFunction"
									{
										shortcut = "go_to_button"
										onclick = "[GetVariableSystem.Set('province_tabs', 'buildings')]"
									}
								}
								category_tab = {
									name = "tactical_tab"
									blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'tactical'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/tactical.dds"
										visible = yes
									}
									tooltip = "TACTICAL_TAB"
									shortcut = "confirm"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										shortcut = "confirm"
										onclick = "[GetVariableSystem.Set('province_tabs', 'tactical')]"
									}
								}
							}

							hbox = {
								layoutpolicy_vertical = preferred
								layoutpolicy_horizontal = expanding
								margin_right = 17
								margin_left = 4
								margin_top = 0
								spacing = 2
								visible = "[Or( ProvinceWindow.GetProvince.HasGreatWork, ProvinceWindow.GetProvince.HasSecondaryGreatWork )]"
								@gwmincategorybuttonwidth = 106
								@gwmaxcategorybuttonwidth = 112
								@gwmincategorybuttonheight = 28
								@gwmaxcategorybuttonheight = 34
								#widget = {
								#	size = { 0 35 } #Don't Ask
								#}
								category_tab = {
									name = "pops_tab2"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[And( Not( GetVariableSystem.HasValue('province_tabs', 'pops')), GetVariableSystem.Exists('province_tabs'))]" }
									blockoverride "MaxVisible" { visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" {
										text = "[ProvinceWindow.GetProvince.GetPopulation('total')]/[ProvinceWindow.GetProvince.GetPopulationCapacityValue]"
									}
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/pop_type.dds"
										size = { 24 24 }
										#visible = no

									}
									tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'pops')]"
									}
								}
								category_tab = {
									name = "buildings_tab2"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'buildings'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'buildings')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" {
										text = "[ProvinceWindow.GetProvince.GetTotalAmountOfBuildingLevels]/[ProvinceWindow.GetProvince.GetAllowedAmountOfBuildingLevels]"
									}
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/building_slot.dds"
										size = { 24 24 }
										#visible = no

									}
									tooltip = "[ProvinceWindow.GetProvince.GetBuildingLevelInformation]"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'buildings')]"
									}
								}
								category_tab = {
									name = "tactical_tab2"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'tactical'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon"
									{
										texture = "gfx/interface/icons/shared_icons/tactical.dds"
										visible = yes
									}
									tooltip = "TACTICAL_TAB"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'tactical')]"
									}
								}
								category_tab = {
									name = "GW_tab"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'great_works'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'great_works')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon"
									{
										texture = "gfx/interface/province/gw_map_icon.dds"
									}
									tooltip = "GW_TAB"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'great_works')]"
									}
								}
							}
						}

					}
					vbox = {
						name = "pops_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]"
						state = {
							name = "show_pops_tab"

							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab

						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0

							flowcontainer = {
								using = NoninteractableBG
								position = { 8 16 }
								direction = vertical
								spacing = 4
								ignoreinvisible = yes
								tag = {
									using = BaseFontS
									using = Black_FontColor
									alpha = 0.55
									text = "HOLDING_OWNER_TEXT"
									align = center
									max_width = 124
									visible = "[Not(ProvinceWindow.GetHoldingsOwners.IsValid)]"
								}
								tag = {
									using = BaseFontS
									using = Black_FontColor
									text = "HOLDING_OWNER_TEXT"
									align = center
									max_width = 124
									visible = "[ProvinceWindow.GetHoldingsOwners.IsValid]"
								}
								cpt_button = {
									size = { 64 94 }
									#visible = "[ProvinceWindow.GetHoldingsOwners.IsValid]"
									datacontext = "[ProvinceWindow.GetHoldingsOwners]"
									parentanchor = hcenter
								}
							}
							flowcontainer = {
								parentanchor = right
								position = { 4 16 }
								spacing = 0
								pop_widget = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('nobles')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/nobles_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('nobles') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('nobles'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/nobles.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('nobles')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('nobles')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('nobles'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'nobles' )]"
									}
								}
								pop_widget = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('citizen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/citizen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('citizen') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('citizen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/citizen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('citizen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('citizen')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('citizen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'citizen' )]"
									}
								}
								pop_widget = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('freemen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/freemen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('freemen') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('freemen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/freemen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('freemen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('freemen')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('freemen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'freemen' )]"
									}
								}
								pop_widget = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('tribesmen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/tribesmen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('tribesmen') )]"
									}

									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/tribesmen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('tribesmen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('tribesmen')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'tribesmen' )]"
									}
								}
								pop_widget = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('slaves')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/slaves_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('slaves') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/slaves.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('slaves')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('slaves')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'slaves' )]"
									}
								}
							}
							text_button_square_highlighted = {
								size = { 200 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.ShowPopDetails('slaves')]" }
								blockoverride "Center_text" { text = "POP_SCREEN" max_width = 162 }
								tooltip = "OPEN_POPS_VIEW_TT"
								parentanchor = bottom|right
								position = { -3 -16 }
							}
							text_button_square_highlighted = {
								size = { 200 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.OpenMovePopsWindow]" }
								blockoverride "Center_text" { text = "MOVE_SLAVES" max_width = 162 }
								parentanchor = bottom|left
								position = { -3 -16 }
								visible = "[ProvinceWindow.IsPlayerProvince]"
							}
						}
					}
					vbox = {
						name = "buildings_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.HasValue( 'province_tabs', 'buildings')]"
						state = {
							name = "show_buildings_tab"

							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab
						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 6 6 }
							margin_bottom = 0

							scrollarea = {
								size = { 100% 100% }
								scrollbarpolicy_horizontal = always_off

								scrollbar_vertical = {
									using = VerticalScrollBar
								}

								scrollwidget = {
									dynamicgridbox = {
										name = "possible_buildings_grid"
										position = { 0 0 }
										datamodel_wrap = 2

										datamodel = "[ProvinceWindow.GetPossibleBuildings]"

										item = {
											widget = {
												size = { 54 72 }
												building_item_button = {
													blockoverride "On_click" {
														onclick = "[BuildingItem.Build]"
														enabled = "[Or( BuildingItem.CanBuild, BuildingItem.HasQueue )]"
														onrightclick = "[BuildingItem.CancelOrDestroy]"
													}
													blockoverride "Text" { text = "[BuildingItem.GetLevel]" }
													blockoverride "ExtraText"
													{
														visible = "[BuildingItem.HasQueue]"
														text = "+[BuildingItem.GetQueueSize]"
													}
												}
											}
										}

									}
								}
							}
							scrollarea = {
								size = { 280 34 }
								scrollbarpolicy_horizontal = always_off
								parentanchor = bottom
								scissor = yes
								position = { 0 -13 }
								scrollbar_vertical = {
									using = VerticalScrollBar
								}
								using = VerticalScrollAreaCutOff
								scrollwidget = {
									overlappingitembox = {
										name = "queued_buildings_grid"
										size = { 100% 100% }
										#datamodel_wrap = 1

										datamodel = "[ProvinceWindow.GetQueuedBuildings]"

										item = {
											button = {
												gfxtype = togglepushbuttongfx
												size = { 32 32 }
												onrightclick = "[BuildingItem.Cancel]"
												enabled = "[BuildingItem.CanCancel]"
												icon = {
													size = { 32 32 }
													texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
												}
												tooltip = "[BuildingItem.GetCancelInfo]"
											}
										}

									}
								}
							}
							text_button_square_highlighted = {
								visible = "[HasDlc('Heirs of Alexander')]"
								parentanchor = bottom|right
								position = { -6 -16 }
								size = { 148 0 }
								blockoverride "Center_text" { text = "OPEN_GREAT_WORKS" }
								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.OpenGreatWorkWindowBuild]"
									enabled = "[ProvinceWindow.CanBuildGreatWork]"
									tooltip = "[ProvinceWindow.CanBuildGreatWorkTooltip]"
								}
							}
						}

					}
					vbox = {
						name = "tactical_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]"
						state = {
							name = "show_tactical_tab"

							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab

						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0

							flowcontainer = {
								parentanchor = bottom
								position = { 0 -16 }
								spacing = 8
								ignoreinvisible = yes
								icon_button_square = {
									size = { 42 42 }

									datacontext = "[GetScriptedGui('mercenary_city_button')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"

									blockoverride "On_click"
									{
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										tooltip = "MERC_CITY_BUTTON"
									}

									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
								}
								icon_button_square = {
									size = { 42 42 }

									datacontext = "[GetScriptedGui('league_city_button')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"

									blockoverride "On_click"
									{
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										tooltip = "LEAGUE_CITY_BUTTON"
									}

									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
								}
							}
							margin_widget = {
								size = { 100% 40 }
								position = { 0 -1 }
								hbox = {
									layoutpolicy_horizontal = expanding
									icon_and_text = {
										name = "supply_limit"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetSupplyLimitDescription]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/supply_limit.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetSupplyLimit|2]"
										}
									}
									icon_and_text = {
										name = "barbies"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetBarbarianPowerShortTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/barbarian_power.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetBarbarianPower|2]"
										}
									}
									icon_and_text = {
										name = "garrison"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetGarrisonTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/garrison.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetGarrison]"
										}
									}
									icon_and_text = {
										name = "fort_level"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetFortLevelTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/fort_frames.dds"
											framesize = { 50 50 }
											frame = "[ProvinceWindow.GetProvince.GetFortLevel]"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetFortLevel]"
										}
									}

								}
							}

							margin_widget = {
								size = { 100% 40 }
								position = { 0 40 }
								hbox = {
									layoutpolicy_horizontal = expanding
									widget = {
										size = { @stats_icon_width 0 }
									}
									widget = {
										size = { @stats_icon_width 0 }
									}
									icon_and_text = {
										name = "fort_defense"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetLocalDefensiveTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_defensive.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetLocalDefensive|+=%]"
											fontsize = 13
											fontsize_min = 12
										}
									}
									icon_and_text = {
										#name = "fort_level"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetState.GetFortsDesc]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/fort_limit.dds"
											framesize = { 50 50 }
											frame = "[ProvinceWindow.GetProvince.GetFortLevel]"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetState.GetFortsCurrent]/[ProvinceWindow.GetState.GetFortsLimit]"
										}
									}

								}
							}

							margin_widget = {
								size = { 198 80 }
								position = { -2 -16 }
								parentanchor = right|bottom
								name = "recruit navies"
								tooltip = "BUILD_NAVIES_TT"
								enabled = "[ProvinceWindow.CanBuildShips]"
								visible = "[ProvinceCanHavePort(ProvinceWindow.GetProvince)]"

								background = {
									texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
									shaderfile = "gfx/FX/pdxgui_default.shader"
									spriteType = corneredtiled
									spriteborder = { 8 8 }
									margin_left = 4
									margin_bottom = 4
									alpha = 0.5
								}

								margin_widget = {
									size = { 100% 100% }
									margin = { 2 2 }
									margin_top = 1
									icon = {
										using = button_tiled_texture
										spriteType = Corneredtiled
										spriteborder = { 200 200 }
										size = { 100% 100% }
										framesize = { 200 200 }
									}
								}
								margin_widget = {
									size = { 100% 100% }
									margin = { 5 5 }
									margin_top = 4
									button = {
										size = { 100% 100% }
										texture = "gfx/interface/icons/province_window/recruit_navies.dds"
										onclick = "[ProvinceWindow.ShowBuildNavies]"
										modify_texture = {
											name = "Alpha"
											texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
											blend_mode = alphamultiply
											spriteType = Corneredtiled
											spriteborder = { 1 0 }
										}
									}
								}

							}

						}
					}
					vbox = {
						name = "great_works_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.HasValue('province_tabs', 'great_works')]"
						state = {
							name = "show_tactical_tab"

							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab

						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0

							widget = { #Great Wonder under construction
								size = { 100% 100% }
								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[And(ProvinceWindow.HasGreatWork, Not(GreatWork.IsCompleted))]"

								flowcontainer = {
									position = { 0 6 }
									spacing = 4
									ignoreinvisible = yes

									textbox = {
										autoresize = yes
										using = BaseFontM
  		 								using = Black_FontColor
  		 								parentanchor = vcenter
										text = "[GreatWork.GetName]"
									}
									widget = {
										size = { 12 22 }
										parentanchor = vcenter
										icon = {
											texture = "gfx/interface/base_parts/macro_divider.dds"
											size = { 12 2 }
											position = { 0 3 }
											parentanchor = center
										}
									}
									textbox = {
										autoresize = yes
										using = BaseFontM
  		 								using = Black_FontColor
  		 								parentanchor = vcenter
										text = "BEING_BUILT"
									}
								}

								container = {
									parentanchor = bottom
									position = { 0 -14 }
									fixed_size_progressbar = {
										visible = "[And( Not(GreatWork.IsAncientWonder), GreatWork.IsMakingProgress)]"
										#visible = "[GreatWork.IsMakingProgress]"
										blockoverride "size" { size = { 180 7 } }
										#size = { 180 7 }

										blockoverride "Value" { value = "[GreatWork.GetConstructionProgress]" }
										tooltip = "[GreatWork.GetConstructionTooltip]"
									}

									fixed_size_progressbar = {
										visible = "[Not(GreatWork.IsMakingProgress)]"
										blockoverride "size" { size = { 180 7 } }
										#size = { 180 7 }

										blockoverride "Value" { value = "[GreatWork.GetConstructionProgress]" }
										tooltip = "[GreatWork.GetConstructionTooltip]"
									}
								}

								widget = { # Trade Goods
									visible = "[Not(GreatWork.IsAncientWonder)]"
									size = { 80 36 }
									position = { 90 -24 }
									parentanchor = bottom
									tooltip = "GW_GOODS_REQ_TT"

									flowcontainer = {
										position = { 6 0 }
										spacing = 4

										datamodel = "[ProvinceWindow.GetGreatWorkRequiredTradeGoods]"
										item = {
											icon = {
												size = { 32 32 }

												texture = "[GetTradeGoodsIcon(TradeGoodsGlue.GetTradeGood)]"

												tooltip = "[Localize(TradeGoodsGlue.GetTradeGood.GetKey)]"

												icon = {
													parentanchor = bottom|right
													size = { 60% 60% }
													visible = "[GreatWork.IsMissingTradeGoods(TradeGoodsGlue.GetTradeGood)]"
													tooltip = "GW_MISSING_TRADEGOODS_TT"
													texture = "gfx/interface/icons/shared_icons/tick_cross.dds"
													framesize = { 25 25 }
												}
											}
										}
									}
								}

								cpt_button = {
									visible = "[Not(GreatWork.IsAncientWonder)]"
									name = "portrait"
									datacontext = "[GreatWork.GetLeader]"
									tooltip = "[GreatWork.GetLeaderTooltip]"
									position = { 0 44 }
									size = { 80 124 }
									#button = {
									#	parentanchor = bottom|right
									#	position = {3 2}
									#	size = { 30 30 }
									#
									#	distribute_visual_state = no
									#	tooltip = "Change Leader"
									#
									#	onclick = "[ClickHighlight('btn_great_work_replace_leader')]"
									#	onclick = "[ProvinceWindow.OnClickChangeLeader]"
									#	texture = "gfx/interface/buttons/button_round_40.dds"
									#	icon = {
									#		texture = "gfx/interface/icons/shared_icons/change.dds"
									#		parentanchor = hcenter|vcenter
									#		size = { 60% 60% }
									#		position = { 0 0 }
									#	}
									#	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									#	#oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									#
									#	icon = {
									#		using = highlight_button_circle_45
									#		visible = "[ShouldHighlight('btn_great_work_replace_leader')]"
									#	}
									#}
								}

								icon = {
									visible = "[GreatWork.IsAncientWonder]"
									position = { -8 62 }
									size = { 120 120 }
									texture = "gfx/interface/icons/great_work/panel/construct_wonder.dds"
								}

								flowcontainer = { #Workpower
									visible = "[Not(GreatWork.IsAncientWonder)]"
									direction = vertical
									spacing = 8
									parentanchor = right
									position = { -8 34 }
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_freemen }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)0')]" }
									}
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_tribal }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)1')]" }
									}
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_slaves }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)2')]" }
									}
								}

								flowcontainer = { #Effects
									position = { 94 48 }
									direction = vertical
									spacing = 0
									using = NoninteractableBG
									blockoverride "Margins"
									{
										margin = { 10 10 }
									}
									datamodel = "[GreatWork.GetEffects]"

									item = {
										margin_widget = {
											size = { 220 30 }

											tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"
											widget = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												size = { 30 30 }
												parentanchor = vcenter|left

												icon = {
													parentanchor = vcenter|hcenter
													size = { 85% 85% }
													texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

													icon = {
														parentanchor = bottom|right
														size = {60% 60%}
														texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
													}
												}
											}

											icon = {
												visible = "[Not(GreatWorkEffectSelection.IsSet)]"
												size = {30 30}
												parentanchor = vcenter|left
												texture = "gfx/interface/icons/shared_icons/ideas.dds"
											}

											icon_and_text = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												parentanchor = vcenter
												position = { 26 0 }
												size = { 190 40 }
												max_width = 190
												blockoverride "Text"
												{
													text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
												}
												blockoverride "Icon"
												{
													visible = no
												}
											}
										}
									}
								}

								text_button_square_highlighted = { #Update Button
									parentanchor = bottom|right
									position = { 0 -16 }
									size = { 160 28 }

									visible = "[And( And( HasDlc('Heirs of Alexander'), Not(GreatWork.IsAncientWonder) ), ProvinceWindow.IsPlayerProvince )]"

									blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
									tooltip = "GW_BUILD_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }

								}
								#icon = {
								#	texture = "gfx/interface/icons/shared_icons/change.dds"
								#	size = { 22 22 }
								#	color = { 0 0 0 1 }
								#	position = { -20 -15 }
								#	parentanchor = bottom|right
								#	visible = "[And(HasDlc('Heirs of Alexander'),Not(GreatWork.IsAncientWonder))]"
								#}
							}

							widget = { #Existing Great Wonder
								size = { 100% 100% }
								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[And(ProvinceWindow.HasGreatWork, GreatWork.IsCompleted)]"

								container = {
									position = { 0 6 }

									textbox = {
										autoresize = yes
										using = BaseFontM
  		 								using = Black_FontColor

										text = "[GreatWork.GetName]"
									}
								}

								flowcontainer = { # Tier Progress
									position = { 0 -15 }
									parentanchor = bottom|left
									widgetanchor = bottom|left

									tooltip = "[GetGreatWorkPrestigeTooltip(GreatWork.GetPrestige)]"

									great_work_tier = {
										size = {1 30 }
										blockoverride "progressbar_size"
										{
											size = { 0 0 }
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_1', GreatWork.GetPrestige)]"
										}
									}
									great_work_tier = {
										size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_2')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_2')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_2', GreatWork.GetPrestige)]"
										}
									}
									great_work_tier = {
									size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_3')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_3')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_3', GreatWork.GetPrestige)]"
										}
									}
									great_work_tier = {
									size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_4')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_4')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_4', GreatWork.GetPrestige)]"
										}
									}
								}

								flowcontainer = {
									parentanchor = top|left
									widgetanchor = top|left
									position = {-5 44 }
									spacing = 4
									widget = { #Image
										size = { 130 130 }

										icon = {
											parentanchor = vcenter|hcenter
											size = { 100% 100% }
											position = { 0 -10 }
											texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"

											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}
									}

									flowcontainer = { #Effects
										direction = vertical
										spacing = 0
										using = NoninteractableBG
										blockoverride "Margins"
										{
											margin = { 6 10 }
										}
										datamodel = "[GreatWork.GetEffects]"

										item = {
											margin_widget = {
												size = { 228 30 }

												tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"
												widget = {
													visible = "[GreatWorkEffectSelection.IsSet]"
													size = { 30 30 }
													parentanchor = vcenter|left

													icon = {
														parentanchor = vcenter|hcenter
														size = { 85% 85% }
														texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

														icon = {
															parentanchor = bottom|right
															size = {60% 60%}
															texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
														}
													}
												}

												icon = {
													visible = "[Not(GreatWorkEffectSelection.IsSet)]"
													size = {30 30}
													parentanchor = vcenter|left
													texture = "gfx/interface/icons/shared_icons/ideas.dds"
												}

												icon_and_text = {
													visible = "[GreatWorkEffectSelection.IsSet]"
													parentanchor = vcenter
													position = { 30 0 }
													size = { 197 40 }
													max_width = 197
													blockoverride "Text"
													{
														text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
													}
													blockoverride "Icon"
													{
														visible = no
													}
												}
											}
										}
									}
									#CF Can we do vertical prestige bar?
								}

								text_button_square = { #Update Button
									parentanchor = bottom|right
									widgetanchor = bottom|right
									position = {-5 -12}
									size = { 160 28 }

									visible = "[And( And( HasDlc('Heirs of Alexander'), Not(GreatWork.IsAncientWonder) ), ProvinceWindow.IsPlayerProvince )]"

									blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
									tooltip = "GW_BUILD_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }
								}

								text_button_square = { #Remove Ancient Wonder
									parentanchor = bottom|right
									widgetanchor = bottom|right
									position = {-5 -12}
									size = { 160 28 }

									visible = "[And( GreatWork.IsAncientWonder, ProvinceWindow.IsPlayerProvince )]"

									blockoverride "Center_text" { text = "CANCEL_OR_DESTROY_GW_ADJECTIVE_DESTROY" }
									tooltip = "CANCEL_OR_DESTROY_GW_BUTTON_DESTROY_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.DestroyGreatWork]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Province/sfx_ui_province_destroy_building" }
								}
							}

							flowcontainer = {
								parentanchor = right
								position = { -4 6 }
								spacing = 4
								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
								icon_button_square = {  #Change GW Left
									size = { 30 30 }

									blockoverride "Icon" {
										texture = "gfx/interface/buttons/arrow_left.dds"
										size = { 28 28 }
									}

									tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkLeft]" }
								}
								icon_button_square = {  #Change GW Left
									size = { 30 30 }
									#position = {40 0}
									blockoverride "Icon" {
										texture = "gfx/interface/buttons/arrow_right.dds"
										size = { 30 30 }
									}

									tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkRight]" }
								}
							}
						}
					}
				}
			}
		}
		container = {
			position = { 0 85 }

			icon = {
				size = { 120 45 }
				position = { 0 0 }
				using = flat_background_white

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 60 }
				}
			}

			icon_and_text = {
				position = { 0 2 }
				size = { 105 0 }
				tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
				#tooltip_verticalbehavior = flip
				blockoverride "Icon"
				{
					visible = no
				}
				blockoverride "Text"
				{
					text = "[ProvinceWindow.GetProvince.GetCivilizationValue|0]/[ProvinceWindow.GetProvince.GetLocalCivilizationCap|0]"
				}
			}

			icon = {
				size = { 50 50 }
				texture = "gfx/interface/icons/shared_icons/civilization.dds"
				position = { 0 -10 }
				tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
			}
		}

		fixed_size_progressbar = {
			size = { @window_width 10 }
			margin = { 10 0 }
			margin_right = 12
			progressbar = {
				size = { 100% 100% }
				value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetLocalCivilizationCap )]"
				marker = {
					container = {
						name = "progress_marker_2"
						tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
						widget = {
							size = { 24 48 }
							position = { 0 -7 }
							icon = {
								using = flat_background_black
								size = { 3 10 }
								parentanchor = vcenter|left
								position = { 1 -12 }

							}
						}
					}
				}
			}
			blockoverride "Value" {
				value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetCivilizationValue )]"
			}
			tooltip = "[ProvinceWindow.GetProvince.GetCivilizationTooltip]"
			using = tooltip_above
			position = { 0 124 }
			parentanchor = right
			#using = DropShadow
			blockoverride "ProgressAlpha" { alpha = 0.6 }
		}

		margin_widget = {
	            position = { 0 32 }
	            margin_left = 6
	            margin_widget = {
	                scissor = yes
	                resizeparent = yes
	                flowcontainer = {
	                    #margin_top = 2
	                    margin_left = 2
	                    ignoreinvisible = yes
	                    alpha = 1
	                    scale = 0.75
	                    position = { -36 -2 }
	                    spacing = -50
	                    resizeparent = yes
	                    icon_button_province = {
	                        size = { 144 66 }
	                        visible = "[ProvinceWindow.CanTransferOccupation]"
	                        blockoverride "Icon" { texture = "gfx/interface/province/transfer_occupation.dds" }
	                        blockoverride "On_click"
	                        {
	                            enabled = "[ProvinceWindow.CanTransferOccupation]"
	                            onclick = "[ProvinceWindow.TransferOccupation]"
	                        }
	                        tooltip = "[ProvinceWindow.GetTransferOccupationTooltip]"
	                    }

	                    icon_button_province = {
	                        size = { 144 66 }
	                        name = "MigrateButton"
	                        visible = "[ProvinceWindow.ShowMigrateButton]"
	                        enabled = "[ProvinceWindow.CanMigrate]"
	                        blockoverride "On_click" { onclick = "[ProvinceWindow.Migrate]" }
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/migrate.dds" }
	                        tooltip = "[ProvinceWindow.GetMigrateTooltip]"
	                        layoutpolicy_horizontal = fixed
													shortcut = "force_march"
	                    }

	                    icon_card_province = {
	                        size = { 144 66 }
	                        visible = "[ProvinceWindow.GetProvince.IsHolySite]"
	                        layoutpolicy_horizontal = fixed
	                        blockoverride "Icon" { texture = "[GetHolySiteRankIcon( ProvinceWindow.GetProvince.GetRank )]" }
	                        tooltip = "[ProvinceWindow.GetHolySiteTooltip]"
	                    }

	                    icon_button_province = {
	                        size = { 144 66 }
	                        visible = "[And( Not( ProvinceWindow.GetProvince.IsHolySite ), ProvinceWindow.IsPlayerProvince )]"
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/holy_site_any.dds" }
													enabled = "[ProvinceWindow.CanEnactHolySite]"
	                        blockoverride "On_click"
	                        {
	                            onclick = "[ProvinceWindow.ToggleSelectHolySiteWindow]"
	                        }
	                        tooltip = "[ProvinceWindow.GetEnactHolySiteTooltip]"
	                    }

	                    icon_card_province = {
	                        size = { 144 66 }
	                        visible = "[ProvinceWindow.GetProvince.IsCapital]"
	                        layoutpolicy_horizontal = fixed
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/country_capital.dds" }
	                    }

	                    icon_button_province = {
	                        size = { 144 66 }
	                        name = "ColonizeButton"
	                        visible = "[Not( ProvinceWindow.GetProvince.HasOwner )]"
	                        enabled = "[ProvinceWindow.CanBeColonized]"
	                        blockoverride "On_click" { onclick = "[ProvinceWindow.QuickColonize]" }
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/alert_colonize_province.dds" }
	                        tooltip = "[ProvinceWindow.GetColonizeTooltip]"
	                        layoutpolicy_horizontal = fixed
	                    }

	                    icon_button_province = {
	                        size = { 144 66 }
	                        datacontext = "[GetScriptedGui('move_capital_button')]"
	                        visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsCapital ) )]"
	                        enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        blockoverride "On_click" { onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]" }
	                        tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	                        layoutpolicy_horizontal = fixed
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/country_capital.dds" }
	                    }

	                    icon_button_province = {
	                        size = { 144 66 }
	                        datacontext = "[GetScriptedGui('move_province_capital_button')]"
	                        visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsStateCapital ) )]"
	                        enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        blockoverride "On_click" { onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]" }
	                        tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	                        layoutpolicy_horizontal = fixed
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/state_capital.dds" }
	                    }

	                    icon_card_province = {
	                        size = { 144 66 }
	                        visible = "[And(ProvinceWindow.GetProvince.IsStateCapital, Not(ProvinceWindow.GetProvince.IsCapital))]"
	                        layoutpolicy_horizontal = fixed
	                        blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/state_capital.dds" }
							tooltip = "[ProvinceWindow.GetProvince.GetStateCapitalTooltip]"
						}
	                }
	            }
	        }
	}

	base_window = {
		movable = yes
		state = {
			name = reset_territories
			position = { 800 -15 }
		}
		position = { 800 -15 }
		visible = "[GetVariableSystem.Exists('show_territories')]"

		margin_widget = {
			size = { 100% 100% }
			margin = { 0 0 }
			#margin_top = 35
			icon = {
				size = { 100% 100% }
				using = flat_background_white
				using = border_medium_torn_alpha
			}
		}

		container = { # city list
			name = "provinces_in_state"
			minimumsize = { 493 -1 }
			allow_outside = no
			alwaystransparent = no
			resizeparent = yes

			flowcontainer = {
				direction = vertical
				position = { 0 12 }
				margin_bottom = 13

				flowcontainer = {
					margin_bottom = 8
					spacing = 5

					widget = {
						size = { 38 20 }
					}

					widget = {
						size = { 70 20 }

						icon = {
							parentanchor = vcenter
							position = { 10 -3 }
							texture = "gfx/interface/icons/shared_icons/pop_type.dds"
							size = { 25 25 }
						}
					}

					widget = {
						size = { 55 20 }

						icon = {
							parentanchor = vcenter
							position = { 6 0 }
							texture = "gfx/interface/icons/shared_icons/building_slot.dds"
							size = { 25 25 }
						}
					}

					button = {
						size = { 35 20 }
						onclick = "[GetVariableSystem.Toggle('slaves_needed')]"

						button_round_inverted = {
							size = { 30 30 }
							parentanchor = vcenter
							position = { 0 -1 }

							blockoverride "On_click" {
								onclick = "[GetVariableSystem.Toggle('slaves_needed')]"
							}

							blockoverride "Icon" {
								using = icon_pop_slaves
							}
							tooltip = "show_slave_surplus"
						}
					}

					# widget = {
					# 	size = { 40 20 }
					#
					# 	icon = {
					# 		parentanchor = vcenter
					# 		position = { 0 0 }
					# 		using = icon_pop_slaves
					# 		scale = 0.5
					# 	}
					# }
				}

				scrollarea = {
					minimumsize = { 481 -1 }
					maximumsize = { 0 396 }
					scrollbarpolicy_horizontal = always_off
					using = VerticalScrollAreaCutOff

					scrollbar_vertical = {
						using = VerticalScrollBar
					}

					scrollwidget = {
						fixedgridbox = {
							resizeparent = yes
							addrow = 28
							addcolumn = 480

							datamodel = "[ProvinceWindow.GetProvinceList]"

							item = {
								widget = {
									size = { 480 32 }

									list_button = {
										position = { 10 1 }
										size = { 100% 30 }
										onclick = "[SelectProvinceItem.OnClick]"
										enabled = "[SelectProvinceItem.IsPlayerProvince]"

										onmousehierarchyenter = "[SetHighlightProvince(SelectProvinceItem.GetProvince.GetId)]"
										onmousehierarchyleave = "[ClearHighlightColors]"
										onclick = "[PdxGuiTriggerAllAnimations('trigger_move_pop')]"

										alpha = 0.5
									}

									button = {
										position = { 0 0 }
										onclick = "[SelectProvinceItem.OnClick]"
										size = { 100% 32 }
										onmousehierarchyenter = "[SetHighlightProvince(SelectProvinceItem.GetProvince.GetId)]"
										onmousehierarchyleave = "[ClearHighlightColors]"
										onclick = "[PdxGuiTriggerAllAnimations('trigger_move_pop')]"
									}

									flowcontainer = {
										position = { 10 1 }
										ignoreinvisible = yes

										country_flag = {
											datacontext = "[SelectProvinceItem.GetProvince.GetOwner]"
											tooltip = "COUNTRY_SHORTHAND_INFO"

											blockoverride "flag"
											{
												texture = "[SelectProvinceItem.GetProvince.GetOwner.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
												frame = "[SelectProvinceItem.GetProvince.GetOwner.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
												framesize = { 56 56 }
											}

											blockoverride "size"
											{
												size = { 28 28 }
											}

											blockoverride "click"
											{
												#onclick = "[OpenDiplomacy(SelectProvinceItem.GetProvince.GetOwner)]"
											}

											blockoverride "hover" {
											}
										}

										spacing = 5

										widget = {
											size = { 70 30 }

											flowcontainer = {
												tooltip = "[SelectProvinceItem.GetProvince.GetPopulationCapacityInfo]"
												tag = {
													text = "[SelectProvinceItem.GetProvince.GetPopulation('total')]"
													minimumsize = { 20 30 }
													alpha = "[TransparentIfZero(SelectProvinceItem.GetProvince.GetPopulation('total'))]"
												}

												tag = {
													text = "/[SelectProvinceItem.GetProvince.GetPopulationCapacityValue]"
													minimumsize = { 15 30 }
													alpha = 0.7
												}
											}
										}
										widget = {
											size = { 55 30 }

											flowcontainer = {
												ignoreinvisible = yes
												tooltip = "[SelectProvinceItem.GetProvince.GetBuildingLevelInformation]"
												tag = {
													text = "[SelectProvinceItem.GetProvince.GetTotalAmountOfBuildingLevels]"
													minimumsize = { 15 30 }
													visible = "[GreaterThanOrEqualTo_int32(SelectProvinceItem.GetProvince.GetTotalAmountOfBuildingLevels, SelectProvinceItem.GetProvince.GetAllowedAmountOfBuildingLevels)]"
												}

												tag = {
													text = "#y [SelectProvinceItem.GetProvince.GetTotalAmountOfBuildingLevels]"
													minimumsize = { 15 30 }
													visible = "[LessThan_int32(SelectProvinceItem.GetProvince.GetTotalAmountOfBuildingLevels, SelectProvinceItem.GetProvince.GetAllowedAmountOfBuildingLevels)]"
												}
												tag = {
													text = "/[SelectProvinceItem.GetProvince.GetAllowedAmountOfBuildingLevels]"
													minimumsize = { 20 30 }
												}
											}
										}


										widget = {
											size = { 50 30 }
											visible = "[Not(GetVariableSystem.Exists('slaves_needed'))]"

											tag = {
												alpha = "[TransparentIfFalse(SelectProvinceItem.GetProvince.HasPopulation('slaves'))]"
												minimumsize = { 20 30 }
												text = "[SelectProvinceItem.GetProvince.GetPopulation('slaves')]"
												align = right|nobaseline
												tooltip = "[SelectProvinceItem.GetProvince.GetPopulationTooltip('slaves')]"
											}
										}

										widget = {
											size = { 75 30 }
											visible = "[GetVariableSystem.Exists('slaves_needed')]"

											flowcontainer = {
												ignoreinvisible = yes
												tag = {
													alpha = "[TransparentIfFalse(SelectProvinceItem.GetProvince.HasPopulation('slaves'))]"
													minimumsize = { 20 30 }
													text = "[SelectProvinceItem.GetProvince.GetPopulation('slaves')]"
													align = right|nobaseline
												}
												# tag = {
												# 	datacontext = "[GetScriptedGui('farmland_terrain')]"
												# 	visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(SelectProvinceItem.GetProvince.MakeScope).End)]"
												# 	alpha = 0.7
												# 	text = "/[Add_CFixedPoint( GuiScope.SetRoot( SelectProvinceItem.GetProvince.MakeScope ).ScriptValue('slaves_needed'), '(CFixedPoint)-2')|0]"
												# }

												tag = {
													#datacontext = "[GetScriptedGui('farmland_terrain')]"
													#visible = "[Not(ScriptedGui.IsShown(GuiScope.SetRoot(SelectProvinceItem.GetProvince.MakeScope).End))]"
													alpha = 0.7
													text = "/[GuiScope.SetRoot( SelectProvinceItem.GetProvince.MakeScope ).ScriptValue('slaves_needed')|0]"
												}

											}
										}

										widget = {
											tooltip = "[SelectProvinceItem.GetProvince.GetTradeGoods.GetTooltip]"
											size = { 50 30 }

											tag = {
												text = "[SelectProvinceItem.GetProvince.GetNumGoodsProduced]"
												widgetanchor = right
											}

											icon = {
												position = { 5 0 }
												size = { 27 27 }
												texture = "[GetTradeGoodsIcon(SelectProvinceItem.GetProvince.GetTradeGoods)]"
											}
										}
										tag = {
											text = "[SelectProvinceItem.GetProvince.GetNameWithNoTooltip]"
											maximumsize = { 100 -1 }
										}
									}

									flowcontainer = {
										parentanchor = right|vcenter
										ignoreinvisible = yes

										icon = {
											visible = "[SelectProvinceItem.GetProvince.IsHolySite]"
											texture = "[GetHolySiteRankIcon( SelectProvinceItem.GetProvince.GetRank )]"
											size = { 25 25 }
											tooltip = "holy_site"
										}
										icon = {
											visible = "[SelectProvinceItem.GetProvince.IsStateCapital]"
											texture = "gfx/interface/icons/shared_icons/state_capital.dds"
											tooltip = "[ProvinceWindow.GetProvince.GetStateCapitalTooltip]"
											size = { 25 25 }
										}
										icon = {
											parentanchor = vcenter
											size = { 20 20 }
											texture = "[GetProvinceRankIcon( SelectProvinceItem.GetProvince.GetRank )]"
											visible = "[SelectProvinceItem.GetProvince.HasCityStatus]"
											tooltip = "[SelectProvinceItem.GetProvince.GetRank.GetName]"
										}
									}
								}
							}
						}
					}

					widget = {
						size = { 0 15 }
					}
				}
			}
		}

		# button_round = {
		# 	size = { 30 30 }
		# 	position = { 15 5 }
		#
		# 	blockoverride "On_click" {
		# 		onclick = "[GetVariableSystem.Toggle('slaves_needed')]"
		# 	}
		#
		# 	blockoverride "Icon" {
		# 		texture = "gfx/interface/icons/modifiers/local_goods_from_slaves.dds"
		# 	}
		# 	tooltip = "show_slave_surplus"
		# }


		flowcontainer = {
			parentanchor = right
			position = { -10 5 }
			spacing = 3

			button_round_inverted = {
				size = { 30 30 }

				blockoverride "Icon" {
					texture = "gfx/icons/reset.dds"
				}
				blockoverride "On_click" {
					size = { 22 22 }
					onclick = "[PdxGuiTriggerAllAnimations('reset_territories')]"
				}
				tooltip = "reset_position"
			}

			button_round_inverted = {
				size = { 30 30 }

				blockoverride "Icon" {
					texture = "gfx/icons/close.dds"
				}
				blockoverride "On_click" {
					shortcut = "close_window"
					position = { 1 1 }
					size = { 26 26 }
					onclick = "[GetVariableSystem.Toggle('show_territories')]"
					tooltip = "CLOSE"
				}
			}
		}
	}
}
